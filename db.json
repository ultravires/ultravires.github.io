{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":0},{"_id":"source/img/wechat.jpeg","path":"img/wechat.jpeg","modified":0,"renderable":0},{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/404.jpg","path":"img/404.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/contextmenu/contextmenu.css","path":"css/contextmenu/contextmenu.css","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/contextmenu/contextmenu.js","path":"js/contextmenu/contextmenu.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/_data/essay.yml","hash":"c160bcb96f2c2588420247e964b4b377b83666c6","modified":1715830799603},{"_id":"source/_posts/Butterfly-主题修改：增加波浪效果.md","hash":"58c1b8ee6968763740c013fdfc3a71a89672607c","modified":1715830799603},{"_id":"source/_data/link.yml","hash":"461eafa2ef40fbadf54c1d49b37a12b7a16edce8","modified":1715830799603},{"_id":"source/_posts/ECMAScript6 Promise.md","hash":"29633978b472b471876456d82b82ea7104425d67","modified":1715834086838},{"_id":"source/_posts/Github-Actions-自动部署-Hexo-博客.md","hash":"e71c93cbba901af3058cf296ada67938e9457fe4","modified":1715830799604},{"_id":"source/_posts/QtApplication 国产化适配.md","hash":"e238d258df2fa097efbe1a2e171cd440554887ce","modified":1715834052657},{"_id":"source/_posts/Github-Pages-｜-创建自己的网站.md","hash":"9e340adb5f282e2dd3b50e84a22043068a538973","modified":1715830799604},{"_id":"source/_posts/卷不动了，原来前端要学那么多东西.md","hash":"6890777219cb2d4c18dff4698764a929b3f6c6ae","modified":1715830799605},{"_id":"source/_posts/算法题解-n-数之和.md","hash":"9bd60842e270b74b419cdf99b140c39adb4ce773","modified":1715834102417},{"_id":"source/_posts/使用-Clipboard-API-复制图像.md","hash":"9e9bcb2bf738c9c00c64da017b23353ed61b22f1","modified":1715830799605},{"_id":"source/_posts/图片懒加载.md","hash":"d164805cc1a21b14827d78430712ef845dc37035","modified":1715830799605},{"_id":"source/_posts/终于割掉了那坨肉.md","hash":"f14f13f815e464e8774036aab2cf007637ec1e2d","modified":1715830799606},{"_id":"source/categories/index.md","hash":"85c26b8d14333f97fbdd8309153d11ec19e38c54","modified":1715830799607},{"_id":"source/about/index.md","hash":"37d211f17eb85edb66cde357b1c7ff5f6a32e325","modified":1715830799606},{"_id":"source/gallery/index.md","hash":"2215422c59947c37013d4f91eca604147f302d4d","modified":1715830799607},{"_id":"source/img/favicon.png","hash":"ef583b39820846785ca27abcbb05279d4039641f","modified":1715830799608},{"_id":"source/link/index.md","hash":"5ffc43314a94b581b8b7df5dea233f341335276c","modified":1715830799609},{"_id":"source/movies/index.md","hash":"9ff6e3a60e2a853372a69506dd2fee171e981ed3","modified":1715830799609},{"_id":"source/about/output.css","hash":"c89ad1f09dd8851d6ded25a510db237a5df5e841","modified":1715830799606},{"_id":"source/essay/index.md","hash":"c8b62a7093628fcc6841909c8989a09774a7957d","modified":1715830799607},{"_id":"source/music/index.md","hash":"58502c290fb2feec703f21f494de46699b2baf29","modified":1715830799609},{"_id":"source/tags/index.md","hash":"b51da3dceccbf4db22042a695c4206b23c640c29","modified":1715830799610},{"_id":"source/gallery/wallpaper/girl/index.md","hash":"80f192fe401d46ca113ae52da7a0ef913ac16d24","modified":1715830799608},{"_id":"source/moment/index.md","hash":"04ade89a0e2b3894204274fa815f3e8843a1011d","modified":1715830799609},{"_id":"source/link/friendly/index.md","hash":"c096500772e417c97e9fc5899508cf1e5903b1bf","modified":1715830799608},{"_id":"source/img/wechat.jpeg","hash":"b0eeb2e392c7ba47650632ac7f1ddf4a2aa1d50a","modified":1715830799608},{"_id":"themes/butterfly/layout/includes/widget/card_profile.pug","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1715830799636},{"_id":"themes/butterfly/README.md","hash":"4e01b47448d9f3a02afc04eef644e2321253f6f4","modified":1715830799611},{"_id":"themes/butterfly/plugins.yml","hash":"d807fbb62163bb6fc5a83a24ebd69ac14cf45f67","modified":1715830799638},{"_id":"themes/butterfly/languages/default.yml","hash":"90a6dc361de67532437d819a55ec64945ca5404b","modified":1715830799612},{"_id":"themes/butterfly/package.json","hash":"314b0271ba3f668d0d6081b499b2d24e90dab25e","modified":1715830799638},{"_id":"themes/butterfly/LICENSE","hash":"1128f8f91104ba9ef98d37eea6523a888dcfa5de","modified":1715830799610},{"_id":"themes/butterfly/_config.yml","hash":"39fbabbbf1e89dd82a6ea21517c6c24b49e4dd98","modified":1715830799611},{"_id":"themes/butterfly/README_CN.md","hash":"148da187d16033624ceccce8b8561835296f5a5a","modified":1715830799611},{"_id":"themes/butterfly/languages/en.yml","hash":"af5603b1a888f167dc80be6d53a19437b5cf6bef","modified":1715830799612},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"5004faee365139521f161babd66649a8107e4008","modified":1715830799612},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"03629d1d13a7be09d4933aa5dc0dcbe45e79140c","modified":1715830799612},{"_id":"themes/butterfly/layout/archive.pug","hash":"bb32c9c476372de747dfa563b83f77d7a917a77d","modified":1715830799613},{"_id":"themes/butterfly/layout/index.pug","hash":"e1c3146834c16e6077406180858add0a8183875a","modified":1715830799637},{"_id":"themes/butterfly/layout/category.pug","hash":"710708cfdb436bc875602abf096c919ccdf544db","modified":1715830799613},{"_id":"themes/butterfly/layout/post.pug","hash":"fc9f45252d78fcd15e4a82bfd144401cba5b169a","modified":1715830799637},{"_id":"themes/butterfly/layout/tag.pug","hash":"0440f42569df2676273c026a92384fa7729bc4e9","modified":1715830799637},{"_id":"themes/butterfly/layout/page.pug","hash":"3971288fc0a8735c75f01478e87f26424f07dfea","modified":1715830799637},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"4c85de4dea4dca4e5088097a79bd6d7009cbf8ef","modified":1715830799621},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"02390a5b6ae1f57497b22ba2e6be9f13cfb7acac","modified":1715830799614},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"aca0ec7ef69b21d1f242c62fed389468a0f0e1a2","modified":1715830799614},{"_id":"themes/butterfly/layout/includes/404.pug","hash":"cb49f737aca272ccfeb62880bd651eccee72a129","modified":1715830799613},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"7fa9ae4b70b87fc97e992dde5944681f92b59bea","modified":1715830799619},{"_id":"themes/butterfly/scripts/events/404.js","hash":"83cd7f73225ccad123afbd526ce1834eb1eb6a6d","modified":1715830799638},{"_id":"themes/butterfly/scripts/events/init.js","hash":"428b94c7b9e83f7ea36227dee66bfe3c23aee4a8","modified":1715830799639},{"_id":"themes/butterfly/scripts/events/comment.js","hash":"5351e0bc09e6b5b3f6d30f333a2520626a28ca3a","modified":1715830799639},{"_id":"themes/butterfly/scripts/events/cdn.js","hash":"21fb5aabe043486d095c4c8cce361ed85ba88a26","modified":1715830799638},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"8ad9911b755cba13dde2cc055c3f857a6b0dd20e","modified":1715830799640},{"_id":"themes/butterfly/scripts/events/stylus.js","hash":"e196a99733d7f90899bceed5d12488e8234817d5","modified":1715830799639},{"_id":"themes/butterfly/scripts/events/merge_config.js","hash":"2ac43fd4103ba3c6897da7c13015cb05f39fd695","modified":1715830799639},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"860f967ecf3c6a6ea785b560a7aae4d0757cd18a","modified":1715830799640},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"a8eef3f37428436554f58a2b6bac7c255fbdf38d","modified":1715830799641},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"ecec62305aaa596bb1dfbb46c13d06fb5a9628cf","modified":1715830799614},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"2ec66513d5322f185d2071acc052978ba9415a8e","modified":1715830799641},{"_id":"themes/butterfly/scripts/helpers/inject_head_js.js","hash":"d5c7e61257b08a9648404f6f48ce4d471cd5fa55","modified":1715830799642},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"e2a8a09bfe47da26eab242a36f516e6c452c799a","modified":1715830799642},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"4677be4175da6800c0b3b8c1614e593f73df8831","modified":1715830799642},{"_id":"themes/butterfly/scripts/helpers/series.js","hash":"821e973d41f7b3b64cde91e0e836ea49c43e3c06","modified":1715830799642},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"93229d44b35b9da92e647b89d6d3087085974a29","modified":1715830799642},{"_id":"themes/butterfly/scripts/tag/flink.js","hash":"ab62919fa567b95fbe14889517abda649991b1ee","modified":1715830799642},{"_id":"themes/butterfly/scripts/helpers/findArchiveLength.js","hash":"7caf549810f971c34196fb9deac2d992545bdff9","modified":1715830799641},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"9f0e9e039f304439007460fa0a7c8ac18e0ffd37","modified":1715830799622},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"96f861151e3b889ef0ffe78821d489ad2625ee43","modified":1715830799641},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"db275f7fbe4438b54cd813b695f4834e10aa234f","modified":1715830799622},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"418684993a3a3a2ac534257a2d9ecbcead6808c1","modified":1715830799642},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"1acefc59ead75ebd8cafee36efc7da4fa426d088","modified":1715830799643},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"5c2a07df5874b5377540884e4da14dd21489378f","modified":1715830799643},{"_id":"themes/butterfly/scripts/tag/inlineImg.js","hash":"512c68a22ae4a58d6a6b24b368a0c00c2ccb4fcb","modified":1715830799643},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"365db87ddfc582bf8c15cb440c48bed95106e4b1","modified":1715830799643},{"_id":"themes/butterfly/scripts/tag/score.js","hash":"5cb273e95846874e3a58074074c501df23c5e912","modified":1715830799643},{"_id":"themes/butterfly/scripts/tag/series.js","hash":"830b1d592278b9f676df0cf9a91b1eeda2456aec","modified":1715830799643},{"_id":"themes/butterfly/scripts/tag/label.js","hash":"19773218877281ccffed921431e87148413a7c20","modified":1715830799643},{"_id":"themes/butterfly/scripts/tag/timeline.js","hash":"4526c75e5bf84609d67e92b6af3524bcb278e852","modified":1715830799643},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"ffc62222f8d7b4d44c1c0726c8a08824a2201039","modified":1715830799643},{"_id":"themes/butterfly/source/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1715830799655},{"_id":"themes/butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1715830799654},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"f8d2e3f31468991a7f5171cbfdb157dfb86d3372","modified":1715830799656},{"_id":"themes/butterfly/source/js/utils.js","hash":"8e6b48d294e7aeaba8ff6348c43b2271cf865547","modified":1715830799656},{"_id":"themes/butterfly/source/js/main.js","hash":"0dac585446445e0c419b86eec5580bc9b0657dc6","modified":1715830799655},{"_id":"themes/butterfly/source/css/index.styl","hash":"755490867fd8afe47d5cce24faea2ca172b0c4dd","modified":1715830799654},{"_id":"themes/butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1715830799655},{"_id":"themes/butterfly/source/css/var.styl","hash":"140139db31b022d4f7bfb3992f901231ed291848","modified":1715830799654},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"8aa8d799aedbfd811195b84a451bc4b6e2647c12","modified":1715830799615},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"67e1c3b48e4ca7ee0b2c76d3ca7476b9883cf105","modified":1715830799615},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"95a37e92b39c44bcbea4be7e29ddb3921c5b8220","modified":1715830799616},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"5208fe1e75d97a05fd9bdd6cc53c59d8b741b94b","modified":1715830799616},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"3d492cfe645d37c94d30512e0b230b0a09913148","modified":1715830799616},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"63fed4548367a3663cdbaffa1df48167b0a2397b","modified":1715830799615},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"7df90c8e432e33716517ab918b0a125bc284041b","modified":1715830799616},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"e2e8d681f183f00ce5ee239c42d2e36b3744daad","modified":1715830799617},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"31346a210f4f9912c5b29f51d8f659913492f388","modified":1715830799618},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"9853a32315ed62fcea6ad27f8075db0155d637df","modified":1715830799617},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"5de9a82032cdad1db3b868b797460921cd775fc2","modified":1715830799618},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"f50e6a17073677933c5bc78481bf587a4a9e6da0","modified":1715830799618},{"_id":"themes/butterfly/layout/includes/loading/fullpage-loading.pug","hash":"9e8c5788602b29a527ef35fe8a20076a5fa969bd","modified":1715830799619},{"_id":"themes/butterfly/layout/includes/loading/index.pug","hash":"131f344d68b4c241d6e03849b243ee792fcd3cea","modified":1715830799619},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"f61659aa457d1a2d1baa3a13157996cfac4d6609","modified":1715830799618},{"_id":"themes/butterfly/layout/includes/header/wave.pug","hash":"4a285f0047d72147f3dcdb58447cbebc0f701970","modified":1715830799618},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"90554c2ca5ba946f4c02e1bc5fe2859cef1b1594","modified":1715830799620},{"_id":"themes/butterfly/layout/includes/loading/pace.pug","hash":"6ab4e301c92586505d6cddce1b3ad23b7c79010d","modified":1715830799620},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"12c65c174d26a41821df9bad26cdf1087ec5b0ca","modified":1715830799621},{"_id":"themes/butterfly/layout/includes/page/essay.pug","hash":"abd137986bb54ebda42121f19c019a01078bb43c","modified":1715830799621},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"9621991359e22b14049346f1cf87bdedc94edf5a","modified":1715830799621},{"_id":"themes/butterfly/layout/includes/mixins/post-ui.pug","hash":"1eef68652f2d9cb930cc9b198de3bbbcddf63ee8","modified":1715830799620},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"f9ce83978b217a71a2eb8761dc14b09866faa3f4","modified":1715830799621},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1715830799620},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"1d39670ee6225f85f5c53bf5c84f3fd6e19290e8","modified":1715830799628},{"_id":"themes/butterfly/layout/includes/third-party/pangu.pug","hash":"0f024e36b8116118233e10118714bde304e01e12","modified":1715830799631},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"ffb9ea15a2b54423cd4cd441e2d061b8233e9b58","modified":1715830799631},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"c7cfade2b160380432c47eef4cd62273b6508c58","modified":1715830799623},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"12e57491e94fa00d953bbda9db0b6d6169e2358c","modified":1715830799631},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"a096ff8eb6b2a22395be881f827ff2a686ba5596","modified":1715830799622},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"8044b9c18b34b019ffe26b7383e7e80356b5e4b5","modified":1715830799633},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"60dc48a7b5d89c2a49123c3fc5893ab9c57dd225","modified":1715830799634},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"5574804fdea5edf7fd52aad2caf030614d5e7f2f","modified":1715830799622},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"03c6afabbf1ac729c7fb21c7ec06da0190b0fdc7","modified":1715830799634},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"86897010fe71503e239887fd8f6a4f5851737be9","modified":1715830799634},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"ae392459ad401a083ca51ee0b27526b3c1e1faed","modified":1715830799634},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"d1a416d0a8a7916d0b1a41d73adc66f8c811e493","modified":1715830799635},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"7834bf7c711e739fd33cfcd0b53d151013b3d449","modified":1715830799635},{"_id":"themes/butterfly/layout/includes/widget/card_bottom_self.pug","hash":"13dc8ce922e2e2332fe6ad5856ebb5dbf9ea4444","modified":1715830799635},{"_id":"themes/butterfly/layout/includes/widget/card_post_series.pug","hash":"bd5ad01277f8c6ddf8a3a29af1518e5fe6eed23f","modified":1715830799635},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"a658a274c5f7896ee5122725bee45548693bdd66","modified":1715830799636},{"_id":"themes/butterfly/layout/includes/widget/card_top_self.pug","hash":"ae67c6d4130a6c075058a9c1faea1648bcc6f83e","modified":1715830799636},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"e5aac7b28ed4123d75797263c64e74ac547945bc","modified":1715830799636},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"35ce167c5a275211bfc1fa3d49adfde5b404d98f","modified":1715830799636},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"66f7a8b0cebc05c575ec3cb70b08d6854029d87a","modified":1715830799637},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"582b1e5d15840051f0c3e48fd0de0c0dc2eca8bd","modified":1715830799644},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"eceb4420a64c720f0d2741e89d6229bbb3d87353","modified":1715830799636},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"587ef836dcbab9b00415dc10d3ac51748b86e5d6","modified":1715830799644},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"fad650f88778b33a6358e38cf50dfafc0974d28f","modified":1715830799646},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"f9a5d3f1fc5ed0ed2ee4c1eaa58ed650d11ddebd","modified":1715830799646},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"134811b2d696f9ed2c0cd578f3886f1c60770c0a","modified":1715830799646},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"83a7a70eb0532ea9c4267939fe484af915fca01e","modified":1715830799646},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"bcd384c8b2aa0390c9eb69ac1abbfd1240ce1da4","modified":1715830799645},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"ac2aeee9926f75b2a0098efe1c114126987430f2","modified":1715830799647},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"4dcd468e4d11a0ac75406162678feffcd89fee00","modified":1715830799644},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"d6cf26ffb8a0343eda1cde65b6b73b0ddbe8fcfc","modified":1715830799648},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"959e121f656449595773112e623ba30e2be84b09","modified":1715830799647},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"a2eb44fa5eaea1325319a2064439cf36d0f35a2f","modified":1715830799647},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"f845b9b4efdee750f70c023aab27432611f83059","modified":1715830799648},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"b7a6a585dbc38d177c9aba75df3a467415d0488a","modified":1715830799648},{"_id":"themes/butterfly/source/css/_layout/wave.styl","hash":"bd34c4462ac23bbf69e17fa5a35ccfebdd67ca5e","modified":1715830799648},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"5556c9bf4f53a90cb9b4945cd76a8849bd67f3f3","modified":1715830799648},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"d53de408cb27a2e704aba7f7402b7caebe0410d8","modified":1715830799647},{"_id":"themes/butterfly/source/css/_page/404.styl","hash":"50dbb9e6d98c71ffe16741b8c1b0c1b9771efd2b","modified":1715830799649},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"272a40574408bf39303b885fc6a8e2df79a774e2","modified":1715830799649},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"594c5c7bd755ed94303f5d281eed8839f1c27b1c","modified":1715830799649},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"f01ee74948cedb44e53cd3bb1ef36b7d2778ede7","modified":1715830799650},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"c9e98027f2dd730ce389c2047f62ebb748955fcf","modified":1715830799650},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"f1d2cac92aaa595890958cd9da385a2ef96d46a8","modified":1715830799650},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"98d755b686ee833e9da10afaa40c4ec2bd66c19a","modified":1715830799650},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"580feb7e8b0822a1be48ac380f8c5c53b1523321","modified":1715830799651},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"961589da3c0a532c4709a4a4ea96bd579257f766","modified":1715830799652},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"259ef712fbf953ed96f9a392d50e4875ab16fe62","modified":1715830799651},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"20a3134e1302b62bfc881f4ec43f398267111f22","modified":1715830799651},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"649a054e73278b6724bd4dd9b94724791ec5c928","modified":1715830799651},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"5cddbb5f4eae695a26685e415d821b523e0f17bf","modified":1715830799652},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"ce489ca2e249e2a3cf71584e20d84bdb022e3475","modified":1715830799653},{"_id":"themes/butterfly/source/css/_tags/inlineImg.styl","hash":"df9d405c33a9a68946b530410f64096bcb72560c","modified":1715830799653},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"45f0c32bdea117540f6b14ebac6450d7142bd710","modified":1715830799652},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"d76c38adf1d9c1279ef4241835667789f5b736e0","modified":1715830799652},{"_id":"themes/butterfly/source/css/_tags/label.styl","hash":"66c59e193d794cdb02cca7bd1dc4aea5a19d7e84","modified":1715830799653},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"909bb5079b26b6ee68177919f522566503654058","modified":1715830799653},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"fb9f78bfbb79579f1d752cb73fb6d25c8418e0fd","modified":1715830799647},{"_id":"themes/butterfly/source/css/_tags/timeline.styl","hash":"f071156d439556e7463ed4bc61ceee87170d5d08","modified":1715830799654},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"2c18a1c9604af475b4749def8f1959df88d8b276","modified":1715830799654},{"_id":"themes/butterfly/source/js/contextmenu/contextmenu.js","hash":"3de7effbeb58ec6ae81c8cdcd832a681fafcc63b","modified":1715830799655},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"108988d046da9a4716148df43b3975217c8ceaae","modified":1715830799655},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"e1f60ebac53a3f596fd0a4769b4f9275c48c6542","modified":1715830799655},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"2d02e52b360f6e6cae47c293ae57ed78e2554663","modified":1715830799653},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/index.pug","hash":"f58f1648d2d71311bafca4833f20b605bb5f18c8","modified":1715830799622},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"3bc4c1b91568561f0491bdac65b75aa0bfd01f27","modified":1715830799626},{"_id":"themes/butterfly/layout/includes/third-party/comments/artalk.pug","hash":"f77f0fdeac2bc8a72f71a58f9b75aa39f0a108c8","modified":1715830799625},{"_id":"themes/butterfly/layout/includes/header/custom/post-info.pug","hash":"a267e93ab7d0c539275cc14625da15a68489dc05","modified":1715830799617},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"46aec6466959baec1c3d71a5dbc510fbeb00c91d","modified":1715830799626},{"_id":"themes/butterfly/source/css/contextmenu/contextmenu.css","hash":"cf4aa27c4d53c8b98be2bb04243a32d9ba173cd9","modified":1715830799654},{"_id":"themes/butterfly/layout/includes/third-party/comments/giscus.pug","hash":"2d7b0b09678adba09481e3152e0b32962677f650","modified":1715830799626},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"62f16a602e57e5f7f7c5249dd37b42d436dc032a","modified":1715830799626},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"a9709905593d960954e2dd572f09f48a6c2b1ef7","modified":1715830799626},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/abcjs.pug","hash":"f7299f9fef5bf94bb58c8cd3be8ee660ad2f9cd4","modified":1715830799622},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"00ed91c52939b9675b316137f854d13684c895a6","modified":1715830799626},{"_id":"themes/butterfly/layout/includes/third-party/comments/remark42.pug","hash":"f15699abb8c7a255aabad0222ae53eee387c66a3","modified":1715830799627},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"1995a654ba7ad62775a0a6e2922209cd1a85f2e3","modified":1715830799627},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"0d378ee8a671982a46213a4bfb223b4f3409aea9","modified":1715830799626},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"46865e3f52096acb07d0212174b4e8751b123aea","modified":1715830799628},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"63cea2b5c8f7b59f5919379d61a2bb2ce8ed7623","modified":1715830799627},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"b8ae5fd7d74e1edcef21f5004fc96147e064d219","modified":1715830799628},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"5c29b5887e2e6cd81e1f13b32da53d9c139b788b","modified":1715830799627},{"_id":"themes/butterfly/layout/includes/third-party/comments/waline.pug","hash":"7aa443b4881448979b810864e206e58c9ed787e3","modified":1715830799628},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"dfcbd9881be569ea420eff1a6b00e4f4dbe2138e","modified":1715830799628},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"6b67982bb7a3713b5bffd6a23ba2810425c504d0","modified":1715830799629},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/artalk.pug","hash":"71af0b679e00290b0854384368b3c7e9b3e5f26a","modified":1715830799623},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"fc072ac839401174b5d3cf9acd3b694246c23a55","modified":1715830799628},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"b2d274db84ef22fbd6d5ea8f4404821898934209","modified":1715830799624},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"0344477a2cf38698318ead2681c63ac12f01586e","modified":1715830799623},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"56c028ba0ea8fac19f0125114d765dfc56ce2b48","modified":1715830799624},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"39427e107230a10790972349c9dd4c4f31d55eb7","modified":1715830799624},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/remark42.pug","hash":"001e8be47854b891efe04013c240c38fed4185eb","modified":1715830799624},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"c5f7081ca29db8cc80f808dfc29e36d5fa22fd7e","modified":1715830799623},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"3a5ccfc69bd8ccb4b8f3ce3502023f7914f2a022","modified":1715830799624},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"ddce8352b371a1fb426bdb6c33f587eb37a69647","modified":1715830799624},{"_id":"themes/butterfly/layout/includes/third-party/chat/messenger.pug","hash":"e39a9c37adf4cb15a2ba3b2cc65542ffea88650d","modified":1715830799625},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"2fb098a7aa45010a8cd212dc0bd5308c6e7c63e3","modified":1715830799625},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"618e1b7f9204049b07beb9e1363c844a78a9ace3","modified":1715830799625},{"_id":"themes/butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"9b57a8e13de8fc51a5f550854e47164fd8ac1be8","modified":1715830799625},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"4ec0642f2d5444acfab570a6f8c7868e7ff43fde","modified":1715830799629},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/artalk.pug","hash":"17080aba1754478197ab089f7948ed900f116d2b","modified":1715830799629},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"dd61eca6e9a45f63e09bdefba89fe285a81ba096","modified":1715830799625},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"0f0b46d637a9a1b6ae35148923abecc80b866276","modified":1715830799629},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"2609bc2656aaaa9b59e8d575e711776512a62192","modified":1715830799629},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"1f9f51023e9e33081c2add2ca73643c0edc5e9d5","modified":1715830799630},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"4104f96faa6040f111ebfb9a90eeb470857c3b86","modified":1715830799630},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"3ba49cfe186e9ca05faf9f0d0113611ec47e9b38","modified":1715830799633},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"24804ab6da9727ed793655c1262fa3f1a9746f70","modified":1715830799630},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/remark42.pug","hash":"de2c4d02b520dd49a0a59fc0f33295e5bbb2c624","modified":1715830799630},{"_id":"themes/butterfly/layout/includes/third-party/search/docsearch.pug","hash":"b928be14d1b47a9fadb1bcc5f5072a7328752d4b","modified":1715830799632},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"85c92f8a7e44d7cd1c86f089a05be438535e5362","modified":1715830799632},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"9c3c109a12d2b6916e8b4965cca12f521510ead9","modified":1715830799631},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"a99a41334387ee9a46c6f8e8212331a29a10d159","modified":1715830799632},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"3335024ba91f55ccf3858571b7898f46881c455c","modified":1715830799632},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"25914321762e30aacc610bc4dfb9de3e1cb556a3","modified":1715830799645},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"5dc2e0bcae9a54bfb9bdcc82d02ae5a3cf1ca97d","modified":1715830799645},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"c7dd2b2ae9b23aa0a60fffd7df9e9f76ef52033e","modified":1715830799633},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"18804c58239d95798fa86d0597f32d7f7dd30051","modified":1715830799645},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"cf1fae641c927621a4df1be5ca4a853b9b526e23","modified":1715830799645},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"5972c61f5125068cbe0af279a0c93a54847fdc3b","modified":1715830799645}],"Category":[{"name":"Butterfly","_id":"clw8r01jv0004raen7tqacl4s"},{"name":"前端","_id":"clw8r01jx000craenhnee5wwd"},{"name":"GitHub","_id":"clw8r01jy000jraenbtlz63cp"},{"name":"QT","_id":"clw8r01k10010raene8pyh5cs"},{"name":"技术分享","_id":"clw8r01k10016raen9k597xjw"},{"name":"算法","_id":"clw8r01k2001araenbqnb290y"},{"name":"生活","_id":"clw8r01k2001eraen9490ea7l"}],"Data":[{"_id":"link","data":[{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Vue","link":"https://cn.vuejs.org/","descr":"易学易用，性能出色，适用场景丰富的 Web 前端框架。","avatar":"https://cn.vuejs.org/logo.svg"},{"name":"PugJS","link":"https://www.pugjs.cn/img/logo.png","descr":"前端模板渲染引擎","avatar":"https://pugjs.org/images/favicon.ico"},{"name":"NestJS 中文文档","link":"https://docs.nestjs.cn/","descr":"用于构建高效且可伸缩的服务端应用程序的渐进式 Node.js 框架。","avatar":"https://docs.nestjs.cn/_media/icon.svg"},{"name":"JSTransformers","link":"https://github.com/jstransformers/jstransformer","descr":"JSTransformer 将许多优秀的模板编译器和编译器统一为一个标准化的API"},{"name":"huggingface | transformers","link":"https://huggingface.co/docs/transformers/v4.39.3/zh/index","descr":"为 PyTorch、TensorFlow 和 JAX 打造的先进的机器学习工具"},{"name":"个人简历","link":"https://ultravires.github.io/resume/","descr":"向成渝的个人简历"},{"name":"Github Actions 文档","link":"https://docs.github.com/zh/actions","descr":"在 GitHub Actions 的仓库中自动化、自定义和执行软件开发工作流程。 您可以发现、创建和共享操作以执行您喜欢的任何作业（包括 CI/CD），并将操作合并到完全自定义的工作流程中。"}]}]},{"_id":"essay","data":[{"class_name":"即刻短文","essay_list":[{"content":"体验一下即刻短文","date":"2024-04-29T00:00:00.000Z"}]}]}],"Page":[{"title":"关于","date":"2024-04-15T09:15:02.000Z","type":"about","aside":false,"top_img":"https://source.unsplash.com/random/1126x260","_content":"\n一介书生三生有幸读得四书五经，万卷诗书千变万化怎奈百般寻味。\n\n<iframe src=\"https://ultravires.github.io/resume/\" width=\"100%\" height=\"800px\"></iframe>","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2024-04-15 17:15:02\ntype: 'about'\naside: false\ntop_img: https://source.unsplash.com/random/1126x260\n---\n\n一介书生三生有幸读得四书五经，万卷诗书千变万化怎奈百般寻味。\n\n<iframe src=\"https://ultravires.github.io/resume/\" width=\"100%\" height=\"800px\"></iframe>","updated":"2024-05-16T03:39:59.606Z","path":"about/index.html","comments":1,"layout":"page","_id":"clw8r01jr0000raen53473kei","content":"<p>一介书生三生有幸读得四书五经，万卷诗书千变万化怎奈百般寻味。</p>\n<iframe src=\"https://ultravires.github.io/resume/\" width=\"100%\" height=\"800px\"></iframe>","cover":"https://source.unsplash.com/random/1126x260","cover_type":"img","excerpt":"","more":"<p>一介书生三生有幸读得四书五经，万卷诗书千变万化怎奈百般寻味。</p>\n<iframe src=\"https://ultravires.github.io/resume/\" width=\"100%\" height=\"800px\"></iframe>"},{"_content":"/*\n! tailwindcss v3.4.3 | MIT License | https://tailwindcss.com\n*/\n\n/*\n1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)\n2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)\n*/\n\n*,\n::before,\n::after {\n  box-sizing: border-box;\n  /* 1 */\n  border-width: 0;\n  /* 2 */\n  border-style: solid;\n  /* 2 */\n  border-color: #e5e7eb;\n  /* 2 */\n}\n\n::before,\n::after {\n  --tw-content: '';\n}\n\n/*\n1. Use a consistent sensible line-height in all browsers.\n2. Prevent adjustments of font size after orientation changes in iOS.\n3. Use a more readable tab size.\n4. Use the user's configured `sans` font-family by default.\n5. Use the user's configured `sans` font-feature-settings by default.\n6. Use the user's configured `sans` font-variation-settings by default.\n7. Disable tap highlights on iOS\n*/\n\nhtml,\n:host {\n  line-height: 1.5;\n  /* 1 */\n  -webkit-text-size-adjust: 100%;\n  /* 2 */\n  -moz-tab-size: 4;\n  /* 3 */\n  -o-tab-size: 4;\n     tab-size: 4;\n  /* 3 */\n  font-family: ui-sans-serif, system-ui, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";\n  /* 4 */\n  font-feature-settings: normal;\n  /* 5 */\n  font-variation-settings: normal;\n  /* 6 */\n  -webkit-tap-highlight-color: transparent;\n  /* 7 */\n}\n\n/*\n1. Remove the margin in all browsers.\n2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.\n*/\n\nbody {\n  margin: 0;\n  /* 1 */\n  line-height: inherit;\n  /* 2 */\n}\n\n/*\n1. Add the correct height in Firefox.\n2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\n3. Ensure horizontal rules are visible by default.\n*/\n\nhr {\n  height: 0;\n  /* 1 */\n  color: inherit;\n  /* 2 */\n  border-top-width: 1px;\n  /* 3 */\n}\n\n/*\nAdd the correct text decoration in Chrome, Edge, and Safari.\n*/\n\nabbr:where([title]) {\n  -webkit-text-decoration: underline dotted;\n          text-decoration: underline dotted;\n}\n\n/*\nRemove the default font size and weight for headings.\n*/\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-size: inherit;\n  font-weight: inherit;\n}\n\n/*\nReset links to optimize for opt-in styling instead of opt-out.\n*/\n\na {\n  color: inherit;\n  text-decoration: inherit;\n}\n\n/*\nAdd the correct font weight in Edge and Safari.\n*/\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/*\n1. Use the user's configured `mono` font-family by default.\n2. Use the user's configured `mono` font-feature-settings by default.\n3. Use the user's configured `mono` font-variation-settings by default.\n4. Correct the odd `em` font sizing in all browsers.\n*/\n\ncode,\nkbd,\nsamp,\npre {\n  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace;\n  /* 1 */\n  font-feature-settings: normal;\n  /* 2 */\n  font-variation-settings: normal;\n  /* 3 */\n  font-size: 1em;\n  /* 4 */\n}\n\n/*\nAdd the correct font size in all browsers.\n*/\n\nsmall {\n  font-size: 80%;\n}\n\n/*\nPrevent `sub` and `sup` elements from affecting the line height in all browsers.\n*/\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/*\n1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\n2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\n3. Remove gaps between table borders by default.\n*/\n\ntable {\n  text-indent: 0;\n  /* 1 */\n  border-color: inherit;\n  /* 2 */\n  border-collapse: collapse;\n  /* 3 */\n}\n\n/*\n1. Change the font styles in all browsers.\n2. Remove the margin in Firefox and Safari.\n3. Remove default padding in all browsers.\n*/\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit;\n  /* 1 */\n  font-feature-settings: inherit;\n  /* 1 */\n  font-variation-settings: inherit;\n  /* 1 */\n  font-size: 100%;\n  /* 1 */\n  font-weight: inherit;\n  /* 1 */\n  line-height: inherit;\n  /* 1 */\n  letter-spacing: inherit;\n  /* 1 */\n  color: inherit;\n  /* 1 */\n  margin: 0;\n  /* 2 */\n  padding: 0;\n  /* 3 */\n}\n\n/*\nRemove the inheritance of text transform in Edge and Firefox.\n*/\n\nbutton,\nselect {\n  text-transform: none;\n}\n\n/*\n1. Correct the inability to style clickable types in iOS and Safari.\n2. Remove default button styles.\n*/\n\nbutton,\ninput:where([type='button']),\ninput:where([type='reset']),\ninput:where([type='submit']) {\n  -webkit-appearance: button;\n  /* 1 */\n  background-color: transparent;\n  /* 2 */\n  background-image: none;\n  /* 2 */\n}\n\n/*\nUse the modern Firefox focus style for all focusable elements.\n*/\n\n:-moz-focusring {\n  outline: auto;\n}\n\n/*\nRemove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)\n*/\n\n:-moz-ui-invalid {\n  box-shadow: none;\n}\n\n/*\nAdd the correct vertical alignment in Chrome and Firefox.\n*/\n\nprogress {\n  vertical-align: baseline;\n}\n\n/*\nCorrect the cursor style of increment and decrement buttons in Safari.\n*/\n\n::-webkit-inner-spin-button,\n::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/*\n1. Correct the odd appearance in Chrome and Safari.\n2. Correct the outline style in Safari.\n*/\n\n[type='search'] {\n  -webkit-appearance: textfield;\n  /* 1 */\n  outline-offset: -2px;\n  /* 2 */\n}\n\n/*\nRemove the inner padding in Chrome and Safari on macOS.\n*/\n\n::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/*\n1. Correct the inability to style clickable types in iOS and Safari.\n2. Change font properties to `inherit` in Safari.\n*/\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button;\n  /* 1 */\n  font: inherit;\n  /* 2 */\n}\n\n/*\nAdd the correct display in Chrome and Safari.\n*/\n\nsummary {\n  display: list-item;\n}\n\n/*\nRemoves the default spacing and border for appropriate elements.\n*/\n\nblockquote,\ndl,\ndd,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\nhr,\nfigure,\np,\npre {\n  margin: 0;\n}\n\nfieldset {\n  margin: 0;\n  padding: 0;\n}\n\nlegend {\n  padding: 0;\n}\n\nol,\nul,\nmenu {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n/*\nReset default styling for dialogs.\n*/\n\ndialog {\n  padding: 0;\n}\n\n/*\nPrevent resizing textareas horizontally by default.\n*/\n\ntextarea {\n  resize: vertical;\n}\n\n/*\n1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)\n2. Set the default placeholder color to the user's configured gray 400 color.\n*/\n\ninput::-moz-placeholder, textarea::-moz-placeholder {\n  opacity: 1;\n  /* 1 */\n  color: #9ca3af;\n  /* 2 */\n}\n\ninput::placeholder,\ntextarea::placeholder {\n  opacity: 1;\n  /* 1 */\n  color: #9ca3af;\n  /* 2 */\n}\n\n/*\nSet the default cursor for buttons.\n*/\n\nbutton,\n[role=\"button\"] {\n  cursor: pointer;\n}\n\n/*\nMake sure disabled buttons don't get the pointer cursor.\n*/\n\n:disabled {\n  cursor: default;\n}\n\n/*\n1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)\n2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)\n   This can trigger a poorly considered lint error in some tools but is included by design.\n*/\n\nimg,\nsvg,\nvideo,\ncanvas,\naudio,\niframe,\nembed,\nobject {\n  display: block;\n  /* 1 */\n  vertical-align: middle;\n  /* 2 */\n}\n\n/*\nConstrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)\n*/\n\nimg,\nvideo {\n  max-width: 100%;\n  height: auto;\n}\n\n/* Make elements with the HTML hidden attribute stay hidden by default */\n\n[hidden] {\n  display: none;\n}\n\n*, ::before, ::after {\n  --tw-border-spacing-x: 0;\n  --tw-border-spacing-y: 0;\n  --tw-translate-x: 0;\n  --tw-translate-y: 0;\n  --tw-rotate: 0;\n  --tw-skew-x: 0;\n  --tw-skew-y: 0;\n  --tw-scale-x: 1;\n  --tw-scale-y: 1;\n  --tw-pan-x:  ;\n  --tw-pan-y:  ;\n  --tw-pinch-zoom:  ;\n  --tw-scroll-snap-strictness: proximity;\n  --tw-gradient-from-position:  ;\n  --tw-gradient-via-position:  ;\n  --tw-gradient-to-position:  ;\n  --tw-ordinal:  ;\n  --tw-slashed-zero:  ;\n  --tw-numeric-figure:  ;\n  --tw-numeric-spacing:  ;\n  --tw-numeric-fraction:  ;\n  --tw-ring-inset:  ;\n  --tw-ring-offset-width: 0px;\n  --tw-ring-offset-color: #fff;\n  --tw-ring-color: rgb(59 130 246 / 0.5);\n  --tw-ring-offset-shadow: 0 0 #0000;\n  --tw-ring-shadow: 0 0 #0000;\n  --tw-shadow: 0 0 #0000;\n  --tw-shadow-colored: 0 0 #0000;\n  --tw-blur:  ;\n  --tw-brightness:  ;\n  --tw-contrast:  ;\n  --tw-grayscale:  ;\n  --tw-hue-rotate:  ;\n  --tw-invert:  ;\n  --tw-saturate:  ;\n  --tw-sepia:  ;\n  --tw-drop-shadow:  ;\n  --tw-backdrop-blur:  ;\n  --tw-backdrop-brightness:  ;\n  --tw-backdrop-contrast:  ;\n  --tw-backdrop-grayscale:  ;\n  --tw-backdrop-hue-rotate:  ;\n  --tw-backdrop-invert:  ;\n  --tw-backdrop-opacity:  ;\n  --tw-backdrop-saturate:  ;\n  --tw-backdrop-sepia:  ;\n  --tw-contain-size:  ;\n  --tw-contain-layout:  ;\n  --tw-contain-paint:  ;\n  --tw-contain-style:  ;\n}\n\n::backdrop {\n  --tw-border-spacing-x: 0;\n  --tw-border-spacing-y: 0;\n  --tw-translate-x: 0;\n  --tw-translate-y: 0;\n  --tw-rotate: 0;\n  --tw-skew-x: 0;\n  --tw-skew-y: 0;\n  --tw-scale-x: 1;\n  --tw-scale-y: 1;\n  --tw-pan-x:  ;\n  --tw-pan-y:  ;\n  --tw-pinch-zoom:  ;\n  --tw-scroll-snap-strictness: proximity;\n  --tw-gradient-from-position:  ;\n  --tw-gradient-via-position:  ;\n  --tw-gradient-to-position:  ;\n  --tw-ordinal:  ;\n  --tw-slashed-zero:  ;\n  --tw-numeric-figure:  ;\n  --tw-numeric-spacing:  ;\n  --tw-numeric-fraction:  ;\n  --tw-ring-inset:  ;\n  --tw-ring-offset-width: 0px;\n  --tw-ring-offset-color: #fff;\n  --tw-ring-color: rgb(59 130 246 / 0.5);\n  --tw-ring-offset-shadow: 0 0 #0000;\n  --tw-ring-shadow: 0 0 #0000;\n  --tw-shadow: 0 0 #0000;\n  --tw-shadow-colored: 0 0 #0000;\n  --tw-blur:  ;\n  --tw-brightness:  ;\n  --tw-contrast:  ;\n  --tw-grayscale:  ;\n  --tw-hue-rotate:  ;\n  --tw-invert:  ;\n  --tw-saturate:  ;\n  --tw-sepia:  ;\n  --tw-drop-shadow:  ;\n  --tw-backdrop-blur:  ;\n  --tw-backdrop-brightness:  ;\n  --tw-backdrop-contrast:  ;\n  --tw-backdrop-grayscale:  ;\n  --tw-backdrop-hue-rotate:  ;\n  --tw-backdrop-invert:  ;\n  --tw-backdrop-opacity:  ;\n  --tw-backdrop-saturate:  ;\n  --tw-backdrop-sepia:  ;\n  --tw-contain-size:  ;\n  --tw-contain-layout:  ;\n  --tw-contain-paint:  ;\n  --tw-contain-style:  ;\n}\n\n.container {\n  width: 100%;\n}\n\n@media (min-width: 640px) {\n  .container {\n    max-width: 640px;\n  }\n}\n\n@media (min-width: 768px) {\n  .container {\n    max-width: 768px;\n  }\n}\n\n@media (min-width: 1024px) {\n  .container {\n    max-width: 1024px;\n  }\n}\n\n@media (min-width: 1280px) {\n  .container {\n    max-width: 1280px;\n  }\n}\n\n@media (min-width: 1536px) {\n  .container {\n    max-width: 1536px;\n  }\n}\n\n.absolute {\n  position: absolute;\n}\n\n.relative {\n  position: relative;\n}\n\n.mx-auto {\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.my-2 {\n  margin-top: 0.5rem;\n  margin-bottom: 0.5rem;\n}\n\n.my-4 {\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n}\n\n.mb-2 {\n  margin-bottom: 0.5rem;\n}\n\n.mt-1 {\n  margin-top: 0.25rem;\n}\n\n.mt-4 {\n  margin-top: 1rem;\n}\n\n.inline-block {\n  display: inline-block;\n}\n\n.flex {\n  display: flex;\n}\n\n.hidden {\n  display: none;\n}\n\n.h-2 {\n  height: 0.5rem;\n}\n\n.h-full {\n  height: 100%;\n}\n\n.w-16 {\n  width: 4rem;\n}\n\n.w-\\[300px\\] {\n  width: 300px;\n}\n\n.w-\\[80\\%\\] {\n  width: 80%;\n}\n\n.w-\\[800px\\] {\n  width: 800px;\n}\n\n.w-\\[85\\%\\] {\n  width: 85%;\n}\n\n.w-\\[90\\%\\] {\n  width: 90%;\n}\n\n.w-full {\n  width: 100%;\n}\n\n.flex-shrink-0 {\n  flex-shrink: 0;\n}\n\n.flex-grow {\n  flex-grow: 1;\n}\n\n.transform {\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\n}\n\n.items-center {\n  align-items: center;\n}\n\n.gap-1 {\n  gap: 0.25rem;\n}\n\n.gap-4 {\n  gap: 1rem;\n}\n\n.overflow-hidden {\n  overflow: hidden;\n}\n\n.text-ellipsis {\n  text-overflow: ellipsis;\n}\n\n.whitespace-nowrap {\n  white-space: nowrap;\n}\n\n.rounded-full {\n  border-radius: 9999px;\n}\n\n.border {\n  border-width: 1px;\n}\n\n.border-l-2 {\n  border-left-width: 2px;\n}\n\n.border-solid {\n  border-style: solid;\n}\n\n.border-gray-400 {\n  --tw-border-opacity: 1;\n  border-color: rgb(156 163 175 / var(--tw-border-opacity));\n}\n\n.border-white {\n  --tw-border-opacity: 1;\n  border-color: rgb(255 255 255 / var(--tw-border-opacity));\n}\n\n.bg-\\[\\#345da7\\] {\n  --tw-bg-opacity: 1;\n  background-color: rgb(52 93 167 / var(--tw-bg-opacity));\n}\n\n.bg-gray-400 {\n  --tw-bg-opacity: 1;\n  background-color: rgb(156 163 175 / var(--tw-bg-opacity));\n}\n\n.bg-slate-600 {\n  --tw-bg-opacity: 1;\n  background-color: rgb(71 85 105 / var(--tw-bg-opacity));\n}\n\n.bg-white {\n  --tw-bg-opacity: 1;\n  background-color: rgb(255 255 255 / var(--tw-bg-opacity));\n}\n\n.p-4 {\n  padding: 1rem;\n}\n\n.px-8 {\n  padding-left: 2rem;\n  padding-right: 2rem;\n}\n\n.py-2 {\n  padding-top: 0.5rem;\n  padding-bottom: 0.5rem;\n}\n\n.py-4 {\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n}\n\n.py-8 {\n  padding-top: 2rem;\n  padding-bottom: 2rem;\n}\n\n.pl-2 {\n  padding-left: 0.5rem;\n}\n\n.text-center {\n  text-align: center;\n}\n\n.indent-8 {\n  text-indent: 2rem;\n}\n\n.text-lg {\n  font-size: 1.125rem;\n  line-height: 1.75rem;\n}\n\n.text-sm {\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n}\n\n.font-bold {\n  font-weight: 700;\n}\n\n.uppercase {\n  text-transform: uppercase;\n}\n\n.text-slate-200 {\n  --tw-text-opacity: 1;\n  color: rgb(226 232 240 / var(--tw-text-opacity));\n}\n\n.text-slate-600 {\n  --tw-text-opacity: 1;\n  color: rgb(71 85 105 / var(--tw-text-opacity));\n}\n\n.text-white {\n  --tw-text-opacity: 1;\n  color: rgb(255 255 255 / var(--tw-text-opacity));\n}\n\n.underline {\n  text-decoration-line: underline;\n}\n\n.underline-offset-8 {\n  text-underline-offset: 8px;\n}\n\n.shadow-2xl {\n  --tw-shadow: 0 25px 50px -12px rgb(0 0 0 / 0.25);\n  --tw-shadow-colored: 0 25px 50px -12px var(--tw-shadow-color);\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\n}\n\n* {\n  box-sizing: border-box;\n}\n\nhtml {\n  font-family: monospace;\n  font-size: 16px;\n}\n\na:hover {\n  text-decoration: underline;\n  text-underline-offset: 4px;\n}\n\n.before\\:absolute::before {\n  content: var(--tw-content);\n  position: absolute;\n}\n\n.before\\:-left-3::before {\n  content: var(--tw-content);\n  left: -0.75rem;\n}\n\n.before\\:h-2::before {\n  content: var(--tw-content);\n  height: 0.5rem;\n}\n\n.before\\:w-2::before {\n  content: var(--tw-content);\n  width: 0.5rem;\n}\n\n.before\\:rounded-full::before {\n  content: var(--tw-content);\n  border-radius: 9999px;\n}\n\n.before\\:bg-blue-500::before {\n  content: var(--tw-content);\n  --tw-bg-opacity: 1;\n  background-color: rgb(59 130 246 / var(--tw-bg-opacity));\n}\n\n.hover\\:drop-shadow-lg:hover {\n  --tw-drop-shadow: drop-shadow(0 10px 8px rgb(0 0 0 / 0.04)) drop-shadow(0 4px 3px rgb(0 0 0 / 0.1));\n  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);\n}\n\n.peer ~ .peer-\\[\\]\\:mt-6 {\n  margin-top: 1.5rem;\n}","source":"about/output.css","raw":"/*\n! tailwindcss v3.4.3 | MIT License | https://tailwindcss.com\n*/\n\n/*\n1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)\n2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)\n*/\n\n*,\n::before,\n::after {\n  box-sizing: border-box;\n  /* 1 */\n  border-width: 0;\n  /* 2 */\n  border-style: solid;\n  /* 2 */\n  border-color: #e5e7eb;\n  /* 2 */\n}\n\n::before,\n::after {\n  --tw-content: '';\n}\n\n/*\n1. Use a consistent sensible line-height in all browsers.\n2. Prevent adjustments of font size after orientation changes in iOS.\n3. Use a more readable tab size.\n4. Use the user's configured `sans` font-family by default.\n5. Use the user's configured `sans` font-feature-settings by default.\n6. Use the user's configured `sans` font-variation-settings by default.\n7. Disable tap highlights on iOS\n*/\n\nhtml,\n:host {\n  line-height: 1.5;\n  /* 1 */\n  -webkit-text-size-adjust: 100%;\n  /* 2 */\n  -moz-tab-size: 4;\n  /* 3 */\n  -o-tab-size: 4;\n     tab-size: 4;\n  /* 3 */\n  font-family: ui-sans-serif, system-ui, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";\n  /* 4 */\n  font-feature-settings: normal;\n  /* 5 */\n  font-variation-settings: normal;\n  /* 6 */\n  -webkit-tap-highlight-color: transparent;\n  /* 7 */\n}\n\n/*\n1. Remove the margin in all browsers.\n2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.\n*/\n\nbody {\n  margin: 0;\n  /* 1 */\n  line-height: inherit;\n  /* 2 */\n}\n\n/*\n1. Add the correct height in Firefox.\n2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\n3. Ensure horizontal rules are visible by default.\n*/\n\nhr {\n  height: 0;\n  /* 1 */\n  color: inherit;\n  /* 2 */\n  border-top-width: 1px;\n  /* 3 */\n}\n\n/*\nAdd the correct text decoration in Chrome, Edge, and Safari.\n*/\n\nabbr:where([title]) {\n  -webkit-text-decoration: underline dotted;\n          text-decoration: underline dotted;\n}\n\n/*\nRemove the default font size and weight for headings.\n*/\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-size: inherit;\n  font-weight: inherit;\n}\n\n/*\nReset links to optimize for opt-in styling instead of opt-out.\n*/\n\na {\n  color: inherit;\n  text-decoration: inherit;\n}\n\n/*\nAdd the correct font weight in Edge and Safari.\n*/\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/*\n1. Use the user's configured `mono` font-family by default.\n2. Use the user's configured `mono` font-feature-settings by default.\n3. Use the user's configured `mono` font-variation-settings by default.\n4. Correct the odd `em` font sizing in all browsers.\n*/\n\ncode,\nkbd,\nsamp,\npre {\n  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace;\n  /* 1 */\n  font-feature-settings: normal;\n  /* 2 */\n  font-variation-settings: normal;\n  /* 3 */\n  font-size: 1em;\n  /* 4 */\n}\n\n/*\nAdd the correct font size in all browsers.\n*/\n\nsmall {\n  font-size: 80%;\n}\n\n/*\nPrevent `sub` and `sup` elements from affecting the line height in all browsers.\n*/\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/*\n1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\n2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\n3. Remove gaps between table borders by default.\n*/\n\ntable {\n  text-indent: 0;\n  /* 1 */\n  border-color: inherit;\n  /* 2 */\n  border-collapse: collapse;\n  /* 3 */\n}\n\n/*\n1. Change the font styles in all browsers.\n2. Remove the margin in Firefox and Safari.\n3. Remove default padding in all browsers.\n*/\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit;\n  /* 1 */\n  font-feature-settings: inherit;\n  /* 1 */\n  font-variation-settings: inherit;\n  /* 1 */\n  font-size: 100%;\n  /* 1 */\n  font-weight: inherit;\n  /* 1 */\n  line-height: inherit;\n  /* 1 */\n  letter-spacing: inherit;\n  /* 1 */\n  color: inherit;\n  /* 1 */\n  margin: 0;\n  /* 2 */\n  padding: 0;\n  /* 3 */\n}\n\n/*\nRemove the inheritance of text transform in Edge and Firefox.\n*/\n\nbutton,\nselect {\n  text-transform: none;\n}\n\n/*\n1. Correct the inability to style clickable types in iOS and Safari.\n2. Remove default button styles.\n*/\n\nbutton,\ninput:where([type='button']),\ninput:where([type='reset']),\ninput:where([type='submit']) {\n  -webkit-appearance: button;\n  /* 1 */\n  background-color: transparent;\n  /* 2 */\n  background-image: none;\n  /* 2 */\n}\n\n/*\nUse the modern Firefox focus style for all focusable elements.\n*/\n\n:-moz-focusring {\n  outline: auto;\n}\n\n/*\nRemove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)\n*/\n\n:-moz-ui-invalid {\n  box-shadow: none;\n}\n\n/*\nAdd the correct vertical alignment in Chrome and Firefox.\n*/\n\nprogress {\n  vertical-align: baseline;\n}\n\n/*\nCorrect the cursor style of increment and decrement buttons in Safari.\n*/\n\n::-webkit-inner-spin-button,\n::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/*\n1. Correct the odd appearance in Chrome and Safari.\n2. Correct the outline style in Safari.\n*/\n\n[type='search'] {\n  -webkit-appearance: textfield;\n  /* 1 */\n  outline-offset: -2px;\n  /* 2 */\n}\n\n/*\nRemove the inner padding in Chrome and Safari on macOS.\n*/\n\n::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/*\n1. Correct the inability to style clickable types in iOS and Safari.\n2. Change font properties to `inherit` in Safari.\n*/\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button;\n  /* 1 */\n  font: inherit;\n  /* 2 */\n}\n\n/*\nAdd the correct display in Chrome and Safari.\n*/\n\nsummary {\n  display: list-item;\n}\n\n/*\nRemoves the default spacing and border for appropriate elements.\n*/\n\nblockquote,\ndl,\ndd,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\nhr,\nfigure,\np,\npre {\n  margin: 0;\n}\n\nfieldset {\n  margin: 0;\n  padding: 0;\n}\n\nlegend {\n  padding: 0;\n}\n\nol,\nul,\nmenu {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n/*\nReset default styling for dialogs.\n*/\n\ndialog {\n  padding: 0;\n}\n\n/*\nPrevent resizing textareas horizontally by default.\n*/\n\ntextarea {\n  resize: vertical;\n}\n\n/*\n1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)\n2. Set the default placeholder color to the user's configured gray 400 color.\n*/\n\ninput::-moz-placeholder, textarea::-moz-placeholder {\n  opacity: 1;\n  /* 1 */\n  color: #9ca3af;\n  /* 2 */\n}\n\ninput::placeholder,\ntextarea::placeholder {\n  opacity: 1;\n  /* 1 */\n  color: #9ca3af;\n  /* 2 */\n}\n\n/*\nSet the default cursor for buttons.\n*/\n\nbutton,\n[role=\"button\"] {\n  cursor: pointer;\n}\n\n/*\nMake sure disabled buttons don't get the pointer cursor.\n*/\n\n:disabled {\n  cursor: default;\n}\n\n/*\n1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)\n2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)\n   This can trigger a poorly considered lint error in some tools but is included by design.\n*/\n\nimg,\nsvg,\nvideo,\ncanvas,\naudio,\niframe,\nembed,\nobject {\n  display: block;\n  /* 1 */\n  vertical-align: middle;\n  /* 2 */\n}\n\n/*\nConstrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)\n*/\n\nimg,\nvideo {\n  max-width: 100%;\n  height: auto;\n}\n\n/* Make elements with the HTML hidden attribute stay hidden by default */\n\n[hidden] {\n  display: none;\n}\n\n*, ::before, ::after {\n  --tw-border-spacing-x: 0;\n  --tw-border-spacing-y: 0;\n  --tw-translate-x: 0;\n  --tw-translate-y: 0;\n  --tw-rotate: 0;\n  --tw-skew-x: 0;\n  --tw-skew-y: 0;\n  --tw-scale-x: 1;\n  --tw-scale-y: 1;\n  --tw-pan-x:  ;\n  --tw-pan-y:  ;\n  --tw-pinch-zoom:  ;\n  --tw-scroll-snap-strictness: proximity;\n  --tw-gradient-from-position:  ;\n  --tw-gradient-via-position:  ;\n  --tw-gradient-to-position:  ;\n  --tw-ordinal:  ;\n  --tw-slashed-zero:  ;\n  --tw-numeric-figure:  ;\n  --tw-numeric-spacing:  ;\n  --tw-numeric-fraction:  ;\n  --tw-ring-inset:  ;\n  --tw-ring-offset-width: 0px;\n  --tw-ring-offset-color: #fff;\n  --tw-ring-color: rgb(59 130 246 / 0.5);\n  --tw-ring-offset-shadow: 0 0 #0000;\n  --tw-ring-shadow: 0 0 #0000;\n  --tw-shadow: 0 0 #0000;\n  --tw-shadow-colored: 0 0 #0000;\n  --tw-blur:  ;\n  --tw-brightness:  ;\n  --tw-contrast:  ;\n  --tw-grayscale:  ;\n  --tw-hue-rotate:  ;\n  --tw-invert:  ;\n  --tw-saturate:  ;\n  --tw-sepia:  ;\n  --tw-drop-shadow:  ;\n  --tw-backdrop-blur:  ;\n  --tw-backdrop-brightness:  ;\n  --tw-backdrop-contrast:  ;\n  --tw-backdrop-grayscale:  ;\n  --tw-backdrop-hue-rotate:  ;\n  --tw-backdrop-invert:  ;\n  --tw-backdrop-opacity:  ;\n  --tw-backdrop-saturate:  ;\n  --tw-backdrop-sepia:  ;\n  --tw-contain-size:  ;\n  --tw-contain-layout:  ;\n  --tw-contain-paint:  ;\n  --tw-contain-style:  ;\n}\n\n::backdrop {\n  --tw-border-spacing-x: 0;\n  --tw-border-spacing-y: 0;\n  --tw-translate-x: 0;\n  --tw-translate-y: 0;\n  --tw-rotate: 0;\n  --tw-skew-x: 0;\n  --tw-skew-y: 0;\n  --tw-scale-x: 1;\n  --tw-scale-y: 1;\n  --tw-pan-x:  ;\n  --tw-pan-y:  ;\n  --tw-pinch-zoom:  ;\n  --tw-scroll-snap-strictness: proximity;\n  --tw-gradient-from-position:  ;\n  --tw-gradient-via-position:  ;\n  --tw-gradient-to-position:  ;\n  --tw-ordinal:  ;\n  --tw-slashed-zero:  ;\n  --tw-numeric-figure:  ;\n  --tw-numeric-spacing:  ;\n  --tw-numeric-fraction:  ;\n  --tw-ring-inset:  ;\n  --tw-ring-offset-width: 0px;\n  --tw-ring-offset-color: #fff;\n  --tw-ring-color: rgb(59 130 246 / 0.5);\n  --tw-ring-offset-shadow: 0 0 #0000;\n  --tw-ring-shadow: 0 0 #0000;\n  --tw-shadow: 0 0 #0000;\n  --tw-shadow-colored: 0 0 #0000;\n  --tw-blur:  ;\n  --tw-brightness:  ;\n  --tw-contrast:  ;\n  --tw-grayscale:  ;\n  --tw-hue-rotate:  ;\n  --tw-invert:  ;\n  --tw-saturate:  ;\n  --tw-sepia:  ;\n  --tw-drop-shadow:  ;\n  --tw-backdrop-blur:  ;\n  --tw-backdrop-brightness:  ;\n  --tw-backdrop-contrast:  ;\n  --tw-backdrop-grayscale:  ;\n  --tw-backdrop-hue-rotate:  ;\n  --tw-backdrop-invert:  ;\n  --tw-backdrop-opacity:  ;\n  --tw-backdrop-saturate:  ;\n  --tw-backdrop-sepia:  ;\n  --tw-contain-size:  ;\n  --tw-contain-layout:  ;\n  --tw-contain-paint:  ;\n  --tw-contain-style:  ;\n}\n\n.container {\n  width: 100%;\n}\n\n@media (min-width: 640px) {\n  .container {\n    max-width: 640px;\n  }\n}\n\n@media (min-width: 768px) {\n  .container {\n    max-width: 768px;\n  }\n}\n\n@media (min-width: 1024px) {\n  .container {\n    max-width: 1024px;\n  }\n}\n\n@media (min-width: 1280px) {\n  .container {\n    max-width: 1280px;\n  }\n}\n\n@media (min-width: 1536px) {\n  .container {\n    max-width: 1536px;\n  }\n}\n\n.absolute {\n  position: absolute;\n}\n\n.relative {\n  position: relative;\n}\n\n.mx-auto {\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.my-2 {\n  margin-top: 0.5rem;\n  margin-bottom: 0.5rem;\n}\n\n.my-4 {\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n}\n\n.mb-2 {\n  margin-bottom: 0.5rem;\n}\n\n.mt-1 {\n  margin-top: 0.25rem;\n}\n\n.mt-4 {\n  margin-top: 1rem;\n}\n\n.inline-block {\n  display: inline-block;\n}\n\n.flex {\n  display: flex;\n}\n\n.hidden {\n  display: none;\n}\n\n.h-2 {\n  height: 0.5rem;\n}\n\n.h-full {\n  height: 100%;\n}\n\n.w-16 {\n  width: 4rem;\n}\n\n.w-\\[300px\\] {\n  width: 300px;\n}\n\n.w-\\[80\\%\\] {\n  width: 80%;\n}\n\n.w-\\[800px\\] {\n  width: 800px;\n}\n\n.w-\\[85\\%\\] {\n  width: 85%;\n}\n\n.w-\\[90\\%\\] {\n  width: 90%;\n}\n\n.w-full {\n  width: 100%;\n}\n\n.flex-shrink-0 {\n  flex-shrink: 0;\n}\n\n.flex-grow {\n  flex-grow: 1;\n}\n\n.transform {\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\n}\n\n.items-center {\n  align-items: center;\n}\n\n.gap-1 {\n  gap: 0.25rem;\n}\n\n.gap-4 {\n  gap: 1rem;\n}\n\n.overflow-hidden {\n  overflow: hidden;\n}\n\n.text-ellipsis {\n  text-overflow: ellipsis;\n}\n\n.whitespace-nowrap {\n  white-space: nowrap;\n}\n\n.rounded-full {\n  border-radius: 9999px;\n}\n\n.border {\n  border-width: 1px;\n}\n\n.border-l-2 {\n  border-left-width: 2px;\n}\n\n.border-solid {\n  border-style: solid;\n}\n\n.border-gray-400 {\n  --tw-border-opacity: 1;\n  border-color: rgb(156 163 175 / var(--tw-border-opacity));\n}\n\n.border-white {\n  --tw-border-opacity: 1;\n  border-color: rgb(255 255 255 / var(--tw-border-opacity));\n}\n\n.bg-\\[\\#345da7\\] {\n  --tw-bg-opacity: 1;\n  background-color: rgb(52 93 167 / var(--tw-bg-opacity));\n}\n\n.bg-gray-400 {\n  --tw-bg-opacity: 1;\n  background-color: rgb(156 163 175 / var(--tw-bg-opacity));\n}\n\n.bg-slate-600 {\n  --tw-bg-opacity: 1;\n  background-color: rgb(71 85 105 / var(--tw-bg-opacity));\n}\n\n.bg-white {\n  --tw-bg-opacity: 1;\n  background-color: rgb(255 255 255 / var(--tw-bg-opacity));\n}\n\n.p-4 {\n  padding: 1rem;\n}\n\n.px-8 {\n  padding-left: 2rem;\n  padding-right: 2rem;\n}\n\n.py-2 {\n  padding-top: 0.5rem;\n  padding-bottom: 0.5rem;\n}\n\n.py-4 {\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n}\n\n.py-8 {\n  padding-top: 2rem;\n  padding-bottom: 2rem;\n}\n\n.pl-2 {\n  padding-left: 0.5rem;\n}\n\n.text-center {\n  text-align: center;\n}\n\n.indent-8 {\n  text-indent: 2rem;\n}\n\n.text-lg {\n  font-size: 1.125rem;\n  line-height: 1.75rem;\n}\n\n.text-sm {\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n}\n\n.font-bold {\n  font-weight: 700;\n}\n\n.uppercase {\n  text-transform: uppercase;\n}\n\n.text-slate-200 {\n  --tw-text-opacity: 1;\n  color: rgb(226 232 240 / var(--tw-text-opacity));\n}\n\n.text-slate-600 {\n  --tw-text-opacity: 1;\n  color: rgb(71 85 105 / var(--tw-text-opacity));\n}\n\n.text-white {\n  --tw-text-opacity: 1;\n  color: rgb(255 255 255 / var(--tw-text-opacity));\n}\n\n.underline {\n  text-decoration-line: underline;\n}\n\n.underline-offset-8 {\n  text-underline-offset: 8px;\n}\n\n.shadow-2xl {\n  --tw-shadow: 0 25px 50px -12px rgb(0 0 0 / 0.25);\n  --tw-shadow-colored: 0 25px 50px -12px var(--tw-shadow-color);\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\n}\n\n* {\n  box-sizing: border-box;\n}\n\nhtml {\n  font-family: monospace;\n  font-size: 16px;\n}\n\na:hover {\n  text-decoration: underline;\n  text-underline-offset: 4px;\n}\n\n.before\\:absolute::before {\n  content: var(--tw-content);\n  position: absolute;\n}\n\n.before\\:-left-3::before {\n  content: var(--tw-content);\n  left: -0.75rem;\n}\n\n.before\\:h-2::before {\n  content: var(--tw-content);\n  height: 0.5rem;\n}\n\n.before\\:w-2::before {\n  content: var(--tw-content);\n  width: 0.5rem;\n}\n\n.before\\:rounded-full::before {\n  content: var(--tw-content);\n  border-radius: 9999px;\n}\n\n.before\\:bg-blue-500::before {\n  content: var(--tw-content);\n  --tw-bg-opacity: 1;\n  background-color: rgb(59 130 246 / var(--tw-bg-opacity));\n}\n\n.hover\\:drop-shadow-lg:hover {\n  --tw-drop-shadow: drop-shadow(0 10px 8px rgb(0 0 0 / 0.04)) drop-shadow(0 4px 3px rgb(0 0 0 / 0.1));\n  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);\n}\n\n.peer ~ .peer-\\[\\]\\:mt-6 {\n  margin-top: 1.5rem;\n}","date":"2024-05-16T03:39:59.606Z","updated":"2024-05-16T03:39:59.606Z","path":"about/output.css","layout":"false","title":"","comments":1,"_id":"clw8r01ju0002raen2dnia1wx","content":"/*\n! tailwindcss v3.4.3 | MIT License | https://tailwindcss.com\n*/\n\n/*\n1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)\n2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)\n*/\n\n*,\n::before,\n::after {\n  box-sizing: border-box;\n  /* 1 */\n  border-width: 0;\n  /* 2 */\n  border-style: solid;\n  /* 2 */\n  border-color: #e5e7eb;\n  /* 2 */\n}\n\n::before,\n::after {\n  --tw-content: '';\n}\n\n/*\n1. Use a consistent sensible line-height in all browsers.\n2. Prevent adjustments of font size after orientation changes in iOS.\n3. Use a more readable tab size.\n4. Use the user's configured `sans` font-family by default.\n5. Use the user's configured `sans` font-feature-settings by default.\n6. Use the user's configured `sans` font-variation-settings by default.\n7. Disable tap highlights on iOS\n*/\n\nhtml,\n:host {\n  line-height: 1.5;\n  /* 1 */\n  -webkit-text-size-adjust: 100%;\n  /* 2 */\n  -moz-tab-size: 4;\n  /* 3 */\n  -o-tab-size: 4;\n     tab-size: 4;\n  /* 3 */\n  font-family: ui-sans-serif, system-ui, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";\n  /* 4 */\n  font-feature-settings: normal;\n  /* 5 */\n  font-variation-settings: normal;\n  /* 6 */\n  -webkit-tap-highlight-color: transparent;\n  /* 7 */\n}\n\n/*\n1. Remove the margin in all browsers.\n2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.\n*/\n\nbody {\n  margin: 0;\n  /* 1 */\n  line-height: inherit;\n  /* 2 */\n}\n\n/*\n1. Add the correct height in Firefox.\n2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\n3. Ensure horizontal rules are visible by default.\n*/\n\nhr {\n  height: 0;\n  /* 1 */\n  color: inherit;\n  /* 2 */\n  border-top-width: 1px;\n  /* 3 */\n}\n\n/*\nAdd the correct text decoration in Chrome, Edge, and Safari.\n*/\n\nabbr:where([title]) {\n  -webkit-text-decoration: underline dotted;\n          text-decoration: underline dotted;\n}\n\n/*\nRemove the default font size and weight for headings.\n*/\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-size: inherit;\n  font-weight: inherit;\n}\n\n/*\nReset links to optimize for opt-in styling instead of opt-out.\n*/\n\na {\n  color: inherit;\n  text-decoration: inherit;\n}\n\n/*\nAdd the correct font weight in Edge and Safari.\n*/\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/*\n1. Use the user's configured `mono` font-family by default.\n2. Use the user's configured `mono` font-feature-settings by default.\n3. Use the user's configured `mono` font-variation-settings by default.\n4. Correct the odd `em` font sizing in all browsers.\n*/\n\ncode,\nkbd,\nsamp,\npre {\n  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace;\n  /* 1 */\n  font-feature-settings: normal;\n  /* 2 */\n  font-variation-settings: normal;\n  /* 3 */\n  font-size: 1em;\n  /* 4 */\n}\n\n/*\nAdd the correct font size in all browsers.\n*/\n\nsmall {\n  font-size: 80%;\n}\n\n/*\nPrevent `sub` and `sup` elements from affecting the line height in all browsers.\n*/\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/*\n1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\n2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\n3. Remove gaps between table borders by default.\n*/\n\ntable {\n  text-indent: 0;\n  /* 1 */\n  border-color: inherit;\n  /* 2 */\n  border-collapse: collapse;\n  /* 3 */\n}\n\n/*\n1. Change the font styles in all browsers.\n2. Remove the margin in Firefox and Safari.\n3. Remove default padding in all browsers.\n*/\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit;\n  /* 1 */\n  font-feature-settings: inherit;\n  /* 1 */\n  font-variation-settings: inherit;\n  /* 1 */\n  font-size: 100%;\n  /* 1 */\n  font-weight: inherit;\n  /* 1 */\n  line-height: inherit;\n  /* 1 */\n  letter-spacing: inherit;\n  /* 1 */\n  color: inherit;\n  /* 1 */\n  margin: 0;\n  /* 2 */\n  padding: 0;\n  /* 3 */\n}\n\n/*\nRemove the inheritance of text transform in Edge and Firefox.\n*/\n\nbutton,\nselect {\n  text-transform: none;\n}\n\n/*\n1. Correct the inability to style clickable types in iOS and Safari.\n2. Remove default button styles.\n*/\n\nbutton,\ninput:where([type='button']),\ninput:where([type='reset']),\ninput:where([type='submit']) {\n  -webkit-appearance: button;\n  /* 1 */\n  background-color: transparent;\n  /* 2 */\n  background-image: none;\n  /* 2 */\n}\n\n/*\nUse the modern Firefox focus style for all focusable elements.\n*/\n\n:-moz-focusring {\n  outline: auto;\n}\n\n/*\nRemove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)\n*/\n\n:-moz-ui-invalid {\n  box-shadow: none;\n}\n\n/*\nAdd the correct vertical alignment in Chrome and Firefox.\n*/\n\nprogress {\n  vertical-align: baseline;\n}\n\n/*\nCorrect the cursor style of increment and decrement buttons in Safari.\n*/\n\n::-webkit-inner-spin-button,\n::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/*\n1. Correct the odd appearance in Chrome and Safari.\n2. Correct the outline style in Safari.\n*/\n\n[type='search'] {\n  -webkit-appearance: textfield;\n  /* 1 */\n  outline-offset: -2px;\n  /* 2 */\n}\n\n/*\nRemove the inner padding in Chrome and Safari on macOS.\n*/\n\n::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/*\n1. Correct the inability to style clickable types in iOS and Safari.\n2. Change font properties to `inherit` in Safari.\n*/\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button;\n  /* 1 */\n  font: inherit;\n  /* 2 */\n}\n\n/*\nAdd the correct display in Chrome and Safari.\n*/\n\nsummary {\n  display: list-item;\n}\n\n/*\nRemoves the default spacing and border for appropriate elements.\n*/\n\nblockquote,\ndl,\ndd,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\nhr,\nfigure,\np,\npre {\n  margin: 0;\n}\n\nfieldset {\n  margin: 0;\n  padding: 0;\n}\n\nlegend {\n  padding: 0;\n}\n\nol,\nul,\nmenu {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n/*\nReset default styling for dialogs.\n*/\n\ndialog {\n  padding: 0;\n}\n\n/*\nPrevent resizing textareas horizontally by default.\n*/\n\ntextarea {\n  resize: vertical;\n}\n\n/*\n1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)\n2. Set the default placeholder color to the user's configured gray 400 color.\n*/\n\ninput::-moz-placeholder, textarea::-moz-placeholder {\n  opacity: 1;\n  /* 1 */\n  color: #9ca3af;\n  /* 2 */\n}\n\ninput::placeholder,\ntextarea::placeholder {\n  opacity: 1;\n  /* 1 */\n  color: #9ca3af;\n  /* 2 */\n}\n\n/*\nSet the default cursor for buttons.\n*/\n\nbutton,\n[role=\"button\"] {\n  cursor: pointer;\n}\n\n/*\nMake sure disabled buttons don't get the pointer cursor.\n*/\n\n:disabled {\n  cursor: default;\n}\n\n/*\n1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)\n2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)\n   This can trigger a poorly considered lint error in some tools but is included by design.\n*/\n\nimg,\nsvg,\nvideo,\ncanvas,\naudio,\niframe,\nembed,\nobject {\n  display: block;\n  /* 1 */\n  vertical-align: middle;\n  /* 2 */\n}\n\n/*\nConstrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)\n*/\n\nimg,\nvideo {\n  max-width: 100%;\n  height: auto;\n}\n\n/* Make elements with the HTML hidden attribute stay hidden by default */\n\n[hidden] {\n  display: none;\n}\n\n*, ::before, ::after {\n  --tw-border-spacing-x: 0;\n  --tw-border-spacing-y: 0;\n  --tw-translate-x: 0;\n  --tw-translate-y: 0;\n  --tw-rotate: 0;\n  --tw-skew-x: 0;\n  --tw-skew-y: 0;\n  --tw-scale-x: 1;\n  --tw-scale-y: 1;\n  --tw-pan-x:  ;\n  --tw-pan-y:  ;\n  --tw-pinch-zoom:  ;\n  --tw-scroll-snap-strictness: proximity;\n  --tw-gradient-from-position:  ;\n  --tw-gradient-via-position:  ;\n  --tw-gradient-to-position:  ;\n  --tw-ordinal:  ;\n  --tw-slashed-zero:  ;\n  --tw-numeric-figure:  ;\n  --tw-numeric-spacing:  ;\n  --tw-numeric-fraction:  ;\n  --tw-ring-inset:  ;\n  --tw-ring-offset-width: 0px;\n  --tw-ring-offset-color: #fff;\n  --tw-ring-color: rgb(59 130 246 / 0.5);\n  --tw-ring-offset-shadow: 0 0 #0000;\n  --tw-ring-shadow: 0 0 #0000;\n  --tw-shadow: 0 0 #0000;\n  --tw-shadow-colored: 0 0 #0000;\n  --tw-blur:  ;\n  --tw-brightness:  ;\n  --tw-contrast:  ;\n  --tw-grayscale:  ;\n  --tw-hue-rotate:  ;\n  --tw-invert:  ;\n  --tw-saturate:  ;\n  --tw-sepia:  ;\n  --tw-drop-shadow:  ;\n  --tw-backdrop-blur:  ;\n  --tw-backdrop-brightness:  ;\n  --tw-backdrop-contrast:  ;\n  --tw-backdrop-grayscale:  ;\n  --tw-backdrop-hue-rotate:  ;\n  --tw-backdrop-invert:  ;\n  --tw-backdrop-opacity:  ;\n  --tw-backdrop-saturate:  ;\n  --tw-backdrop-sepia:  ;\n  --tw-contain-size:  ;\n  --tw-contain-layout:  ;\n  --tw-contain-paint:  ;\n  --tw-contain-style:  ;\n}\n\n::backdrop {\n  --tw-border-spacing-x: 0;\n  --tw-border-spacing-y: 0;\n  --tw-translate-x: 0;\n  --tw-translate-y: 0;\n  --tw-rotate: 0;\n  --tw-skew-x: 0;\n  --tw-skew-y: 0;\n  --tw-scale-x: 1;\n  --tw-scale-y: 1;\n  --tw-pan-x:  ;\n  --tw-pan-y:  ;\n  --tw-pinch-zoom:  ;\n  --tw-scroll-snap-strictness: proximity;\n  --tw-gradient-from-position:  ;\n  --tw-gradient-via-position:  ;\n  --tw-gradient-to-position:  ;\n  --tw-ordinal:  ;\n  --tw-slashed-zero:  ;\n  --tw-numeric-figure:  ;\n  --tw-numeric-spacing:  ;\n  --tw-numeric-fraction:  ;\n  --tw-ring-inset:  ;\n  --tw-ring-offset-width: 0px;\n  --tw-ring-offset-color: #fff;\n  --tw-ring-color: rgb(59 130 246 / 0.5);\n  --tw-ring-offset-shadow: 0 0 #0000;\n  --tw-ring-shadow: 0 0 #0000;\n  --tw-shadow: 0 0 #0000;\n  --tw-shadow-colored: 0 0 #0000;\n  --tw-blur:  ;\n  --tw-brightness:  ;\n  --tw-contrast:  ;\n  --tw-grayscale:  ;\n  --tw-hue-rotate:  ;\n  --tw-invert:  ;\n  --tw-saturate:  ;\n  --tw-sepia:  ;\n  --tw-drop-shadow:  ;\n  --tw-backdrop-blur:  ;\n  --tw-backdrop-brightness:  ;\n  --tw-backdrop-contrast:  ;\n  --tw-backdrop-grayscale:  ;\n  --tw-backdrop-hue-rotate:  ;\n  --tw-backdrop-invert:  ;\n  --tw-backdrop-opacity:  ;\n  --tw-backdrop-saturate:  ;\n  --tw-backdrop-sepia:  ;\n  --tw-contain-size:  ;\n  --tw-contain-layout:  ;\n  --tw-contain-paint:  ;\n  --tw-contain-style:  ;\n}\n\n.container {\n  width: 100%;\n}\n\n@media (min-width: 640px) {\n  .container {\n    max-width: 640px;\n  }\n}\n\n@media (min-width: 768px) {\n  .container {\n    max-width: 768px;\n  }\n}\n\n@media (min-width: 1024px) {\n  .container {\n    max-width: 1024px;\n  }\n}\n\n@media (min-width: 1280px) {\n  .container {\n    max-width: 1280px;\n  }\n}\n\n@media (min-width: 1536px) {\n  .container {\n    max-width: 1536px;\n  }\n}\n\n.absolute {\n  position: absolute;\n}\n\n.relative {\n  position: relative;\n}\n\n.mx-auto {\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.my-2 {\n  margin-top: 0.5rem;\n  margin-bottom: 0.5rem;\n}\n\n.my-4 {\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n}\n\n.mb-2 {\n  margin-bottom: 0.5rem;\n}\n\n.mt-1 {\n  margin-top: 0.25rem;\n}\n\n.mt-4 {\n  margin-top: 1rem;\n}\n\n.inline-block {\n  display: inline-block;\n}\n\n.flex {\n  display: flex;\n}\n\n.hidden {\n  display: none;\n}\n\n.h-2 {\n  height: 0.5rem;\n}\n\n.h-full {\n  height: 100%;\n}\n\n.w-16 {\n  width: 4rem;\n}\n\n.w-\\[300px\\] {\n  width: 300px;\n}\n\n.w-\\[80\\%\\] {\n  width: 80%;\n}\n\n.w-\\[800px\\] {\n  width: 800px;\n}\n\n.w-\\[85\\%\\] {\n  width: 85%;\n}\n\n.w-\\[90\\%\\] {\n  width: 90%;\n}\n\n.w-full {\n  width: 100%;\n}\n\n.flex-shrink-0 {\n  flex-shrink: 0;\n}\n\n.flex-grow {\n  flex-grow: 1;\n}\n\n.transform {\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\n}\n\n.items-center {\n  align-items: center;\n}\n\n.gap-1 {\n  gap: 0.25rem;\n}\n\n.gap-4 {\n  gap: 1rem;\n}\n\n.overflow-hidden {\n  overflow: hidden;\n}\n\n.text-ellipsis {\n  text-overflow: ellipsis;\n}\n\n.whitespace-nowrap {\n  white-space: nowrap;\n}\n\n.rounded-full {\n  border-radius: 9999px;\n}\n\n.border {\n  border-width: 1px;\n}\n\n.border-l-2 {\n  border-left-width: 2px;\n}\n\n.border-solid {\n  border-style: solid;\n}\n\n.border-gray-400 {\n  --tw-border-opacity: 1;\n  border-color: rgb(156 163 175 / var(--tw-border-opacity));\n}\n\n.border-white {\n  --tw-border-opacity: 1;\n  border-color: rgb(255 255 255 / var(--tw-border-opacity));\n}\n\n.bg-\\[\\#345da7\\] {\n  --tw-bg-opacity: 1;\n  background-color: rgb(52 93 167 / var(--tw-bg-opacity));\n}\n\n.bg-gray-400 {\n  --tw-bg-opacity: 1;\n  background-color: rgb(156 163 175 / var(--tw-bg-opacity));\n}\n\n.bg-slate-600 {\n  --tw-bg-opacity: 1;\n  background-color: rgb(71 85 105 / var(--tw-bg-opacity));\n}\n\n.bg-white {\n  --tw-bg-opacity: 1;\n  background-color: rgb(255 255 255 / var(--tw-bg-opacity));\n}\n\n.p-4 {\n  padding: 1rem;\n}\n\n.px-8 {\n  padding-left: 2rem;\n  padding-right: 2rem;\n}\n\n.py-2 {\n  padding-top: 0.5rem;\n  padding-bottom: 0.5rem;\n}\n\n.py-4 {\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n}\n\n.py-8 {\n  padding-top: 2rem;\n  padding-bottom: 2rem;\n}\n\n.pl-2 {\n  padding-left: 0.5rem;\n}\n\n.text-center {\n  text-align: center;\n}\n\n.indent-8 {\n  text-indent: 2rem;\n}\n\n.text-lg {\n  font-size: 1.125rem;\n  line-height: 1.75rem;\n}\n\n.text-sm {\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n}\n\n.font-bold {\n  font-weight: 700;\n}\n\n.uppercase {\n  text-transform: uppercase;\n}\n\n.text-slate-200 {\n  --tw-text-opacity: 1;\n  color: rgb(226 232 240 / var(--tw-text-opacity));\n}\n\n.text-slate-600 {\n  --tw-text-opacity: 1;\n  color: rgb(71 85 105 / var(--tw-text-opacity));\n}\n\n.text-white {\n  --tw-text-opacity: 1;\n  color: rgb(255 255 255 / var(--tw-text-opacity));\n}\n\n.underline {\n  text-decoration-line: underline;\n}\n\n.underline-offset-8 {\n  text-underline-offset: 8px;\n}\n\n.shadow-2xl {\n  --tw-shadow: 0 25px 50px -12px rgb(0 0 0 / 0.25);\n  --tw-shadow-colored: 0 25px 50px -12px var(--tw-shadow-color);\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\n}\n\n* {\n  box-sizing: border-box;\n}\n\nhtml {\n  font-family: monospace;\n  font-size: 16px;\n}\n\na:hover {\n  text-decoration: underline;\n  text-underline-offset: 4px;\n}\n\n.before\\:absolute::before {\n  content: var(--tw-content);\n  position: absolute;\n}\n\n.before\\:-left-3::before {\n  content: var(--tw-content);\n  left: -0.75rem;\n}\n\n.before\\:h-2::before {\n  content: var(--tw-content);\n  height: 0.5rem;\n}\n\n.before\\:w-2::before {\n  content: var(--tw-content);\n  width: 0.5rem;\n}\n\n.before\\:rounded-full::before {\n  content: var(--tw-content);\n  border-radius: 9999px;\n}\n\n.before\\:bg-blue-500::before {\n  content: var(--tw-content);\n  --tw-bg-opacity: 1;\n  background-color: rgb(59 130 246 / var(--tw-bg-opacity));\n}\n\n.hover\\:drop-shadow-lg:hover {\n  --tw-drop-shadow: drop-shadow(0 10px 8px rgb(0 0 0 / 0.04)) drop-shadow(0 4px 3px rgb(0 0 0 / 0.1));\n  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);\n}\n\n.peer ~ .peer-\\[\\]\\:mt-6 {\n  margin-top: 1.5rem;\n}"},{"title":"目录","date":"2022-04-21T09:01:02.000Z","type":"categories","top_img":"https://source.unsplash.com/random/1126x260","_content":"","source":"categories/index.md","raw":"---\ntitle: 目录\ndate: 2022-04-21 17:01:02\ntype: 'categories'\ntop_img: https://source.unsplash.com/random/1126x260\n---\n","updated":"2024-05-16T03:39:59.607Z","path":"categories/index.html","comments":1,"layout":"page","_id":"clw8r01jw0006raen8woya7hf","content":"","cover":"https://source.unsplash.com/random/1126x260","cover_type":"img","excerpt":"","more":""},{"title":"即刻短文","date":"2024-04-29T03:35:17.000Z","comments":1,"aside":false,"type":"essay","_content":"","source":"essay/index.md","raw":"---\ntitle: 即刻短文\ndate: 2024-04-29 11:35:17\ncomments: true\naside: false\ntype: essay\n---\n","updated":"2024-05-16T03:39:59.607Z","path":"essay/index.html","layout":"page","_id":"clw8r01jw0008raengw2re5ob","content":"","cover":"https://source.unsplash.com/random/1126x260","cover_type":"img","excerpt":"","more":""},{"title":"图库","date":"2022-04-21T10:09:01.000Z","type":"gallery","top_img":"https://source.unsplash.com/random/1126x260","_content":"\n<div class=\"gallery-group-main\">\n{% galleryGroup '壁紙' '收藏的一些壁紙' '/gallery/wallpaper/girl/' https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png %}\n</div>\n","source":"gallery/index.md","raw":"---\ntitle: 图库\ndate: 2022-04-21 18:09:01\ntype: 'gallery'\ntop_img: https://source.unsplash.com/random/1126x260\n---\n\n<div class=\"gallery-group-main\">\n{% galleryGroup '壁紙' '收藏的一些壁紙' '/gallery/wallpaper/girl/' https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png %}\n</div>\n","updated":"2024-05-16T03:39:59.607Z","path":"gallery/index.html","comments":1,"layout":"page","_id":"clw8r01jx000araenenpden3u","content":"<div class=\"gallery-group-main\">\n<figure class=\"gallery-group\">\n  <img class=\"gallery-group-img no-lightbox\" src='https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png' alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">壁紙</div>\n  <p>收藏的一些壁紙</p>\n  <a href='/gallery/wallpaper/girl/'></a>\n  </figcaption>\n  </figure>\n  \n</div>\n","cover":"https://source.unsplash.com/random/1126x260","cover_type":"img","excerpt":"","more":"<div class=\"gallery-group-main\">\n<figure class=\"gallery-group\">\n  <img class=\"gallery-group-img no-lightbox\" src='https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png' alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">壁紙</div>\n  <p>收藏的一些壁紙</p>\n  <a href='/gallery/wallpaper/girl/'></a>\n  </figcaption>\n  </figure>\n  \n</div>\n"},{"title":"常用链接","date":"2022-04-21T09:04:10.000Z","type":"link","top_img":"https://source.unsplash.com/random/1126x260","_content":"","source":"link/index.md","raw":"---\ntitle: 常用链接\ndate: 2022-04-21 17:04:10\ntype: 'link'\ntop_img: https://source.unsplash.com/random/1126x260\n---\n","updated":"2024-05-16T03:39:59.609Z","path":"link/index.html","comments":1,"layout":"page","_id":"clw8r01jx000eraenclf5gmzu","content":"","cover":"https://source.unsplash.com/random/1126x260","cover_type":"img","excerpt":"","more":""},{"title":"时刻","type":"moment","_content":"\n很羡慕大家都有自己的小窝。","source":"moment/index.md","raw":"---\ntitle: 时刻\ntype: moment\n---\n\n很羡慕大家都有自己的小窝。","date":"2024-05-16T03:39:59.609Z","updated":"2024-05-16T03:39:59.609Z","path":"moment/index.html","comments":1,"layout":"page","_id":"clw8r01jy000graencprbde4o","content":"<p>很羡慕大家都有自己的小窝。</p>\n","cover":"https://source.unsplash.com/random/1126x260","cover_type":"img","excerpt":"","more":"<p>很羡慕大家都有自己的小窝。</p>\n"},{"title":"读文观影","date":"2022-04-22T10:05:43.000Z","type":"movies","top_img":"https://source.unsplash.com/random/1126x260","_content":"","source":"movies/index.md","raw":"---\ntitle: 读文观影\ndate: 2022-04-22 18:05:43\ntype: 'movies'\ntop_img: https://source.unsplash.com/random/1126x260\n---\n","updated":"2024-05-16T03:39:59.609Z","path":"movies/index.html","comments":1,"layout":"page","_id":"clw8r01jz000lraenbseu00f7","content":"","cover":"https://source.unsplash.com/random/1126x260","cover_type":"img","excerpt":"","more":""},{"title":"音乐鉴赏","date":"2022-04-22T09:53:13.000Z","type":"music","top_img":"https://source.unsplash.com/random/1126x260","_content":"","source":"music/index.md","raw":"---\ntitle: 音乐鉴赏\ndate: 2022-04-22 17:53:13\ntype: 'music'\ntop_img: https://source.unsplash.com/random/1126x260\n---\n","updated":"2024-05-16T03:39:59.609Z","path":"music/index.html","comments":1,"layout":"page","_id":"clw8r01jz000oraen1g5c1c6p","content":"","cover":"https://source.unsplash.com/random/1126x260","cover_type":"img","excerpt":"","more":""},{"title":"tags","date":"2022-04-21T09:02:38.000Z","type":"tags","top_img":"https://source.unsplash.com/random/1126x260","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2022-04-21 17:02:38\ntype: 'tags'\ntop_img: https://source.unsplash.com/random/1126x260\n---\n","updated":"2024-05-16T03:39:59.610Z","path":"tags/index.html","comments":1,"layout":"page","_id":"clw8r01k0000uraen6kncefhy","content":"","cover":"https://source.unsplash.com/random/1126x260","cover_type":"img","excerpt":"","more":""},{"title":"友情链接","date":"2022-04-21T09:04:10.000Z","top_img":"https://source.unsplash.com/random/1126x260","_content":"\n> 君子之交淡若水，小人之交甘若醴。——《庄子·山木》\n\n此处用于添加友情链接！如需申请添加友情链接，请前往 [Issue](https://github.com/ultravires/ultravires.github.io) 提交申请。\n","source":"link/friendly/index.md","raw":"---\ntitle: 友情链接\ndate: 2022-04-21 17:04:10\n# type: 'link'\ntop_img: https://source.unsplash.com/random/1126x260\n---\n\n> 君子之交淡若水，小人之交甘若醴。——《庄子·山木》\n\n此处用于添加友情链接！如需申请添加友情链接，请前往 [Issue](https://github.com/ultravires/ultravires.github.io) 提交申请。\n","updated":"2024-05-16T03:39:59.608Z","path":"link/friendly/index.html","comments":1,"layout":"page","_id":"clw8r01k1000yraen1lcyhjh1","content":"<blockquote>\n<p>君子之交淡若水，小人之交甘若醴。——《庄子·山木》</p>\n</blockquote>\n<p>此处用于添加友情链接！如需申请添加友情链接，请前往 <a href=\"https://github.com/ultravires/ultravires.github.io\">Issue</a> 提交申请。</p>\n","cover":"https://source.unsplash.com/random/1126x260","cover_type":"img","excerpt":"","more":"<blockquote>\n<p>君子之交淡若水，小人之交甘若醴。——《庄子·山木》</p>\n</blockquote>\n<p>此处用于添加友情链接！如需申请添加友情链接，请前往 <a href=\"https://github.com/ultravires/ultravires.github.io\">Issue</a> 提交申请。</p>\n"},{"title":"我的壁纸库","top_img":"https://source.unsplash.com/random/1126x260","_content":"\n{% gallery %}\n![](https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg)\n![](https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg)\n![](https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg)\n![](https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg)\n![](https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg)\n![](https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg)\n![](https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg)\n![](https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg)\n{% endgallery %}\n","source":"gallery/wallpaper/girl/index.md","raw":"---\ntitle: 我的壁纸库\ntop_img: https://source.unsplash.com/random/1126x260\n---\n\n{% gallery %}\n![](https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg)\n![](https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg)\n![](https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg)\n![](https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg)\n![](https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg)\n![](https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg)\n![](https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg)\n![](https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg)\n{% endgallery %}\n","date":"2024-05-16T03:39:59.608Z","updated":"2024-05-16T03:39:59.608Z","path":"gallery/wallpaper/girl/index.html","comments":1,"layout":"page","_id":"clw8r01k10012raenha147xlm","content":"<div class=\"gallery-container\" data-type=\"data\" data-button=\"\">\n      <div class=\"gallery-data\">[{\"url\":\"https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg\",\"alt\":\"\"},{\"url\":\"https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg\",\"alt\":\"\"},{\"url\":\"https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg\",\"alt\":\"\"},{\"url\":\"https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg\",\"alt\":\"\"},{\"url\":\"https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg\",\"alt\":\"\"},{\"url\":\"https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg\",\"alt\":\"\"},{\"url\":\"https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg\",\"alt\":\"\"},{\"url\":\"https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg\",\"alt\":\"\"}]</div>\n      <div class=\"gallery-items\">\n      </div>\n    </div>\n","cover":"https://source.unsplash.com/random/1126x260","cover_type":"img","excerpt":"","more":"<div class=\"gallery-container\" data-type=\"data\" data-button=\"\">\n      <div class=\"gallery-data\">[{\"url\":\"https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg\",\"alt\":\"\"},{\"url\":\"https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg\",\"alt\":\"\"},{\"url\":\"https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg\",\"alt\":\"\"},{\"url\":\"https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg\",\"alt\":\"\"},{\"url\":\"https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg\",\"alt\":\"\"},{\"url\":\"https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg\",\"alt\":\"\"},{\"url\":\"https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg\",\"alt\":\"\"},{\"url\":\"https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg\",\"alt\":\"\"}]</div>\n      <div class=\"gallery-items\">\n      </div>\n    </div>\n"}],"Post":[{"title":"Butterfly 主题修改：增加波浪效果","abbrlink":"1c9f23df","date":"2024-04-25T01:40:45.000Z","cover":"https://th.bing.com/th/id/OIP.JrlwjebJnCgSUZSal2OJSwHaEo?rs=1&pid=ImgDetMain","_content":"\n`Butterfly` 主题的可配置度很高，但主题界面上比较朴素。`Butterfly` 原有的文章页面显得有些生硬，于是想着给页面添加一些动态效果。波浪效果在大多数博客页面都有使用到，个人也比较喜欢，主要是因为波浪动效不会让人感觉到浮躁，还增加了页面的生动性。\n\n## 新增模板\n\n在 `themes/butterfly/layout/includes/header` 下新增 `wave.pug` 文件:\n\n```pug\n<svg class=\"waves-svg\" xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 24 150 28\" preserveAspectRatio=\"none\" shape-rendering=\"auto\">\n  <defs>\n    <path id=\"gentle-wave\" d=\"M -160 44 c 30 0 58 -18 88 -18 s 58 18 88 18 s 58 -18 88 -18 s 58 18 88 18 v 44 h -352 Z\"></path>\n  </defs>\n  <g class=\"parallax\">\n    <use href=\"#gentle-wave\" x=\"48\" y=\"0\"></use>\n    <use href=\"#gentle-wave\" x=\"48\" y=\"3\"></use>\n    <use href=\"#gentle-wave\" x=\"48\" y=\"5\"></use>\n    <use href=\"#gentle-wave\" x=\"48\" y=\"7\"></use>\n  </g>\n</svg>\n```\n\n## 修改页面\n\n在 `themes/butterfly/layout/includes/header/index.pug` 文件中的指定位置处新增如下代码：\n\n```diff\nheader#page-header(class=`${isHomeClass+isFixedClass}` style=bg_img)\n  !=partial('includes/header/nav', {}, {cache: true})\n  if top_img !== false\n    if is_post()\n      include ./post-info.pug\n+     include ./wave.pug\n    else if is_home() \n      #site-info\n        h1#site-title=site_title\n        if theme.subtitle.enable\n          - var loadSubJs = true\n          #site-subtitle\n            span#subtitle\n        if(theme.social)\n          #site_social_icons\n            !=partial('includes/header/social', {}, {cache: true})\n      #scroll-down\n        i.fas.fa-angle-down.scroll-down-effects\n    else\n      #page-site-info\n        h1#site-title=site_title\n```\n\n## 新增样式\n\n在 `themes/butterfly/source/css/_layout` 下新增样式文件 `wave.styl`:\n\n```styl\n@media (max-width: 768px) {\n  .waves-svg {\n    display: none;\n  }\n}\n\n.waves-svg {\n  --wave-background: $web-bg || var(--global-bg);\n  position: absolute;\n  bottom: -10px;\n  width: 100%;\n  height: 60px;\n}\n\n.parallax>use {\n  animation: move-forever 30s cubic-bezier(.55,.5,.45,.5) infinite;\n}\n\n.parallax>use:nth-child(1) {\n  animation-delay: -2s;\n  animation-duration: 7s;\n  fill: var(--wave-background);\n  opacity: .5;\n}\n\n.parallax>use:nth-child(2) {\n  animation-delay: -3s;\n  animation-duration: 10s;\n  fill: var(--wave-background);\n  opacity: .6;\n}\n\n.parallax>use:nth-child(3) {\n  animation-delay: -4s;\n  animation-duration: 13s;\n  fill: var(--wave-background);\n  opacity: .7;\n}\n\n.parallax>use:nth-child(4) {\n  animation-delay: -5s;\n  animation-duration: 20s;\n  fill: var(--wave-background);\n}\n\n@keyframes move-forever {\n  from {\n    transform: translate3d(-90px,0,0);\n  }\n  to {\n    transform: translate3d(85px,0,0);\n  }\n}\n```\n\n## 进一步优化\n\n由于新增了波浪效果后，文章的发布信息会被波浪遮挡一部分，所以这里进一步扩展 `butterfly` 主题的配置。\n\n在 `themes/butterfly/sources/css/var.styl` 文件中新增样式变量：\n\n```diff\n$index_top_img_height = hexo-config('index_top_img_height') ? convert(hexo-config('index_top_img_height')) : 100vh\n$index_site_info_top = hexo-config('index_site_info_top') ? convert(hexo-config('index_site_info_top')) : 43%\n+ $post_top_img_height = hexo-config('post_top_img_height') ? convert(hexo-config('post_top_img_height')) : 400px\n+ $post_site_info_top = hexo-config('post_site_info_top') ? convert(hexo-config('post_site_info_top')) : 30%\n```\n\n修改 `themes/butterfly/source/css/_layout/head.styl` 文件中的样式：\n\n```styl\n  // post\n  &.post-bg\n    height: $post_top_img_height\n```\n\n主题配置文件 `_config.butterfly.yml` 中新增相关配置：\n\n```diff\n+ post_site_info_top: 40%\n+ post_top_img_height: 400px\n```\n","source":"_posts/Butterfly-主题修改：增加波浪效果.md","raw":"---\ntitle: Butterfly 主题修改：增加波浪效果\ncategories:\n  - Butterfly\ntags:\n  - Butterfly\n  - Hexo\nabbrlink: 1c9f23df\ndate: 2024-04-25 09:40:45\ncover: https://th.bing.com/th/id/OIP.JrlwjebJnCgSUZSal2OJSwHaEo?rs=1&pid=ImgDetMain\n---\n\n`Butterfly` 主题的可配置度很高，但主题界面上比较朴素。`Butterfly` 原有的文章页面显得有些生硬，于是想着给页面添加一些动态效果。波浪效果在大多数博客页面都有使用到，个人也比较喜欢，主要是因为波浪动效不会让人感觉到浮躁，还增加了页面的生动性。\n\n## 新增模板\n\n在 `themes/butterfly/layout/includes/header` 下新增 `wave.pug` 文件:\n\n```pug\n<svg class=\"waves-svg\" xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 24 150 28\" preserveAspectRatio=\"none\" shape-rendering=\"auto\">\n  <defs>\n    <path id=\"gentle-wave\" d=\"M -160 44 c 30 0 58 -18 88 -18 s 58 18 88 18 s 58 -18 88 -18 s 58 18 88 18 v 44 h -352 Z\"></path>\n  </defs>\n  <g class=\"parallax\">\n    <use href=\"#gentle-wave\" x=\"48\" y=\"0\"></use>\n    <use href=\"#gentle-wave\" x=\"48\" y=\"3\"></use>\n    <use href=\"#gentle-wave\" x=\"48\" y=\"5\"></use>\n    <use href=\"#gentle-wave\" x=\"48\" y=\"7\"></use>\n  </g>\n</svg>\n```\n\n## 修改页面\n\n在 `themes/butterfly/layout/includes/header/index.pug` 文件中的指定位置处新增如下代码：\n\n```diff\nheader#page-header(class=`${isHomeClass+isFixedClass}` style=bg_img)\n  !=partial('includes/header/nav', {}, {cache: true})\n  if top_img !== false\n    if is_post()\n      include ./post-info.pug\n+     include ./wave.pug\n    else if is_home() \n      #site-info\n        h1#site-title=site_title\n        if theme.subtitle.enable\n          - var loadSubJs = true\n          #site-subtitle\n            span#subtitle\n        if(theme.social)\n          #site_social_icons\n            !=partial('includes/header/social', {}, {cache: true})\n      #scroll-down\n        i.fas.fa-angle-down.scroll-down-effects\n    else\n      #page-site-info\n        h1#site-title=site_title\n```\n\n## 新增样式\n\n在 `themes/butterfly/source/css/_layout` 下新增样式文件 `wave.styl`:\n\n```styl\n@media (max-width: 768px) {\n  .waves-svg {\n    display: none;\n  }\n}\n\n.waves-svg {\n  --wave-background: $web-bg || var(--global-bg);\n  position: absolute;\n  bottom: -10px;\n  width: 100%;\n  height: 60px;\n}\n\n.parallax>use {\n  animation: move-forever 30s cubic-bezier(.55,.5,.45,.5) infinite;\n}\n\n.parallax>use:nth-child(1) {\n  animation-delay: -2s;\n  animation-duration: 7s;\n  fill: var(--wave-background);\n  opacity: .5;\n}\n\n.parallax>use:nth-child(2) {\n  animation-delay: -3s;\n  animation-duration: 10s;\n  fill: var(--wave-background);\n  opacity: .6;\n}\n\n.parallax>use:nth-child(3) {\n  animation-delay: -4s;\n  animation-duration: 13s;\n  fill: var(--wave-background);\n  opacity: .7;\n}\n\n.parallax>use:nth-child(4) {\n  animation-delay: -5s;\n  animation-duration: 20s;\n  fill: var(--wave-background);\n}\n\n@keyframes move-forever {\n  from {\n    transform: translate3d(-90px,0,0);\n  }\n  to {\n    transform: translate3d(85px,0,0);\n  }\n}\n```\n\n## 进一步优化\n\n由于新增了波浪效果后，文章的发布信息会被波浪遮挡一部分，所以这里进一步扩展 `butterfly` 主题的配置。\n\n在 `themes/butterfly/sources/css/var.styl` 文件中新增样式变量：\n\n```diff\n$index_top_img_height = hexo-config('index_top_img_height') ? convert(hexo-config('index_top_img_height')) : 100vh\n$index_site_info_top = hexo-config('index_site_info_top') ? convert(hexo-config('index_site_info_top')) : 43%\n+ $post_top_img_height = hexo-config('post_top_img_height') ? convert(hexo-config('post_top_img_height')) : 400px\n+ $post_site_info_top = hexo-config('post_site_info_top') ? convert(hexo-config('post_site_info_top')) : 30%\n```\n\n修改 `themes/butterfly/source/css/_layout/head.styl` 文件中的样式：\n\n```styl\n  // post\n  &.post-bg\n    height: $post_top_img_height\n```\n\n主题配置文件 `_config.butterfly.yml` 中新增相关配置：\n\n```diff\n+ post_site_info_top: 40%\n+ post_top_img_height: 400px\n```\n","slug":"Butterfly-主题修改：增加波浪效果","published":1,"updated":"2024-05-16T03:39:59.603Z","comments":1,"layout":"post","photos":[],"_id":"clw8r01js0001raen0f387ztr","content":"<p><code>Butterfly</code> 主题的可配置度很高，但主题界面上比较朴素。<code>Butterfly</code> 原有的文章页面显得有些生硬，于是想着给页面添加一些动态效果。波浪效果在大多数博客页面都有使用到，个人也比较喜欢，主要是因为波浪动效不会让人感觉到浮躁，还增加了页面的生动性。</p>\n<h2 id=\"新增模板\"><a href=\"#新增模板\" class=\"headerlink\" title=\"新增模板\"></a>新增模板</h2><p>在 <code>themes/butterfly/layout/includes/header</code> 下新增 <code>wave.pug</code> 文件:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;svg class=&quot;waves-svg&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; xlink=&quot;http://www.w3.org/1999/xlink&quot; viewBox=&quot;0 24 150 28&quot; preserveAspectRatio=&quot;none&quot; shape-rendering=&quot;auto&quot;&gt;</span><br><span class=\"line\">  &lt;defs&gt;</span><br><span class=\"line\">    &lt;path id=&quot;gentle-wave&quot; d=&quot;M -160 44 c 30 0 58 -18 88 -18 s 58 18 88 18 s 58 -18 88 -18 s 58 18 88 18 v 44 h -352 Z&quot;&gt;&lt;/path&gt;</span><br><span class=\"line\">  &lt;/defs&gt;</span><br><span class=\"line\">  &lt;g class=&quot;parallax&quot;&gt;</span><br><span class=\"line\">    &lt;use href=&quot;#gentle-wave&quot; x=&quot;48&quot; y=&quot;0&quot;&gt;&lt;/use&gt;</span><br><span class=\"line\">    &lt;use href=&quot;#gentle-wave&quot; x=&quot;48&quot; y=&quot;3&quot;&gt;&lt;/use&gt;</span><br><span class=\"line\">    &lt;use href=&quot;#gentle-wave&quot; x=&quot;48&quot; y=&quot;5&quot;&gt;&lt;/use&gt;</span><br><span class=\"line\">    &lt;use href=&quot;#gentle-wave&quot; x=&quot;48&quot; y=&quot;7&quot;&gt;&lt;/use&gt;</span><br><span class=\"line\">  &lt;/g&gt;</span><br><span class=\"line\">&lt;/svg&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"修改页面\"><a href=\"#修改页面\" class=\"headerlink\" title=\"修改页面\"></a>修改页面</h2><p>在 <code>themes/butterfly/layout/includes/header/index.pug</code> 文件中的指定位置处新增如下代码：</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">header#page-header(class=`$&#123;isHomeClass+isFixedClass&#125;` style=bg_img)</span><br><span class=\"line\">  !=partial(&#x27;includes/header/nav&#x27;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class=\"line\">  if top_img !== false</span><br><span class=\"line\">    if is_post()</span><br><span class=\"line\">      include ./post-info.pug</span><br><span class=\"line\"><span class=\"addition\">+     include ./wave.pug</span></span><br><span class=\"line\">    else if is_home() </span><br><span class=\"line\">      #site-info</span><br><span class=\"line\">        h1#site-title=site_title</span><br><span class=\"line\">        if theme.subtitle.enable</span><br><span class=\"line\">          - var loadSubJs = true</span><br><span class=\"line\">          #site-subtitle</span><br><span class=\"line\">            span#subtitle</span><br><span class=\"line\">        if(theme.social)</span><br><span class=\"line\">          #site_social_icons</span><br><span class=\"line\">            !=partial(&#x27;includes/header/social&#x27;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class=\"line\">      #scroll-down</span><br><span class=\"line\">        i.fas.fa-angle-down.scroll-down-effects</span><br><span class=\"line\">    else</span><br><span class=\"line\">      #page-site-info</span><br><span class=\"line\">        h1#site-title=site_title</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"新增样式\"><a href=\"#新增样式\" class=\"headerlink\" title=\"新增样式\"></a>新增样式</h2><p>在 <code>themes/butterfly/source/css/_layout</code> 下新增样式文件 <code>wave.styl</code>:</p>\n<figure class=\"highlight styl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@media</span> (<span class=\"attribute\">max-width</span>: <span class=\"number\">768px</span>) &#123;</span><br><span class=\"line\">  <span class=\"selector-class\">.waves-svg</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: none;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.waves-svg</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">--wave-background</span>: <span class=\"variable\">$web</span>-bg || <span class=\"selector-tag\">var</span>(<span class=\"attr\">--global-bg</span>);</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">bottom</span>: -<span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">.parallax&gt;use &#123;</span><br><span class=\"line\">  <span class=\"attribute\">animation</span>: move-forever <span class=\"number\">30s</span> <span class=\"built_in\">cubic-bezier</span>(.<span class=\"number\">55</span>,.<span class=\"number\">5</span>,.<span class=\"number\">45</span>,.<span class=\"number\">5</span>) infinite;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">.parallax&gt;use<span class=\"selector-pseudo\">:nth-child</span>(<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">  <span class=\"attribute\">animation-delay</span>: -<span class=\"number\">2s</span>;</span><br><span class=\"line\">  <span class=\"attribute\">animation-duration</span>: <span class=\"number\">7s</span>;</span><br><span class=\"line\">  fill: <span class=\"selector-tag\">var</span>(<span class=\"attr\">--wave-background</span>);</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: .<span class=\"number\">5</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">.parallax&gt;use<span class=\"selector-pseudo\">:nth-child</span>(<span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">  <span class=\"attribute\">animation-delay</span>: -<span class=\"number\">3s</span>;</span><br><span class=\"line\">  <span class=\"attribute\">animation-duration</span>: <span class=\"number\">10s</span>;</span><br><span class=\"line\">  fill: <span class=\"selector-tag\">var</span>(<span class=\"attr\">--wave-background</span>);</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: .<span class=\"number\">6</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">.parallax&gt;use<span class=\"selector-pseudo\">:nth-child</span>(<span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">  <span class=\"attribute\">animation-delay</span>: -<span class=\"number\">4s</span>;</span><br><span class=\"line\">  <span class=\"attribute\">animation-duration</span>: <span class=\"number\">13s</span>;</span><br><span class=\"line\">  fill: <span class=\"selector-tag\">var</span>(<span class=\"attr\">--wave-background</span>);</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: .<span class=\"number\">7</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">.parallax&gt;use<span class=\"selector-pseudo\">:nth-child</span>(<span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">  <span class=\"attribute\">animation-delay</span>: -<span class=\"number\">5s</span>;</span><br><span class=\"line\">  <span class=\"attribute\">animation-duration</span>: <span class=\"number\">20s</span>;</span><br><span class=\"line\">  fill: <span class=\"selector-tag\">var</span>(<span class=\"attr\">--wave-background</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@keyframes</span> move-forever &#123;</span><br><span class=\"line\">  from &#123;</span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: <span class=\"built_in\">translate3d</span>(-<span class=\"number\">90px</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  to &#123;</span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: <span class=\"built_in\">translate3d</span>(<span class=\"number\">85px</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"进一步优化\"><a href=\"#进一步优化\" class=\"headerlink\" title=\"进一步优化\"></a>进一步优化</h2><p>由于新增了波浪效果后，文章的发布信息会被波浪遮挡一部分，所以这里进一步扩展 <code>butterfly</code> 主题的配置。</p>\n<p>在 <code>themes/butterfly/sources/css/var.styl</code> 文件中新增样式变量：</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$index_top_img_height = hexo-config(&#x27;index_top_img_height&#x27;) ? convert(hexo-config(&#x27;index_top_img_height&#x27;)) : 100vh</span><br><span class=\"line\">$index_site_info_top = hexo-config(&#x27;index_site_info_top&#x27;) ? convert(hexo-config(&#x27;index_site_info_top&#x27;)) : 43%</span><br><span class=\"line\"><span class=\"addition\">+ $post_top_img_height = hexo-config(&#x27;post_top_img_height&#x27;) ? convert(hexo-config(&#x27;post_top_img_height&#x27;)) : 400px</span></span><br><span class=\"line\"><span class=\"addition\">+ $post_site_info_top = hexo-config(&#x27;post_site_info_top&#x27;) ? convert(hexo-config(&#x27;post_site_info_top&#x27;)) : 30%</span></span><br></pre></td></tr></table></figure>\n\n<p>修改 <code>themes/butterfly/source/css/_layout/head.styl</code> 文件中的样式：</p>\n<figure class=\"highlight styl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// post</span></span><br><span class=\"line\">&amp;<span class=\"selector-class\">.post-bg</span></span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"variable\">$post_top_img_height</span></span><br></pre></td></tr></table></figure>\n\n<p>主题配置文件 <code>_config.butterfly.yml</code> 中新增相关配置：</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"addition\">+ post_site_info_top: 40%</span></span><br><span class=\"line\"><span class=\"addition\">+ post_top_img_height: 400px</span></span><br></pre></td></tr></table></figure>\n","cover_type":"img","excerpt":"","more":"<p><code>Butterfly</code> 主题的可配置度很高，但主题界面上比较朴素。<code>Butterfly</code> 原有的文章页面显得有些生硬，于是想着给页面添加一些动态效果。波浪效果在大多数博客页面都有使用到，个人也比较喜欢，主要是因为波浪动效不会让人感觉到浮躁，还增加了页面的生动性。</p>\n<h2 id=\"新增模板\"><a href=\"#新增模板\" class=\"headerlink\" title=\"新增模板\"></a>新增模板</h2><p>在 <code>themes/butterfly/layout/includes/header</code> 下新增 <code>wave.pug</code> 文件:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;svg class=&quot;waves-svg&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; xlink=&quot;http://www.w3.org/1999/xlink&quot; viewBox=&quot;0 24 150 28&quot; preserveAspectRatio=&quot;none&quot; shape-rendering=&quot;auto&quot;&gt;</span><br><span class=\"line\">  &lt;defs&gt;</span><br><span class=\"line\">    &lt;path id=&quot;gentle-wave&quot; d=&quot;M -160 44 c 30 0 58 -18 88 -18 s 58 18 88 18 s 58 -18 88 -18 s 58 18 88 18 v 44 h -352 Z&quot;&gt;&lt;/path&gt;</span><br><span class=\"line\">  &lt;/defs&gt;</span><br><span class=\"line\">  &lt;g class=&quot;parallax&quot;&gt;</span><br><span class=\"line\">    &lt;use href=&quot;#gentle-wave&quot; x=&quot;48&quot; y=&quot;0&quot;&gt;&lt;/use&gt;</span><br><span class=\"line\">    &lt;use href=&quot;#gentle-wave&quot; x=&quot;48&quot; y=&quot;3&quot;&gt;&lt;/use&gt;</span><br><span class=\"line\">    &lt;use href=&quot;#gentle-wave&quot; x=&quot;48&quot; y=&quot;5&quot;&gt;&lt;/use&gt;</span><br><span class=\"line\">    &lt;use href=&quot;#gentle-wave&quot; x=&quot;48&quot; y=&quot;7&quot;&gt;&lt;/use&gt;</span><br><span class=\"line\">  &lt;/g&gt;</span><br><span class=\"line\">&lt;/svg&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"修改页面\"><a href=\"#修改页面\" class=\"headerlink\" title=\"修改页面\"></a>修改页面</h2><p>在 <code>themes/butterfly/layout/includes/header/index.pug</code> 文件中的指定位置处新增如下代码：</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">header#page-header(class=`$&#123;isHomeClass+isFixedClass&#125;` style=bg_img)</span><br><span class=\"line\">  !=partial(&#x27;includes/header/nav&#x27;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class=\"line\">  if top_img !== false</span><br><span class=\"line\">    if is_post()</span><br><span class=\"line\">      include ./post-info.pug</span><br><span class=\"line\"><span class=\"addition\">+     include ./wave.pug</span></span><br><span class=\"line\">    else if is_home() </span><br><span class=\"line\">      #site-info</span><br><span class=\"line\">        h1#site-title=site_title</span><br><span class=\"line\">        if theme.subtitle.enable</span><br><span class=\"line\">          - var loadSubJs = true</span><br><span class=\"line\">          #site-subtitle</span><br><span class=\"line\">            span#subtitle</span><br><span class=\"line\">        if(theme.social)</span><br><span class=\"line\">          #site_social_icons</span><br><span class=\"line\">            !=partial(&#x27;includes/header/social&#x27;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class=\"line\">      #scroll-down</span><br><span class=\"line\">        i.fas.fa-angle-down.scroll-down-effects</span><br><span class=\"line\">    else</span><br><span class=\"line\">      #page-site-info</span><br><span class=\"line\">        h1#site-title=site_title</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"新增样式\"><a href=\"#新增样式\" class=\"headerlink\" title=\"新增样式\"></a>新增样式</h2><p>在 <code>themes/butterfly/source/css/_layout</code> 下新增样式文件 <code>wave.styl</code>:</p>\n<figure class=\"highlight styl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@media</span> (<span class=\"attribute\">max-width</span>: <span class=\"number\">768px</span>) &#123;</span><br><span class=\"line\">  <span class=\"selector-class\">.waves-svg</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: none;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.waves-svg</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">--wave-background</span>: <span class=\"variable\">$web</span>-bg || <span class=\"selector-tag\">var</span>(<span class=\"attr\">--global-bg</span>);</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">bottom</span>: -<span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">.parallax&gt;use &#123;</span><br><span class=\"line\">  <span class=\"attribute\">animation</span>: move-forever <span class=\"number\">30s</span> <span class=\"built_in\">cubic-bezier</span>(.<span class=\"number\">55</span>,.<span class=\"number\">5</span>,.<span class=\"number\">45</span>,.<span class=\"number\">5</span>) infinite;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">.parallax&gt;use<span class=\"selector-pseudo\">:nth-child</span>(<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">  <span class=\"attribute\">animation-delay</span>: -<span class=\"number\">2s</span>;</span><br><span class=\"line\">  <span class=\"attribute\">animation-duration</span>: <span class=\"number\">7s</span>;</span><br><span class=\"line\">  fill: <span class=\"selector-tag\">var</span>(<span class=\"attr\">--wave-background</span>);</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: .<span class=\"number\">5</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">.parallax&gt;use<span class=\"selector-pseudo\">:nth-child</span>(<span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">  <span class=\"attribute\">animation-delay</span>: -<span class=\"number\">3s</span>;</span><br><span class=\"line\">  <span class=\"attribute\">animation-duration</span>: <span class=\"number\">10s</span>;</span><br><span class=\"line\">  fill: <span class=\"selector-tag\">var</span>(<span class=\"attr\">--wave-background</span>);</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: .<span class=\"number\">6</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">.parallax&gt;use<span class=\"selector-pseudo\">:nth-child</span>(<span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">  <span class=\"attribute\">animation-delay</span>: -<span class=\"number\">4s</span>;</span><br><span class=\"line\">  <span class=\"attribute\">animation-duration</span>: <span class=\"number\">13s</span>;</span><br><span class=\"line\">  fill: <span class=\"selector-tag\">var</span>(<span class=\"attr\">--wave-background</span>);</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: .<span class=\"number\">7</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">.parallax&gt;use<span class=\"selector-pseudo\">:nth-child</span>(<span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">  <span class=\"attribute\">animation-delay</span>: -<span class=\"number\">5s</span>;</span><br><span class=\"line\">  <span class=\"attribute\">animation-duration</span>: <span class=\"number\">20s</span>;</span><br><span class=\"line\">  fill: <span class=\"selector-tag\">var</span>(<span class=\"attr\">--wave-background</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@keyframes</span> move-forever &#123;</span><br><span class=\"line\">  from &#123;</span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: <span class=\"built_in\">translate3d</span>(-<span class=\"number\">90px</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  to &#123;</span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: <span class=\"built_in\">translate3d</span>(<span class=\"number\">85px</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"进一步优化\"><a href=\"#进一步优化\" class=\"headerlink\" title=\"进一步优化\"></a>进一步优化</h2><p>由于新增了波浪效果后，文章的发布信息会被波浪遮挡一部分，所以这里进一步扩展 <code>butterfly</code> 主题的配置。</p>\n<p>在 <code>themes/butterfly/sources/css/var.styl</code> 文件中新增样式变量：</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$index_top_img_height = hexo-config(&#x27;index_top_img_height&#x27;) ? convert(hexo-config(&#x27;index_top_img_height&#x27;)) : 100vh</span><br><span class=\"line\">$index_site_info_top = hexo-config(&#x27;index_site_info_top&#x27;) ? convert(hexo-config(&#x27;index_site_info_top&#x27;)) : 43%</span><br><span class=\"line\"><span class=\"addition\">+ $post_top_img_height = hexo-config(&#x27;post_top_img_height&#x27;) ? convert(hexo-config(&#x27;post_top_img_height&#x27;)) : 400px</span></span><br><span class=\"line\"><span class=\"addition\">+ $post_site_info_top = hexo-config(&#x27;post_site_info_top&#x27;) ? convert(hexo-config(&#x27;post_site_info_top&#x27;)) : 30%</span></span><br></pre></td></tr></table></figure>\n\n<p>修改 <code>themes/butterfly/source/css/_layout/head.styl</code> 文件中的样式：</p>\n<figure class=\"highlight styl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// post</span></span><br><span class=\"line\">&amp;<span class=\"selector-class\">.post-bg</span></span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"variable\">$post_top_img_height</span></span><br></pre></td></tr></table></figure>\n\n<p>主题配置文件 <code>_config.butterfly.yml</code> 中新增相关配置：</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"addition\">+ post_site_info_top: 40%</span></span><br><span class=\"line\"><span class=\"addition\">+ post_top_img_height: 400px</span></span><br></pre></td></tr></table></figure>\n"},{"title":"ECMAScript6 Promise","date":"2024-05-16T04:34:45.000Z","cover":"https://www.myamericannurse.com/wp-content/uploads/2019/09/promises.jpg","abbrlink":"5a6476f0","_content":"\n## Promise\n\nPromise 对象是一个等待处理结果的占位符。它具有三个互斥状态：`fulfilled`, `rejected`, `pending` 。\n\n```js\nconst resolve = (res) => {\n  console.log('resolve: ' + res);\n};\nconst reject = () => {\n  console.log('reject: ' + res);\n};\nconst fn = (flag) => {\n  return new Promise((resolve, reject) => {\n    if (flag === true) {\n      resolve();\n    }\n    if (flag === false) {\n      reject();\n    }\n  }).then(resolve, reject);\n};\nfn(true); // fulfilled\nfn(false); // rejected\nfn(); // pending\n```\n\n如果一个 Promise 对象 `p` 被 fulfilled，那么 `p.then(resolve, reject)` 会立即执行 `resolve` 回调。\n\n```js\nconst resolve = () => {\n  console.log('resolve');\n};\nconst reject = () => {\n  console.log('reject');\n};\nPromise.resolve().then(resolve, reject);\n```\n\n如果一个 Promise 对象 `p` 被 rejected，那么 `p.then(resolve, reject)` 会立即执行 `reject` 回调。\n\n```js\nconst resolve = () => {\n  console.log('resolve');\n};\nconst reject = () => {\n  console.log('reject');\n};\nPromise.reject().then(resolve, reject);\n```\n\n如果一个 Promise 对象既没有被 fulfilled，也没有被 rejected，那么它就是处于 pending 状态的。\n\n```js\nconst promise = new Promise((resolve, reject) => {});\n```\n\n### Promise.resolve()\n\n`Promise.resolve(value)` 方法返回一个以给定值解析后的 `Promise` 对象。如果这个值是一个 promise，那么将返回这个 promise；如果这个值是 thenable （即带有 then 方法），返回的 Promise 会跟随这个 thenable 的对象，采用它的最终状态。\n\n```js\nconst resolve = (res) => {\n  console.log(res);\n};\nconst reject = (res) => {\n  console.log(res);\n};\nPromise.resolve({ name: '熊可' }).then(resolve, reject);\n```\n\n传入 `promise`:\n\n```js\nconst promise = new Promise((resolve, reject) => {});\nPromise.resolve(promise) === promise; // true\n```\n\n传入 thenable:\n\n```js\nconst thenable = {\n  then: (resolve, reject) => {}\n};\nPromise.resolve(thenable); // 返回一个 Promise，且状态为 pending\n```\n\n```js\nconst thenable = {\n  then: (resolve, reject) => {\n    resolve();\n  }\n};\nPromise.resolve(thenable); // 返回一个 Promise，且状态为 fulfilled\n```\n\n```js\nconst thenable = {\n  then: (resolve, reject) => {\n    reject();\n  }\n};\nPromise.resolve(thenable); // 返回一个 Promise，且状态为 rejected\n```\n\n```js\nconst thenable = {\n  then: (resolve, reject) => {\n    resolve(thenable);\n  }\n};\nPromise.resolve(thenable); // 将会进入死循环\n```\n\n### Promise.reject()\n\n`Promise.reject()` 方法返回一个带有拒绝原因的 Promise 对象。\n\n```js\nconst resolve = (res) => {\n  console.log(res);\n};\nconst reject = (res) => {\n  console.log(res);\n};\nPromise.reject(new Error('FAILED')).then(resolve, reject);\n```\n\n## 使用\n\n### 拒绝回调地狱，回调变 Promise\n\n假设有一个需要传入回调的方法 `needCallback`：\n\n```js\nfunction needCallback(callback) {\n  if (typeof callback === 'function') {\n    callback({ code: 0, data: { name: '熊可' } });\n  }\n}\n```\n\n正常调用的时候我们会使用如下方式：\n\n```js\nneedCallback((result) => {\n  // do something\n});\n```\n\n假设我现在需要一个有序调用，即在某个回调完成时才执行下一个步骤，你可能会这么写：\n\n```js\nneedCallback((result) => {\n  needCallback((result) => {\n    needCallback((result) => {\n      needCallback((result) => {\n        needCallback((result) => {\n          // ...\n        });\n      });\n    });\n  });\n});\n```\n\n这就是传说中的回调地狱，你会发现，需要执行的步骤越多，回调嵌套的越深。\n\n那么有没有办法解决这个问题呢？答案是：有的。正确的使用 Promise 能够使我们避免回调地狱。\n\n```js\n// 通过返回一个 Promise 对象来避免嵌套回调\nconst convertPromise = () => {\n  const promise = new Promise((resolve, reject) => {\n    needCallback((result) => {\n      resolve(result);\n    });\n  });\n  return promise;\n};\n\n// 正确的用法\nconvertPromise()\n  .then((result) => {\n    return result;\n  })\n  .then((result) => {\n    return result;\n  })\n  .then((result) => {\n    return result;\n  });\n\n// 错误的用法\nconvertPromise().then((result) => {\n  convertPromise().then((result) => {\n    convertPromise().then((result) => {\n      // ...\n    });\n  });\n});\n```\n\n## 参考链接\n\n> [promises-unwrapping](https://github.com/domenic/promises-unwrapping)\n>\n> [MDN - Promise](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise)\n","source":"_posts/ECMAScript6 Promise.md","raw":"---\ntitle: ECMAScript6 Promise\ndate: 2024-05-16 12:34:45\ncover: https://www.myamericannurse.com/wp-content/uploads/2019/09/promises.jpg\ncategories:\n  - 前端\ntags:\n  - Promise\nabbrlink: 5a6476f0\n---\n\n## Promise\n\nPromise 对象是一个等待处理结果的占位符。它具有三个互斥状态：`fulfilled`, `rejected`, `pending` 。\n\n```js\nconst resolve = (res) => {\n  console.log('resolve: ' + res);\n};\nconst reject = () => {\n  console.log('reject: ' + res);\n};\nconst fn = (flag) => {\n  return new Promise((resolve, reject) => {\n    if (flag === true) {\n      resolve();\n    }\n    if (flag === false) {\n      reject();\n    }\n  }).then(resolve, reject);\n};\nfn(true); // fulfilled\nfn(false); // rejected\nfn(); // pending\n```\n\n如果一个 Promise 对象 `p` 被 fulfilled，那么 `p.then(resolve, reject)` 会立即执行 `resolve` 回调。\n\n```js\nconst resolve = () => {\n  console.log('resolve');\n};\nconst reject = () => {\n  console.log('reject');\n};\nPromise.resolve().then(resolve, reject);\n```\n\n如果一个 Promise 对象 `p` 被 rejected，那么 `p.then(resolve, reject)` 会立即执行 `reject` 回调。\n\n```js\nconst resolve = () => {\n  console.log('resolve');\n};\nconst reject = () => {\n  console.log('reject');\n};\nPromise.reject().then(resolve, reject);\n```\n\n如果一个 Promise 对象既没有被 fulfilled，也没有被 rejected，那么它就是处于 pending 状态的。\n\n```js\nconst promise = new Promise((resolve, reject) => {});\n```\n\n### Promise.resolve()\n\n`Promise.resolve(value)` 方法返回一个以给定值解析后的 `Promise` 对象。如果这个值是一个 promise，那么将返回这个 promise；如果这个值是 thenable （即带有 then 方法），返回的 Promise 会跟随这个 thenable 的对象，采用它的最终状态。\n\n```js\nconst resolve = (res) => {\n  console.log(res);\n};\nconst reject = (res) => {\n  console.log(res);\n};\nPromise.resolve({ name: '熊可' }).then(resolve, reject);\n```\n\n传入 `promise`:\n\n```js\nconst promise = new Promise((resolve, reject) => {});\nPromise.resolve(promise) === promise; // true\n```\n\n传入 thenable:\n\n```js\nconst thenable = {\n  then: (resolve, reject) => {}\n};\nPromise.resolve(thenable); // 返回一个 Promise，且状态为 pending\n```\n\n```js\nconst thenable = {\n  then: (resolve, reject) => {\n    resolve();\n  }\n};\nPromise.resolve(thenable); // 返回一个 Promise，且状态为 fulfilled\n```\n\n```js\nconst thenable = {\n  then: (resolve, reject) => {\n    reject();\n  }\n};\nPromise.resolve(thenable); // 返回一个 Promise，且状态为 rejected\n```\n\n```js\nconst thenable = {\n  then: (resolve, reject) => {\n    resolve(thenable);\n  }\n};\nPromise.resolve(thenable); // 将会进入死循环\n```\n\n### Promise.reject()\n\n`Promise.reject()` 方法返回一个带有拒绝原因的 Promise 对象。\n\n```js\nconst resolve = (res) => {\n  console.log(res);\n};\nconst reject = (res) => {\n  console.log(res);\n};\nPromise.reject(new Error('FAILED')).then(resolve, reject);\n```\n\n## 使用\n\n### 拒绝回调地狱，回调变 Promise\n\n假设有一个需要传入回调的方法 `needCallback`：\n\n```js\nfunction needCallback(callback) {\n  if (typeof callback === 'function') {\n    callback({ code: 0, data: { name: '熊可' } });\n  }\n}\n```\n\n正常调用的时候我们会使用如下方式：\n\n```js\nneedCallback((result) => {\n  // do something\n});\n```\n\n假设我现在需要一个有序调用，即在某个回调完成时才执行下一个步骤，你可能会这么写：\n\n```js\nneedCallback((result) => {\n  needCallback((result) => {\n    needCallback((result) => {\n      needCallback((result) => {\n        needCallback((result) => {\n          // ...\n        });\n      });\n    });\n  });\n});\n```\n\n这就是传说中的回调地狱，你会发现，需要执行的步骤越多，回调嵌套的越深。\n\n那么有没有办法解决这个问题呢？答案是：有的。正确的使用 Promise 能够使我们避免回调地狱。\n\n```js\n// 通过返回一个 Promise 对象来避免嵌套回调\nconst convertPromise = () => {\n  const promise = new Promise((resolve, reject) => {\n    needCallback((result) => {\n      resolve(result);\n    });\n  });\n  return promise;\n};\n\n// 正确的用法\nconvertPromise()\n  .then((result) => {\n    return result;\n  })\n  .then((result) => {\n    return result;\n  })\n  .then((result) => {\n    return result;\n  });\n\n// 错误的用法\nconvertPromise().then((result) => {\n  convertPromise().then((result) => {\n    convertPromise().then((result) => {\n      // ...\n    });\n  });\n});\n```\n\n## 参考链接\n\n> [promises-unwrapping](https://github.com/domenic/promises-unwrapping)\n>\n> [MDN - Promise](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise)\n","slug":"ECMAScript6 Promise","published":1,"updated":"2024-05-16T04:34:46.838Z","_id":"clw8r01ju0003raen06nqclvr","comments":1,"layout":"post","photos":[],"content":"<h2 id=\"Promise\"><a href=\"#Promise\" class=\"headerlink\" title=\"Promise\"></a>Promise</h2><p>Promise 对象是一个等待处理结果的占位符。它具有三个互斥状态：<code>fulfilled</code>, <code>rejected</code>, <code>pending</code> 。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">resolve</span> = (<span class=\"params\">res</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;resolve: &#x27;</span> + res);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">reject</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;reject: &#x27;</span> + res);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">fn</span> = (<span class=\"params\">flag</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (flag === <span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">      <span class=\"title function_\">resolve</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (flag === <span class=\"literal\">false</span>) &#123;</span><br><span class=\"line\">      <span class=\"title function_\">reject</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;).<span class=\"title function_\">then</span>(resolve, reject);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"title function_\">fn</span>(<span class=\"literal\">true</span>); <span class=\"comment\">// fulfilled</span></span><br><span class=\"line\"><span class=\"title function_\">fn</span>(<span class=\"literal\">false</span>); <span class=\"comment\">// rejected</span></span><br><span class=\"line\"><span class=\"title function_\">fn</span>(); <span class=\"comment\">// pending</span></span><br></pre></td></tr></table></figure>\n\n<p>如果一个 Promise 对象 <code>p</code> 被 fulfilled，那么 <code>p.then(resolve, reject)</code> 会立即执行 <code>resolve</code> 回调。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">resolve</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;resolve&#x27;</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">reject</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;reject&#x27;</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"title class_\">Promise</span>.<span class=\"title function_\">resolve</span>().<span class=\"title function_\">then</span>(resolve, reject);</span><br></pre></td></tr></table></figure>\n\n<p>如果一个 Promise 对象 <code>p</code> 被 rejected，那么 <code>p.then(resolve, reject)</code> 会立即执行 <code>reject</code> 回调。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">resolve</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;resolve&#x27;</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">reject</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;reject&#x27;</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"title class_\">Promise</span>.<span class=\"title function_\">reject</span>().<span class=\"title function_\">then</span>(resolve, reject);</span><br></pre></td></tr></table></figure>\n\n<p>如果一个 Promise 对象既没有被 fulfilled，也没有被 rejected，那么它就是处于 pending 状态的。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> promise = <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Promise-resolve\"><a href=\"#Promise-resolve\" class=\"headerlink\" title=\"Promise.resolve()\"></a>Promise.resolve()</h3><p><code>Promise.resolve(value)</code> 方法返回一个以给定值解析后的 <code>Promise</code> 对象。如果这个值是一个 promise，那么将返回这个 promise；如果这个值是 thenable （即带有 then 方法），返回的 Promise 会跟随这个 thenable 的对象，采用它的最终状态。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">resolve</span> = (<span class=\"params\">res</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">reject</span> = (<span class=\"params\">res</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"title class_\">Promise</span>.<span class=\"title function_\">resolve</span>(&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;熊可&#x27;</span> &#125;).<span class=\"title function_\">then</span>(resolve, reject);</span><br></pre></td></tr></table></figure>\n\n<p>传入 <code>promise</code>:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> promise = <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;&#125;);</span><br><span class=\"line\"><span class=\"title class_\">Promise</span>.<span class=\"title function_\">resolve</span>(promise) === promise; <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n\n<p>传入 thenable:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> thenable = &#123;</span><br><span class=\"line\">  <span class=\"attr\">then</span>: <span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"title class_\">Promise</span>.<span class=\"title function_\">resolve</span>(thenable); <span class=\"comment\">// 返回一个 Promise，且状态为 pending</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> thenable = &#123;</span><br><span class=\"line\">  <span class=\"attr\">then</span>: <span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">resolve</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"title class_\">Promise</span>.<span class=\"title function_\">resolve</span>(thenable); <span class=\"comment\">// 返回一个 Promise，且状态为 fulfilled</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> thenable = &#123;</span><br><span class=\"line\">  <span class=\"attr\">then</span>: <span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">reject</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"title class_\">Promise</span>.<span class=\"title function_\">resolve</span>(thenable); <span class=\"comment\">// 返回一个 Promise，且状态为 rejected</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> thenable = &#123;</span><br><span class=\"line\">  <span class=\"attr\">then</span>: <span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">resolve</span>(thenable);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"title class_\">Promise</span>.<span class=\"title function_\">resolve</span>(thenable); <span class=\"comment\">// 将会进入死循环</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Promise-reject\"><a href=\"#Promise-reject\" class=\"headerlink\" title=\"Promise.reject()\"></a>Promise.reject()</h3><p><code>Promise.reject()</code> 方法返回一个带有拒绝原因的 Promise 对象。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">resolve</span> = (<span class=\"params\">res</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">reject</span> = (<span class=\"params\">res</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"title class_\">Promise</span>.<span class=\"title function_\">reject</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;FAILED&#x27;</span>)).<span class=\"title function_\">then</span>(resolve, reject);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><h3 id=\"拒绝回调地狱，回调变-Promise\"><a href=\"#拒绝回调地狱，回调变-Promise\" class=\"headerlink\" title=\"拒绝回调地狱，回调变 Promise\"></a>拒绝回调地狱，回调变 Promise</h3><p>假设有一个需要传入回调的方法 <code>needCallback</code>：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">needCallback</span>(<span class=\"params\">callback</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> callback === <span class=\"string\">&#x27;function&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">callback</span>(&#123; <span class=\"attr\">code</span>: <span class=\"number\">0</span>, <span class=\"attr\">data</span>: &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;熊可&#x27;</span> &#125; &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>正常调用的时候我们会使用如下方式：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">needCallback</span>(<span class=\"function\">(<span class=\"params\">result</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// do something</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>假设我现在需要一个有序调用，即在某个回调完成时才执行下一个步骤，你可能会这么写：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">needCallback</span>(<span class=\"function\">(<span class=\"params\">result</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">needCallback</span>(<span class=\"function\">(<span class=\"params\">result</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">needCallback</span>(<span class=\"function\">(<span class=\"params\">result</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"title function_\">needCallback</span>(<span class=\"function\">(<span class=\"params\">result</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"title function_\">needCallback</span>(<span class=\"function\">(<span class=\"params\">result</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"comment\">// ...</span></span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>这就是传说中的回调地狱，你会发现，需要执行的步骤越多，回调嵌套的越深。</p>\n<p>那么有没有办法解决这个问题呢？答案是：有的。正确的使用 Promise 能够使我们避免回调地狱。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 通过返回一个 Promise 对象来避免嵌套回调</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">convertPromise</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> promise = <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">needCallback</span>(<span class=\"function\">(<span class=\"params\">result</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"title function_\">resolve</span>(result);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> promise;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 正确的用法</span></span><br><span class=\"line\"><span class=\"title function_\">convertPromise</span>()</span><br><span class=\"line\">  .<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">result</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">result</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">result</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误的用法</span></span><br><span class=\"line\"><span class=\"title function_\">convertPromise</span>().<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">result</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">convertPromise</span>().<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">result</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">convertPromise</span>().<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">result</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// ...</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><blockquote>\n<p><a href=\"https://github.com/domenic/promises-unwrapping\">promises-unwrapping</a></p>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise\">MDN - Promise</a></p>\n</blockquote>\n","cover_type":"img","excerpt":"","more":"<h2 id=\"Promise\"><a href=\"#Promise\" class=\"headerlink\" title=\"Promise\"></a>Promise</h2><p>Promise 对象是一个等待处理结果的占位符。它具有三个互斥状态：<code>fulfilled</code>, <code>rejected</code>, <code>pending</code> 。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">resolve</span> = (<span class=\"params\">res</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;resolve: &#x27;</span> + res);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">reject</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;reject: &#x27;</span> + res);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">fn</span> = (<span class=\"params\">flag</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (flag === <span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">      <span class=\"title function_\">resolve</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (flag === <span class=\"literal\">false</span>) &#123;</span><br><span class=\"line\">      <span class=\"title function_\">reject</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;).<span class=\"title function_\">then</span>(resolve, reject);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"title function_\">fn</span>(<span class=\"literal\">true</span>); <span class=\"comment\">// fulfilled</span></span><br><span class=\"line\"><span class=\"title function_\">fn</span>(<span class=\"literal\">false</span>); <span class=\"comment\">// rejected</span></span><br><span class=\"line\"><span class=\"title function_\">fn</span>(); <span class=\"comment\">// pending</span></span><br></pre></td></tr></table></figure>\n\n<p>如果一个 Promise 对象 <code>p</code> 被 fulfilled，那么 <code>p.then(resolve, reject)</code> 会立即执行 <code>resolve</code> 回调。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">resolve</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;resolve&#x27;</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">reject</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;reject&#x27;</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"title class_\">Promise</span>.<span class=\"title function_\">resolve</span>().<span class=\"title function_\">then</span>(resolve, reject);</span><br></pre></td></tr></table></figure>\n\n<p>如果一个 Promise 对象 <code>p</code> 被 rejected，那么 <code>p.then(resolve, reject)</code> 会立即执行 <code>reject</code> 回调。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">resolve</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;resolve&#x27;</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">reject</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;reject&#x27;</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"title class_\">Promise</span>.<span class=\"title function_\">reject</span>().<span class=\"title function_\">then</span>(resolve, reject);</span><br></pre></td></tr></table></figure>\n\n<p>如果一个 Promise 对象既没有被 fulfilled，也没有被 rejected，那么它就是处于 pending 状态的。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> promise = <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Promise-resolve\"><a href=\"#Promise-resolve\" class=\"headerlink\" title=\"Promise.resolve()\"></a>Promise.resolve()</h3><p><code>Promise.resolve(value)</code> 方法返回一个以给定值解析后的 <code>Promise</code> 对象。如果这个值是一个 promise，那么将返回这个 promise；如果这个值是 thenable （即带有 then 方法），返回的 Promise 会跟随这个 thenable 的对象，采用它的最终状态。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">resolve</span> = (<span class=\"params\">res</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">reject</span> = (<span class=\"params\">res</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"title class_\">Promise</span>.<span class=\"title function_\">resolve</span>(&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;熊可&#x27;</span> &#125;).<span class=\"title function_\">then</span>(resolve, reject);</span><br></pre></td></tr></table></figure>\n\n<p>传入 <code>promise</code>:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> promise = <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;&#125;);</span><br><span class=\"line\"><span class=\"title class_\">Promise</span>.<span class=\"title function_\">resolve</span>(promise) === promise; <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n\n<p>传入 thenable:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> thenable = &#123;</span><br><span class=\"line\">  <span class=\"attr\">then</span>: <span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"title class_\">Promise</span>.<span class=\"title function_\">resolve</span>(thenable); <span class=\"comment\">// 返回一个 Promise，且状态为 pending</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> thenable = &#123;</span><br><span class=\"line\">  <span class=\"attr\">then</span>: <span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">resolve</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"title class_\">Promise</span>.<span class=\"title function_\">resolve</span>(thenable); <span class=\"comment\">// 返回一个 Promise，且状态为 fulfilled</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> thenable = &#123;</span><br><span class=\"line\">  <span class=\"attr\">then</span>: <span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">reject</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"title class_\">Promise</span>.<span class=\"title function_\">resolve</span>(thenable); <span class=\"comment\">// 返回一个 Promise，且状态为 rejected</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> thenable = &#123;</span><br><span class=\"line\">  <span class=\"attr\">then</span>: <span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">resolve</span>(thenable);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"title class_\">Promise</span>.<span class=\"title function_\">resolve</span>(thenable); <span class=\"comment\">// 将会进入死循环</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Promise-reject\"><a href=\"#Promise-reject\" class=\"headerlink\" title=\"Promise.reject()\"></a>Promise.reject()</h3><p><code>Promise.reject()</code> 方法返回一个带有拒绝原因的 Promise 对象。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">resolve</span> = (<span class=\"params\">res</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">reject</span> = (<span class=\"params\">res</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"title class_\">Promise</span>.<span class=\"title function_\">reject</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;FAILED&#x27;</span>)).<span class=\"title function_\">then</span>(resolve, reject);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><h3 id=\"拒绝回调地狱，回调变-Promise\"><a href=\"#拒绝回调地狱，回调变-Promise\" class=\"headerlink\" title=\"拒绝回调地狱，回调变 Promise\"></a>拒绝回调地狱，回调变 Promise</h3><p>假设有一个需要传入回调的方法 <code>needCallback</code>：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">needCallback</span>(<span class=\"params\">callback</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> callback === <span class=\"string\">&#x27;function&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">callback</span>(&#123; <span class=\"attr\">code</span>: <span class=\"number\">0</span>, <span class=\"attr\">data</span>: &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;熊可&#x27;</span> &#125; &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>正常调用的时候我们会使用如下方式：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">needCallback</span>(<span class=\"function\">(<span class=\"params\">result</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// do something</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>假设我现在需要一个有序调用，即在某个回调完成时才执行下一个步骤，你可能会这么写：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">needCallback</span>(<span class=\"function\">(<span class=\"params\">result</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">needCallback</span>(<span class=\"function\">(<span class=\"params\">result</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">needCallback</span>(<span class=\"function\">(<span class=\"params\">result</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"title function_\">needCallback</span>(<span class=\"function\">(<span class=\"params\">result</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"title function_\">needCallback</span>(<span class=\"function\">(<span class=\"params\">result</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"comment\">// ...</span></span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>这就是传说中的回调地狱，你会发现，需要执行的步骤越多，回调嵌套的越深。</p>\n<p>那么有没有办法解决这个问题呢？答案是：有的。正确的使用 Promise 能够使我们避免回调地狱。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 通过返回一个 Promise 对象来避免嵌套回调</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">convertPromise</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> promise = <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">needCallback</span>(<span class=\"function\">(<span class=\"params\">result</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"title function_\">resolve</span>(result);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> promise;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 正确的用法</span></span><br><span class=\"line\"><span class=\"title function_\">convertPromise</span>()</span><br><span class=\"line\">  .<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">result</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">result</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">result</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误的用法</span></span><br><span class=\"line\"><span class=\"title function_\">convertPromise</span>().<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">result</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">convertPromise</span>().<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">result</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">convertPromise</span>().<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">result</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// ...</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><blockquote>\n<p><a href=\"https://github.com/domenic/promises-unwrapping\">promises-unwrapping</a></p>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise\">MDN - Promise</a></p>\n</blockquote>\n"},{"title":"GitHub Actions 自动部署 Hexo 博客","abbrlink":"3cd07016","date":"2024-04-19T09:07:35.000Z","cover":"https://blog-cdn.everhour.com/blog/wp-content/uploads/2023/02/h2jfrvzrbyh1yff2n3wfu2hkqqps6x_uvqo.jpg","_content":"\n[在 GitHub Pages 上部署 Hexo](https://hexo.io/zh-cn/docs/github-pages)\n\n```yml\nname: Pages\n\non:\n  push:\n    branches:\n      - main  # default branch\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n        with:\n          token: ${{ secrets.GITHUB_TOKEN }}\n          # If your repository depends on submodule, please see: https://github.com/actions/checkout\n          submodules: recursive\n      - name: Use Node.js 20\n        uses: actions/setup-node@v4\n        with:\n          # Examples: 20, 18.19, >=16.20.2, lts/Iron, lts/Hydrogen, *, latest, current, node\n          # Ref: https://github.com/actions/setup-node#supported-version-syntax\n          node-version: '20'\n      - name: Cache NPM dependencies\n        uses: actions/cache@v4\n        with:\n          path: node_modules\n          key: ${{ runner.OS }}-npm-cache\n          restore-keys: |\n            ${{ runner.OS }}-npm-cache\n      - name: Install Dependencies\n        run: npm install\n      - name: Build\n        run: npm run build\n      - name: Upload Pages artifact\n        uses: actions/upload-pages-artifact@v3\n        with:\n          path: ./public\n  deploy:\n    needs: build\n    permissions:\n      pages: write\n      id-token: write\n    environment:\n      name: github-pages\n      url: ${{ steps.deployment.outputs.page_url }}\n    runs-on: ubuntu-latest\n    steps:\n      - name: Deploy to GitHub Pages\n        id: deployment\n        uses: actions/deploy-pages@v4\n```\n","source":"_posts/Github-Actions-自动部署-Hexo-博客.md","raw":"---\ntitle: GitHub Actions 自动部署 Hexo 博客\ncategories:\n  - GitHub\ntags:\n  - GitHub Actions\nabbrlink: 3cd07016\ndate: 2024-04-19 17:07:35\ncover: https://blog-cdn.everhour.com/blog/wp-content/uploads/2023/02/h2jfrvzrbyh1yff2n3wfu2hkqqps6x_uvqo.jpg\n---\n\n[在 GitHub Pages 上部署 Hexo](https://hexo.io/zh-cn/docs/github-pages)\n\n```yml\nname: Pages\n\non:\n  push:\n    branches:\n      - main  # default branch\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n        with:\n          token: ${{ secrets.GITHUB_TOKEN }}\n          # If your repository depends on submodule, please see: https://github.com/actions/checkout\n          submodules: recursive\n      - name: Use Node.js 20\n        uses: actions/setup-node@v4\n        with:\n          # Examples: 20, 18.19, >=16.20.2, lts/Iron, lts/Hydrogen, *, latest, current, node\n          # Ref: https://github.com/actions/setup-node#supported-version-syntax\n          node-version: '20'\n      - name: Cache NPM dependencies\n        uses: actions/cache@v4\n        with:\n          path: node_modules\n          key: ${{ runner.OS }}-npm-cache\n          restore-keys: |\n            ${{ runner.OS }}-npm-cache\n      - name: Install Dependencies\n        run: npm install\n      - name: Build\n        run: npm run build\n      - name: Upload Pages artifact\n        uses: actions/upload-pages-artifact@v3\n        with:\n          path: ./public\n  deploy:\n    needs: build\n    permissions:\n      pages: write\n      id-token: write\n    environment:\n      name: github-pages\n      url: ${{ steps.deployment.outputs.page_url }}\n    runs-on: ubuntu-latest\n    steps:\n      - name: Deploy to GitHub Pages\n        id: deployment\n        uses: actions/deploy-pages@v4\n```\n","slug":"Github-Actions-自动部署-Hexo-博客","published":1,"updated":"2024-05-16T03:39:59.604Z","comments":1,"layout":"post","photos":[],"_id":"clw8r01jw0007raen0de85iix","content":"<p><a href=\"https://hexo.io/zh-cn/docs/github-pages\">在 GitHub Pages 上部署 Hexo</a></p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Pages</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">main</span>  <span class=\"comment\"># default branch</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">build:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v4</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">token:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">secrets.GITHUB_TOKEN</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">          <span class=\"comment\"># If your repository depends on submodule, please see: https://github.com/actions/checkout</span></span><br><span class=\"line\">          <span class=\"attr\">submodules:</span> <span class=\"string\">recursive</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Use</span> <span class=\"string\">Node.js</span> <span class=\"number\">20</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v4</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"comment\"># Examples: 20, 18.19, &gt;=16.20.2, lts/Iron, lts/Hydrogen, *, latest, current, node</span></span><br><span class=\"line\">          <span class=\"comment\"># Ref: https://github.com/actions/setup-node#supported-version-syntax</span></span><br><span class=\"line\">          <span class=\"attr\">node-version:</span> <span class=\"string\">&#x27;20&#x27;</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Cache</span> <span class=\"string\">NPM</span> <span class=\"string\">dependencies</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/cache@v4</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">path:</span> <span class=\"string\">node_modules</span></span><br><span class=\"line\">          <span class=\"attr\">key:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">runner.OS</span> <span class=\"string\">&#125;&#125;-npm-cache</span></span><br><span class=\"line\">          <span class=\"attr\">restore-keys:</span> <span class=\"string\">|</span></span><br><span class=\"line\"><span class=\"string\">            $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span></span><br><span class=\"line\"><span class=\"string\"></span>      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">Dependencies</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">npm</span> <span class=\"string\">install</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Build</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">npm</span> <span class=\"string\">run</span> <span class=\"string\">build</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Upload</span> <span class=\"string\">Pages</span> <span class=\"string\">artifact</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/upload-pages-artifact@v3</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">path:</span> <span class=\"string\">./public</span></span><br><span class=\"line\">  <span class=\"attr\">deploy:</span></span><br><span class=\"line\">    <span class=\"attr\">needs:</span> <span class=\"string\">build</span></span><br><span class=\"line\">    <span class=\"attr\">permissions:</span></span><br><span class=\"line\">      <span class=\"attr\">pages:</span> <span class=\"string\">write</span></span><br><span class=\"line\">      <span class=\"attr\">id-token:</span> <span class=\"string\">write</span></span><br><span class=\"line\">    <span class=\"attr\">environment:</span></span><br><span class=\"line\">      <span class=\"attr\">name:</span> <span class=\"string\">github-pages</span></span><br><span class=\"line\">      <span class=\"attr\">url:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">steps.deployment.outputs.page_url</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Deploy</span> <span class=\"string\">to</span> <span class=\"string\">GitHub</span> <span class=\"string\">Pages</span></span><br><span class=\"line\">        <span class=\"attr\">id:</span> <span class=\"string\">deployment</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/deploy-pages@v4</span></span><br></pre></td></tr></table></figure>\n","cover_type":"img","excerpt":"","more":"<p><a href=\"https://hexo.io/zh-cn/docs/github-pages\">在 GitHub Pages 上部署 Hexo</a></p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Pages</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">main</span>  <span class=\"comment\"># default branch</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">build:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v4</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">token:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">secrets.GITHUB_TOKEN</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">          <span class=\"comment\"># If your repository depends on submodule, please see: https://github.com/actions/checkout</span></span><br><span class=\"line\">          <span class=\"attr\">submodules:</span> <span class=\"string\">recursive</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Use</span> <span class=\"string\">Node.js</span> <span class=\"number\">20</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v4</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"comment\"># Examples: 20, 18.19, &gt;=16.20.2, lts/Iron, lts/Hydrogen, *, latest, current, node</span></span><br><span class=\"line\">          <span class=\"comment\"># Ref: https://github.com/actions/setup-node#supported-version-syntax</span></span><br><span class=\"line\">          <span class=\"attr\">node-version:</span> <span class=\"string\">&#x27;20&#x27;</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Cache</span> <span class=\"string\">NPM</span> <span class=\"string\">dependencies</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/cache@v4</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">path:</span> <span class=\"string\">node_modules</span></span><br><span class=\"line\">          <span class=\"attr\">key:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">runner.OS</span> <span class=\"string\">&#125;&#125;-npm-cache</span></span><br><span class=\"line\">          <span class=\"attr\">restore-keys:</span> <span class=\"string\">|</span></span><br><span class=\"line\"><span class=\"string\">            $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span></span><br><span class=\"line\"><span class=\"string\"></span>      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">Dependencies</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">npm</span> <span class=\"string\">install</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Build</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">npm</span> <span class=\"string\">run</span> <span class=\"string\">build</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Upload</span> <span class=\"string\">Pages</span> <span class=\"string\">artifact</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/upload-pages-artifact@v3</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">path:</span> <span class=\"string\">./public</span></span><br><span class=\"line\">  <span class=\"attr\">deploy:</span></span><br><span class=\"line\">    <span class=\"attr\">needs:</span> <span class=\"string\">build</span></span><br><span class=\"line\">    <span class=\"attr\">permissions:</span></span><br><span class=\"line\">      <span class=\"attr\">pages:</span> <span class=\"string\">write</span></span><br><span class=\"line\">      <span class=\"attr\">id-token:</span> <span class=\"string\">write</span></span><br><span class=\"line\">    <span class=\"attr\">environment:</span></span><br><span class=\"line\">      <span class=\"attr\">name:</span> <span class=\"string\">github-pages</span></span><br><span class=\"line\">      <span class=\"attr\">url:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">steps.deployment.outputs.page_url</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Deploy</span> <span class=\"string\">to</span> <span class=\"string\">GitHub</span> <span class=\"string\">Pages</span></span><br><span class=\"line\">        <span class=\"attr\">id:</span> <span class=\"string\">deployment</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/deploy-pages@v4</span></span><br></pre></td></tr></table></figure>\n"},{"title":"GitHub Pages ｜ 创建自己的网站","abbrlink":"682c0781","date":"2024-04-12T03:46:47.000Z","cover":"https://i0.wp.com/www.diogonunes.com/blog/wp-content/uploads/2016/12/maxresdefault-1.jpg?fit=1200%2C673&ssl=1","_content":"\n> [GitHub Pages](https://pages.github.com/)\n\n`GitHub Pages` 可以通过 `GitHub` 创建个人/组织网站，也可以为 `GitHub` 项目单独创建网站。\n\n## 项目网站\n\n这里以创建个人简历项目为例。\n\n1. Github 新建项目 `resume`.\n2. 为项目添加 `index.html` 文件\n3. [配置 GitHub Pages 站点的发布源](https://docs.github.com/zh/pages/getting-started-with-github-pages/configuring-a-publishing-source-for-your-github-pages-site)\n4. 访问 [https://ultravires.github.io/resume/](https://ultravires.github.io/resume/)","source":"_posts/Github-Pages-｜-创建自己的网站.md","raw":"---\ntitle: GitHub Pages ｜ 创建自己的网站\ncategories:\n  - GitHub\ntags:\n  - GitHub Pages\nabbrlink: 682c0781\ndate: 2024-04-12 11:46:47\ncover: https://i0.wp.com/www.diogonunes.com/blog/wp-content/uploads/2016/12/maxresdefault-1.jpg?fit=1200%2C673&ssl=1\n---\n\n> [GitHub Pages](https://pages.github.com/)\n\n`GitHub Pages` 可以通过 `GitHub` 创建个人/组织网站，也可以为 `GitHub` 项目单独创建网站。\n\n## 项目网站\n\n这里以创建个人简历项目为例。\n\n1. Github 新建项目 `resume`.\n2. 为项目添加 `index.html` 文件\n3. [配置 GitHub Pages 站点的发布源](https://docs.github.com/zh/pages/getting-started-with-github-pages/configuring-a-publishing-source-for-your-github-pages-site)\n4. 访问 [https://ultravires.github.io/resume/](https://ultravires.github.io/resume/)","slug":"Github-Pages-｜-创建自己的网站","published":1,"updated":"2024-05-16T03:39:59.604Z","comments":1,"layout":"post","photos":[],"_id":"clw8r01jw0009raend619fjov","content":"<blockquote>\n<p><a href=\"https://pages.github.com/\">GitHub Pages</a></p>\n</blockquote>\n<p><code>GitHub Pages</code> 可以通过 <code>GitHub</code> 创建个人&#x2F;组织网站，也可以为 <code>GitHub</code> 项目单独创建网站。</p>\n<h2 id=\"项目网站\"><a href=\"#项目网站\" class=\"headerlink\" title=\"项目网站\"></a>项目网站</h2><p>这里以创建个人简历项目为例。</p>\n<ol>\n<li>Github 新建项目 <code>resume</code>.</li>\n<li>为项目添加 <code>index.html</code> 文件</li>\n<li><a href=\"https://docs.github.com/zh/pages/getting-started-with-github-pages/configuring-a-publishing-source-for-your-github-pages-site\">配置 GitHub Pages 站点的发布源</a></li>\n<li>访问 <a href=\"https://ultravires.github.io/resume/\">https://ultravires.github.io/resume/</a></li>\n</ol>\n","cover_type":"img","excerpt":"","more":"<blockquote>\n<p><a href=\"https://pages.github.com/\">GitHub Pages</a></p>\n</blockquote>\n<p><code>GitHub Pages</code> 可以通过 <code>GitHub</code> 创建个人&#x2F;组织网站，也可以为 <code>GitHub</code> 项目单独创建网站。</p>\n<h2 id=\"项目网站\"><a href=\"#项目网站\" class=\"headerlink\" title=\"项目网站\"></a>项目网站</h2><p>这里以创建个人简历项目为例。</p>\n<ol>\n<li>Github 新建项目 <code>resume</code>.</li>\n<li>为项目添加 <code>index.html</code> 文件</li>\n<li><a href=\"https://docs.github.com/zh/pages/getting-started-with-github-pages/configuring-a-publishing-source-for-your-github-pages-site\">配置 GitHub Pages 站点的发布源</a></li>\n<li>访问 <a href=\"https://ultravires.github.io/resume/\">https://ultravires.github.io/resume/</a></li>\n</ol>\n"},{"title":"QtApplication 国产化适配","abbrlink":"5cc5ed96","cover":"https://th.bing.com/th/id/R.0e8c7cf27902e84bda26151456a0367e?rik=XhNGeHds%2bumtcg&riu=http%3a%2f%2fwww.infedium.com%2fpublic%2fuploads%2fimages%2f20210726%2f27f7102a5a2317a97b38913f0179e1b7.jpg&ehk=R9qGOg7cqQmzfgZGu%2buwCi3DYNUAhULbzAYQoBX33vI%3d&risl=&pid=ImgRaw&r=0","date":"2024-05-16T04:34:10.000Z","_content":"\n## 安装 QT Creator\n\n官方下载地址：[https://download.qt.io/archive/qt/](https://download.qt.io/archive/qt/)\n\n## 代码兼容\n\n添加平台兼容代码：\n\n```c++\n#ifdef Q_OS_LINUX\n#endif\n```\n\n## 编译源码\n\n对修改后的兼容性代码进行编译。\n\n## 程序打包\n\n将编译好的文件复制到打包目录进行打包。\n\n```bash\ndekg -b ./path\n```\n\n## 测试运行\n\n测试程序是否正常启动。\n\n## 功能检测\n\n对即时通讯客户端的功能进行检测。\n\n## 输入法修复\n\n为继承 QWidget 类的类添加：\n\n```c++\nthis->setAttribute(Qt::WA_InputMethodEnabled, true);\nthis->setAttribute(Qt::WA_KeyCompression, true);\nthis->setFocusPolicy(Qt::WheelFocus);\n```\n\n安装 `extra-cmake-modules`, `libxkbcommon-dev`。\n\n克隆 `fcitx-qt5` 到本地:\n\n```bash\ngit clone https://github.com/fcitx/fcitx-qt5.git\n```\n\nQt Creator 打开 fcitx-qt5 项目，Build 编译。\n\n将编译生成的 `libfcitxplatforminputcontextplugin.so` 文件复制相应的目录下即可。\n","source":"_posts/QtApplication 国产化适配.md","raw":"---\ntitle: QtApplication 国产化适配\ncategories:\n  - QT\ntags:\n  - 国产化适配\nabbrlink: 5cc5ed96\ncover: https://th.bing.com/th/id/R.0e8c7cf27902e84bda26151456a0367e?rik=XhNGeHds%2bumtcg&riu=http%3a%2f%2fwww.infedium.com%2fpublic%2fuploads%2fimages%2f20210726%2f27f7102a5a2317a97b38913f0179e1b7.jpg&ehk=R9qGOg7cqQmzfgZGu%2buwCi3DYNUAhULbzAYQoBX33vI%3d&risl=&pid=ImgRaw&r=0\ndate: 2024-05-16 12:34:10\n---\n\n## 安装 QT Creator\n\n官方下载地址：[https://download.qt.io/archive/qt/](https://download.qt.io/archive/qt/)\n\n## 代码兼容\n\n添加平台兼容代码：\n\n```c++\n#ifdef Q_OS_LINUX\n#endif\n```\n\n## 编译源码\n\n对修改后的兼容性代码进行编译。\n\n## 程序打包\n\n将编译好的文件复制到打包目录进行打包。\n\n```bash\ndekg -b ./path\n```\n\n## 测试运行\n\n测试程序是否正常启动。\n\n## 功能检测\n\n对即时通讯客户端的功能进行检测。\n\n## 输入法修复\n\n为继承 QWidget 类的类添加：\n\n```c++\nthis->setAttribute(Qt::WA_InputMethodEnabled, true);\nthis->setAttribute(Qt::WA_KeyCompression, true);\nthis->setFocusPolicy(Qt::WheelFocus);\n```\n\n安装 `extra-cmake-modules`, `libxkbcommon-dev`。\n\n克隆 `fcitx-qt5` 到本地:\n\n```bash\ngit clone https://github.com/fcitx/fcitx-qt5.git\n```\n\nQt Creator 打开 fcitx-qt5 项目，Build 编译。\n\n将编译生成的 `libfcitxplatforminputcontextplugin.so` 文件复制相应的目录下即可。\n","slug":"QtApplication 国产化适配","published":1,"updated":"2024-05-16T04:34:12.657Z","_id":"clw8r01jx000braen3xp7fxct","comments":1,"layout":"post","photos":[],"content":"<h2 id=\"安装-QT-Creator\"><a href=\"#安装-QT-Creator\" class=\"headerlink\" title=\"安装 QT Creator\"></a>安装 QT Creator</h2><p>官方下载地址：<a href=\"https://download.qt.io/archive/qt/\">https://download.qt.io/archive/qt/</a></p>\n<h2 id=\"代码兼容\"><a href=\"#代码兼容\" class=\"headerlink\" title=\"代码兼容\"></a>代码兼容</h2><p>添加平台兼容代码：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifdef</span> Q_OS_LINUX</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"编译源码\"><a href=\"#编译源码\" class=\"headerlink\" title=\"编译源码\"></a>编译源码</h2><p>对修改后的兼容性代码进行编译。</p>\n<h2 id=\"程序打包\"><a href=\"#程序打包\" class=\"headerlink\" title=\"程序打包\"></a>程序打包</h2><p>将编译好的文件复制到打包目录进行打包。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dekg -b ./path</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"测试运行\"><a href=\"#测试运行\" class=\"headerlink\" title=\"测试运行\"></a>测试运行</h2><p>测试程序是否正常启动。</p>\n<h2 id=\"功能检测\"><a href=\"#功能检测\" class=\"headerlink\" title=\"功能检测\"></a>功能检测</h2><p>对即时通讯客户端的功能进行检测。</p>\n<h2 id=\"输入法修复\"><a href=\"#输入法修复\" class=\"headerlink\" title=\"输入法修复\"></a>输入法修复</h2><p>为继承 QWidget 类的类添加：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>-&gt;<span class=\"built_in\">setAttribute</span>(Qt::WA_InputMethodEnabled, <span class=\"literal\">true</span>);</span><br><span class=\"line\"><span class=\"keyword\">this</span>-&gt;<span class=\"built_in\">setAttribute</span>(Qt::WA_KeyCompression, <span class=\"literal\">true</span>);</span><br><span class=\"line\"><span class=\"keyword\">this</span>-&gt;<span class=\"built_in\">setFocusPolicy</span>(Qt::WheelFocus);</span><br></pre></td></tr></table></figure>\n\n<p>安装 <code>extra-cmake-modules</code>, <code>libxkbcommon-dev</code>。</p>\n<p>克隆 <code>fcitx-qt5</code> 到本地:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/fcitx/fcitx-qt5.git</span><br></pre></td></tr></table></figure>\n\n<p>Qt Creator 打开 fcitx-qt5 项目，Build 编译。</p>\n<p>将编译生成的 <code>libfcitxplatforminputcontextplugin.so</code> 文件复制相应的目录下即可。</p>\n","cover_type":"img","excerpt":"","more":"<h2 id=\"安装-QT-Creator\"><a href=\"#安装-QT-Creator\" class=\"headerlink\" title=\"安装 QT Creator\"></a>安装 QT Creator</h2><p>官方下载地址：<a href=\"https://download.qt.io/archive/qt/\">https://download.qt.io/archive/qt/</a></p>\n<h2 id=\"代码兼容\"><a href=\"#代码兼容\" class=\"headerlink\" title=\"代码兼容\"></a>代码兼容</h2><p>添加平台兼容代码：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifdef</span> Q_OS_LINUX</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"编译源码\"><a href=\"#编译源码\" class=\"headerlink\" title=\"编译源码\"></a>编译源码</h2><p>对修改后的兼容性代码进行编译。</p>\n<h2 id=\"程序打包\"><a href=\"#程序打包\" class=\"headerlink\" title=\"程序打包\"></a>程序打包</h2><p>将编译好的文件复制到打包目录进行打包。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dekg -b ./path</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"测试运行\"><a href=\"#测试运行\" class=\"headerlink\" title=\"测试运行\"></a>测试运行</h2><p>测试程序是否正常启动。</p>\n<h2 id=\"功能检测\"><a href=\"#功能检测\" class=\"headerlink\" title=\"功能检测\"></a>功能检测</h2><p>对即时通讯客户端的功能进行检测。</p>\n<h2 id=\"输入法修复\"><a href=\"#输入法修复\" class=\"headerlink\" title=\"输入法修复\"></a>输入法修复</h2><p>为继承 QWidget 类的类添加：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>-&gt;<span class=\"built_in\">setAttribute</span>(Qt::WA_InputMethodEnabled, <span class=\"literal\">true</span>);</span><br><span class=\"line\"><span class=\"keyword\">this</span>-&gt;<span class=\"built_in\">setAttribute</span>(Qt::WA_KeyCompression, <span class=\"literal\">true</span>);</span><br><span class=\"line\"><span class=\"keyword\">this</span>-&gt;<span class=\"built_in\">setFocusPolicy</span>(Qt::WheelFocus);</span><br></pre></td></tr></table></figure>\n\n<p>安装 <code>extra-cmake-modules</code>, <code>libxkbcommon-dev</code>。</p>\n<p>克隆 <code>fcitx-qt5</code> 到本地:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/fcitx/fcitx-qt5.git</span><br></pre></td></tr></table></figure>\n\n<p>Qt Creator 打开 fcitx-qt5 项目，Build 编译。</p>\n<p>将编译生成的 <code>libfcitxplatforminputcontextplugin.so</code> 文件复制相应的目录下即可。</p>\n"},{"title":"使用 Clipboard API 复制图像","abbrlink":"66dbca7e","date":"2024-04-30T08:56:04.000Z","_content":"\n最近在美化博客的右键菜单，其中有复制图像到剪贴板到需求。需求实现逻辑比较简单：\n\n1. 判断触发右键菜单的目标元素是否为图像\n\n```js\nevent.target instanceof HTMLImageElement\n```\n\n2. 通过 fetch API 请求图片资源，获取图像的二进制数据（blob: Binary Large Object）\n\n```js\nconst blob = await fetch(event.target.src).then((blob) => {\n  return res.blob();\n}).catch((err) => {\n  throw new Error(err);\n});\n```\n\n{% note warning %}\n无法通过 JavaScript 的方式获取有防盗链的图像。\n{% endnote %}\n\n3. 利用 Clipboard API 将二进制数据写入剪贴板\n\n```js\nconst clipboardItem = new ClipboardItem({\n  [`${blob.type}`]: blob\n});\nwindow.navigator.clipboard.write([clipboardItem]);\n```\n\n{% note warning %}\nClipboard API 目前仅支持写入 'image/png' 格式的图像。\n{% endnote %}\n\n在这里需要注意的是，Clipboard API 目前仅支持写入 'image/png' 格式的图像，如果你当前复制的图像为 png 格式，可能会符合预期。但是如果你复制的是 jpeg 格式的图像，则会得到下面的报错：\n\n> DOMException: Failed to execute 'write' on 'Clipboard': Type image/jpeg not supported on write.\n\n这个时候我们可以借助 `canvas` 对图像的数据格式进行转换。\n\n```js\ntry {\n  const clipboardItem = new ClipboardItem({\n    [`${blob.type}`]: blob\n  });\n  // try/catch 无法直接捕获 Promise 异常，这里需要使用 async/await。\n  await window.navigator.clipboard.write([clipboardItem]);\n} catch(err) {\n  // TODO 图像数据格式转换并写入剪贴板\n}\n```\n\n{% note info %}\ntry/catch 无法捕获异步方法抛出的异常。因为 try/catch 块不会等待异步方法执行完毕，try/catch 块执行完之前，异步方法还没有抛出错误。\n{% endnote %}\n","source":"_posts/使用-Clipboard-API-复制图像.md","raw":"---\ntitle: 使用 Clipboard API 复制图像\ncategories:\n  - 前端\ntags:\n  - Clipboard API\nabbrlink: 66dbca7e\ndate: 2024-04-30 16:56:04\n---\n\n最近在美化博客的右键菜单，其中有复制图像到剪贴板到需求。需求实现逻辑比较简单：\n\n1. 判断触发右键菜单的目标元素是否为图像\n\n```js\nevent.target instanceof HTMLImageElement\n```\n\n2. 通过 fetch API 请求图片资源，获取图像的二进制数据（blob: Binary Large Object）\n\n```js\nconst blob = await fetch(event.target.src).then((blob) => {\n  return res.blob();\n}).catch((err) => {\n  throw new Error(err);\n});\n```\n\n{% note warning %}\n无法通过 JavaScript 的方式获取有防盗链的图像。\n{% endnote %}\n\n3. 利用 Clipboard API 将二进制数据写入剪贴板\n\n```js\nconst clipboardItem = new ClipboardItem({\n  [`${blob.type}`]: blob\n});\nwindow.navigator.clipboard.write([clipboardItem]);\n```\n\n{% note warning %}\nClipboard API 目前仅支持写入 'image/png' 格式的图像。\n{% endnote %}\n\n在这里需要注意的是，Clipboard API 目前仅支持写入 'image/png' 格式的图像，如果你当前复制的图像为 png 格式，可能会符合预期。但是如果你复制的是 jpeg 格式的图像，则会得到下面的报错：\n\n> DOMException: Failed to execute 'write' on 'Clipboard': Type image/jpeg not supported on write.\n\n这个时候我们可以借助 `canvas` 对图像的数据格式进行转换。\n\n```js\ntry {\n  const clipboardItem = new ClipboardItem({\n    [`${blob.type}`]: blob\n  });\n  // try/catch 无法直接捕获 Promise 异常，这里需要使用 async/await。\n  await window.navigator.clipboard.write([clipboardItem]);\n} catch(err) {\n  // TODO 图像数据格式转换并写入剪贴板\n}\n```\n\n{% note info %}\ntry/catch 无法捕获异步方法抛出的异常。因为 try/catch 块不会等待异步方法执行完毕，try/catch 块执行完之前，异步方法还没有抛出错误。\n{% endnote %}\n","slug":"使用-Clipboard-API-复制图像","published":1,"updated":"2024-05-16T03:39:59.605Z","comments":1,"layout":"post","photos":[],"_id":"clw8r01jy000fraen1jxqgwu0","content":"<p>最近在美化博客的右键菜单，其中有复制图像到剪贴板到需求。需求实现逻辑比较简单：</p>\n<ol>\n<li>判断触发右键菜单的目标元素是否为图像</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">event.<span class=\"property\">target</span> <span class=\"keyword\">instanceof</span> <span class=\"title class_\">HTMLImageElement</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>通过 fetch API 请求图片资源，获取图像的二进制数据（blob: Binary Large Object）</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> blob = <span class=\"keyword\">await</span> <span class=\"title function_\">fetch</span>(event.<span class=\"property\">target</span>.<span class=\"property\">src</span>).<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">blob</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> res.<span class=\"title function_\">blob</span>();</span><br><span class=\"line\">&#125;).<span class=\"title function_\">catch</span>(<span class=\"function\">(<span class=\"params\">err</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(err);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<div class=\"note warning flat\"><p>无法通过 JavaScript 的方式获取有防盗链的图像。</p>\n</div>\n\n<ol start=\"3\">\n<li>利用 Clipboard API 将二进制数据写入剪贴板</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> clipboardItem = <span class=\"keyword\">new</span> <span class=\"title class_\">ClipboardItem</span>(&#123;</span><br><span class=\"line\">  [<span class=\"string\">`<span class=\"subst\">$&#123;blob.type&#125;</span>`</span>]: blob</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">navigator</span>.<span class=\"property\">clipboard</span>.<span class=\"title function_\">write</span>([clipboardItem]);</span><br></pre></td></tr></table></figure>\n\n<div class=\"note warning flat\"><p>Clipboard API 目前仅支持写入 ‘image&#x2F;png’ 格式的图像。</p>\n</div>\n\n<p>在这里需要注意的是，Clipboard API 目前仅支持写入 ‘image&#x2F;png’ 格式的图像，如果你当前复制的图像为 png 格式，可能会符合预期。但是如果你复制的是 jpeg 格式的图像，则会得到下面的报错：</p>\n<blockquote>\n<p>DOMException: Failed to execute ‘write’ on ‘Clipboard’: Type image&#x2F;jpeg not supported on write.</p>\n</blockquote>\n<p>这个时候我们可以借助 <code>canvas</code> 对图像的数据格式进行转换。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> clipboardItem = <span class=\"keyword\">new</span> <span class=\"title class_\">ClipboardItem</span>(&#123;</span><br><span class=\"line\">    [<span class=\"string\">`<span class=\"subst\">$&#123;blob.type&#125;</span>`</span>]: blob</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"comment\">// try/catch 无法直接捕获 Promise 异常，这里需要使用 async/await。</span></span><br><span class=\"line\">  <span class=\"keyword\">await</span> <span class=\"variable language_\">window</span>.<span class=\"property\">navigator</span>.<span class=\"property\">clipboard</span>.<span class=\"title function_\">write</span>([clipboardItem]);</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span>(err) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// TODO 图像数据格式转换并写入剪贴板</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<div class=\"note info flat\"><p>try&#x2F;catch 无法捕获异步方法抛出的异常。因为 try&#x2F;catch 块不会等待异步方法执行完毕，try&#x2F;catch 块执行完之前，异步方法还没有抛出错误。</p>\n</div>\n","cover":"https://source.unsplash.com/random/1126x260","cover_type":"img","excerpt":"","more":"<p>最近在美化博客的右键菜单，其中有复制图像到剪贴板到需求。需求实现逻辑比较简单：</p>\n<ol>\n<li>判断触发右键菜单的目标元素是否为图像</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">event.<span class=\"property\">target</span> <span class=\"keyword\">instanceof</span> <span class=\"title class_\">HTMLImageElement</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>通过 fetch API 请求图片资源，获取图像的二进制数据（blob: Binary Large Object）</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> blob = <span class=\"keyword\">await</span> <span class=\"title function_\">fetch</span>(event.<span class=\"property\">target</span>.<span class=\"property\">src</span>).<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">blob</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> res.<span class=\"title function_\">blob</span>();</span><br><span class=\"line\">&#125;).<span class=\"title function_\">catch</span>(<span class=\"function\">(<span class=\"params\">err</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(err);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<div class=\"note warning flat\"><p>无法通过 JavaScript 的方式获取有防盗链的图像。</p>\n</div>\n\n<ol start=\"3\">\n<li>利用 Clipboard API 将二进制数据写入剪贴板</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> clipboardItem = <span class=\"keyword\">new</span> <span class=\"title class_\">ClipboardItem</span>(&#123;</span><br><span class=\"line\">  [<span class=\"string\">`<span class=\"subst\">$&#123;blob.type&#125;</span>`</span>]: blob</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">navigator</span>.<span class=\"property\">clipboard</span>.<span class=\"title function_\">write</span>([clipboardItem]);</span><br></pre></td></tr></table></figure>\n\n<div class=\"note warning flat\"><p>Clipboard API 目前仅支持写入 ‘image&#x2F;png’ 格式的图像。</p>\n</div>\n\n<p>在这里需要注意的是，Clipboard API 目前仅支持写入 ‘image&#x2F;png’ 格式的图像，如果你当前复制的图像为 png 格式，可能会符合预期。但是如果你复制的是 jpeg 格式的图像，则会得到下面的报错：</p>\n<blockquote>\n<p>DOMException: Failed to execute ‘write’ on ‘Clipboard’: Type image&#x2F;jpeg not supported on write.</p>\n</blockquote>\n<p>这个时候我们可以借助 <code>canvas</code> 对图像的数据格式进行转换。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> clipboardItem = <span class=\"keyword\">new</span> <span class=\"title class_\">ClipboardItem</span>(&#123;</span><br><span class=\"line\">    [<span class=\"string\">`<span class=\"subst\">$&#123;blob.type&#125;</span>`</span>]: blob</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"comment\">// try/catch 无法直接捕获 Promise 异常，这里需要使用 async/await。</span></span><br><span class=\"line\">  <span class=\"keyword\">await</span> <span class=\"variable language_\">window</span>.<span class=\"property\">navigator</span>.<span class=\"property\">clipboard</span>.<span class=\"title function_\">write</span>([clipboardItem]);</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span>(err) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// TODO 图像数据格式转换并写入剪贴板</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<div class=\"note info flat\"><p>try&#x2F;catch 无法捕获异步方法抛出的异常。因为 try&#x2F;catch 块不会等待异步方法执行完毕，try&#x2F;catch 块执行完之前，异步方法还没有抛出错误。</p>\n</div>\n"},{"title":"卷不动了，原来前端要学那么多东西","abbrlink":"ef881967","date":"2024-04-29T07:43:18.000Z","cover":"https://img.zcool.cn/community/014d9e578f348a0000018c1bd16831.gif","_content":"\n现代网络技术的浏览器支持表.\n\n[https://caniuse.com/](https://caniuse.com/)\n\nTypeScript是一种基于JavaScript的强类型编程语言，为您提供任何规模的更好工具。\n\n[https://www.typescriptlang.org/zh/](https://www.typescriptlang.org/zh/)\n\njQuery是一个快速、小巧且功能丰富的JavaScript库。它使HTML文档遍历和操作、事件处理、动画和Ajax等内容更加简单，并具有易于使用的API，可以跨多个浏览器运行。通过多功能性和可扩展性的结合，jQuery改变了数百万人编写JavaScript的方式。\n\n[https://jquery.com/](https://jquery.com/)\n\nPug 是一个用 JavaScript 实现的高性能的模板引擎，支持 Node.js 和浏览器运行环境。\n\n[https://www.pugjs.cn/](https://www.pugjs.cn/)\n\n高效的嵌入式 JavaScript 模板引擎。\n\n[https://ejs.bootcss.com/](https://ejs.bootcss.com/)\n\n易学易用，性能出色，适用场景丰富的 Web 前端框架。\n\n[https://cn.vuejs.org/](https://cn.vuejs.org/)\n\n一个原生支持 Vite 的测试框架。\n\n[https://cn.vitest.dev/](https://cn.vitest.dev/)\n\n由 Vite 和 Vue 驱动的静态站点生成器。\n\n[https://vitepress.dev/zh/](https://vitepress.dev/zh/)\n\n为 Vue.js 提供富有表现力、可配置的、方便的路由。\n\n[https://router.vuejs.org/zh/](https://router.vuejs.org/zh/)\n\n符合直觉的 Vue.js 状态管理库。\n\n[https://pinia.vuejs.org/zh/](https://pinia.vuejs.org/zh/)\n\n下一代的前端工具链，为开发提供极速响应。\n\n[https://cn.vitejs.dev/](https://cn.vitejs.dev/)\n\nNuxt.js 是一个基于 Vue.js 的第三方开源服务端渲染应用框架，它可以帮我们轻松的使用 Vue.js 技术栈实现同构应用。\n\n[https://nuxt.com/](https://nuxt.com/)\n\n\n\n[https://react.dev/](https://react.dev/)\n\n[https://nextjs.org/](https://nextjs.org/)\n\n[https://nodejs.org/en](https://nodejs.org/en)\n\n[https://expressjs.com/](https://expressjs.com/)\n\n[https://fastify.dev/](https://fastify.dev/)\n\n[https://docs.nestjs.cn/](https://docs.nestjs.cn/)\n\n[https://pm2.keymetrics.io/](https://pm2.keymetrics.io/)\n\n[https://bun.sh/](https://bun.sh/)\n\n[https://webpack.docschina.org/](https://webpack.docschina.org/)\n\n[https://cn.rollupjs.org/](https://cn.rollupjs.org/)\n\n[https://tailwindcss.com/](https://tailwindcss.com/)\n\n[https://unocss.dev/](https://unocss.dev/)\n\n[https://leafletjs.com/](https://leafletjs.com/)\n\n[https://echarts.apache.org/zh/index.html](https://echarts.apache.org/zh/index.html)\n\n[https://www.qt.io/](https://www.qt.io/)\n\n[https://tauri.app/zh-cn/](https://tauri.app/zh-cn/)\n\n[https://www.electronjs.org/zh/](https://www.electronjs.org/zh/)\n\n[https://flutter.dev/](https://flutter.dev/)\n\n[https://spring.io/](https://spring.io/)\n\n[https://www.nginx.com/](https://www.nginx.com/)\n\n[https://redis.io/](https://redis.io/)\n\n[https://day.js.org/](https://day.js.org/)\n\n[https://unifiedjs.com/](https://unifiedjs.com/)\n\n[https://remark.js.org/](https://remark.js.org/)\n\n[https://lodash.com/](https://lodash.com/)\n\n[https://hexo.io/zh-cn/](https://hexo.io/zh-cn/)\n\n[https://pages.github.com/](https://pages.github.com/)\n\n[https://git-scm.com/](https://git-scm.com/)","source":"_posts/卷不动了，原来前端要学那么多东西.md","raw":"---\ntitle: 卷不动了，原来前端要学那么多东西\nabbrlink: ef881967\ndate: 2024-04-29 15:43:18\ncover: https://img.zcool.cn/community/014d9e578f348a0000018c1bd16831.gif\ntags:\n  - 文档\ncategories:\n  - 技术分享\n---\n\n现代网络技术的浏览器支持表.\n\n[https://caniuse.com/](https://caniuse.com/)\n\nTypeScript是一种基于JavaScript的强类型编程语言，为您提供任何规模的更好工具。\n\n[https://www.typescriptlang.org/zh/](https://www.typescriptlang.org/zh/)\n\njQuery是一个快速、小巧且功能丰富的JavaScript库。它使HTML文档遍历和操作、事件处理、动画和Ajax等内容更加简单，并具有易于使用的API，可以跨多个浏览器运行。通过多功能性和可扩展性的结合，jQuery改变了数百万人编写JavaScript的方式。\n\n[https://jquery.com/](https://jquery.com/)\n\nPug 是一个用 JavaScript 实现的高性能的模板引擎，支持 Node.js 和浏览器运行环境。\n\n[https://www.pugjs.cn/](https://www.pugjs.cn/)\n\n高效的嵌入式 JavaScript 模板引擎。\n\n[https://ejs.bootcss.com/](https://ejs.bootcss.com/)\n\n易学易用，性能出色，适用场景丰富的 Web 前端框架。\n\n[https://cn.vuejs.org/](https://cn.vuejs.org/)\n\n一个原生支持 Vite 的测试框架。\n\n[https://cn.vitest.dev/](https://cn.vitest.dev/)\n\n由 Vite 和 Vue 驱动的静态站点生成器。\n\n[https://vitepress.dev/zh/](https://vitepress.dev/zh/)\n\n为 Vue.js 提供富有表现力、可配置的、方便的路由。\n\n[https://router.vuejs.org/zh/](https://router.vuejs.org/zh/)\n\n符合直觉的 Vue.js 状态管理库。\n\n[https://pinia.vuejs.org/zh/](https://pinia.vuejs.org/zh/)\n\n下一代的前端工具链，为开发提供极速响应。\n\n[https://cn.vitejs.dev/](https://cn.vitejs.dev/)\n\nNuxt.js 是一个基于 Vue.js 的第三方开源服务端渲染应用框架，它可以帮我们轻松的使用 Vue.js 技术栈实现同构应用。\n\n[https://nuxt.com/](https://nuxt.com/)\n\n\n\n[https://react.dev/](https://react.dev/)\n\n[https://nextjs.org/](https://nextjs.org/)\n\n[https://nodejs.org/en](https://nodejs.org/en)\n\n[https://expressjs.com/](https://expressjs.com/)\n\n[https://fastify.dev/](https://fastify.dev/)\n\n[https://docs.nestjs.cn/](https://docs.nestjs.cn/)\n\n[https://pm2.keymetrics.io/](https://pm2.keymetrics.io/)\n\n[https://bun.sh/](https://bun.sh/)\n\n[https://webpack.docschina.org/](https://webpack.docschina.org/)\n\n[https://cn.rollupjs.org/](https://cn.rollupjs.org/)\n\n[https://tailwindcss.com/](https://tailwindcss.com/)\n\n[https://unocss.dev/](https://unocss.dev/)\n\n[https://leafletjs.com/](https://leafletjs.com/)\n\n[https://echarts.apache.org/zh/index.html](https://echarts.apache.org/zh/index.html)\n\n[https://www.qt.io/](https://www.qt.io/)\n\n[https://tauri.app/zh-cn/](https://tauri.app/zh-cn/)\n\n[https://www.electronjs.org/zh/](https://www.electronjs.org/zh/)\n\n[https://flutter.dev/](https://flutter.dev/)\n\n[https://spring.io/](https://spring.io/)\n\n[https://www.nginx.com/](https://www.nginx.com/)\n\n[https://redis.io/](https://redis.io/)\n\n[https://day.js.org/](https://day.js.org/)\n\n[https://unifiedjs.com/](https://unifiedjs.com/)\n\n[https://remark.js.org/](https://remark.js.org/)\n\n[https://lodash.com/](https://lodash.com/)\n\n[https://hexo.io/zh-cn/](https://hexo.io/zh-cn/)\n\n[https://pages.github.com/](https://pages.github.com/)\n\n[https://git-scm.com/](https://git-scm.com/)","slug":"卷不动了，原来前端要学那么多东西","published":1,"updated":"2024-05-16T03:39:59.605Z","comments":1,"layout":"post","photos":[],"_id":"clw8r01jy000hraen8ygd3gvl","content":"<p>现代网络技术的浏览器支持表.</p>\n<p><a href=\"https://caniuse.com/\">https://caniuse.com/</a></p>\n<p>TypeScript是一种基于JavaScript的强类型编程语言，为您提供任何规模的更好工具。</p>\n<p><a href=\"https://www.typescriptlang.org/zh/\">https://www.typescriptlang.org/zh/</a></p>\n<p>jQuery是一个快速、小巧且功能丰富的JavaScript库。它使HTML文档遍历和操作、事件处理、动画和Ajax等内容更加简单，并具有易于使用的API，可以跨多个浏览器运行。通过多功能性和可扩展性的结合，jQuery改变了数百万人编写JavaScript的方式。</p>\n<p><a href=\"https://jquery.com/\">https://jquery.com/</a></p>\n<p>Pug 是一个用 JavaScript 实现的高性能的模板引擎，支持 Node.js 和浏览器运行环境。</p>\n<p><a href=\"https://www.pugjs.cn/\">https://www.pugjs.cn/</a></p>\n<p>高效的嵌入式 JavaScript 模板引擎。</p>\n<p><a href=\"https://ejs.bootcss.com/\">https://ejs.bootcss.com/</a></p>\n<p>易学易用，性能出色，适用场景丰富的 Web 前端框架。</p>\n<p><a href=\"https://cn.vuejs.org/\">https://cn.vuejs.org/</a></p>\n<p>一个原生支持 Vite 的测试框架。</p>\n<p><a href=\"https://cn.vitest.dev/\">https://cn.vitest.dev/</a></p>\n<p>由 Vite 和 Vue 驱动的静态站点生成器。</p>\n<p><a href=\"https://vitepress.dev/zh/\">https://vitepress.dev/zh/</a></p>\n<p>为 Vue.js 提供富有表现力、可配置的、方便的路由。</p>\n<p><a href=\"https://router.vuejs.org/zh/\">https://router.vuejs.org/zh/</a></p>\n<p>符合直觉的 Vue.js 状态管理库。</p>\n<p><a href=\"https://pinia.vuejs.org/zh/\">https://pinia.vuejs.org/zh/</a></p>\n<p>下一代的前端工具链，为开发提供极速响应。</p>\n<p><a href=\"https://cn.vitejs.dev/\">https://cn.vitejs.dev/</a></p>\n<p>Nuxt.js 是一个基于 Vue.js 的第三方开源服务端渲染应用框架，它可以帮我们轻松的使用 Vue.js 技术栈实现同构应用。</p>\n<p><a href=\"https://nuxt.com/\">https://nuxt.com/</a></p>\n<p><a href=\"https://react.dev/\">https://react.dev/</a></p>\n<p><a href=\"https://nextjs.org/\">https://nextjs.org/</a></p>\n<p><a href=\"https://nodejs.org/en\">https://nodejs.org/en</a></p>\n<p><a href=\"https://expressjs.com/\">https://expressjs.com/</a></p>\n<p><a href=\"https://fastify.dev/\">https://fastify.dev/</a></p>\n<p><a href=\"https://docs.nestjs.cn/\">https://docs.nestjs.cn/</a></p>\n<p><a href=\"https://pm2.keymetrics.io/\">https://pm2.keymetrics.io/</a></p>\n<p><a href=\"https://bun.sh/\">https://bun.sh/</a></p>\n<p><a href=\"https://webpack.docschina.org/\">https://webpack.docschina.org/</a></p>\n<p><a href=\"https://cn.rollupjs.org/\">https://cn.rollupjs.org/</a></p>\n<p><a href=\"https://tailwindcss.com/\">https://tailwindcss.com/</a></p>\n<p><a href=\"https://unocss.dev/\">https://unocss.dev/</a></p>\n<p><a href=\"https://leafletjs.com/\">https://leafletjs.com/</a></p>\n<p><a href=\"https://echarts.apache.org/zh/index.html\">https://echarts.apache.org/zh/index.html</a></p>\n<p><a href=\"https://www.qt.io/\">https://www.qt.io/</a></p>\n<p><a href=\"https://tauri.app/zh-cn/\">https://tauri.app/zh-cn/</a></p>\n<p><a href=\"https://www.electronjs.org/zh/\">https://www.electronjs.org/zh/</a></p>\n<p><a href=\"https://flutter.dev/\">https://flutter.dev/</a></p>\n<p><a href=\"https://spring.io/\">https://spring.io/</a></p>\n<p><a href=\"https://www.nginx.com/\">https://www.nginx.com/</a></p>\n<p><a href=\"https://redis.io/\">https://redis.io/</a></p>\n<p><a href=\"https://day.js.org/\">https://day.js.org/</a></p>\n<p><a href=\"https://unifiedjs.com/\">https://unifiedjs.com/</a></p>\n<p><a href=\"https://remark.js.org/\">https://remark.js.org/</a></p>\n<p><a href=\"https://lodash.com/\">https://lodash.com/</a></p>\n<p><a href=\"https://hexo.io/zh-cn/\">https://hexo.io/zh-cn/</a></p>\n<p><a href=\"https://pages.github.com/\">https://pages.github.com/</a></p>\n<p><a href=\"https://git-scm.com/\">https://git-scm.com/</a></p>\n","cover_type":"img","excerpt":"","more":"<p>现代网络技术的浏览器支持表.</p>\n<p><a href=\"https://caniuse.com/\">https://caniuse.com/</a></p>\n<p>TypeScript是一种基于JavaScript的强类型编程语言，为您提供任何规模的更好工具。</p>\n<p><a href=\"https://www.typescriptlang.org/zh/\">https://www.typescriptlang.org/zh/</a></p>\n<p>jQuery是一个快速、小巧且功能丰富的JavaScript库。它使HTML文档遍历和操作、事件处理、动画和Ajax等内容更加简单，并具有易于使用的API，可以跨多个浏览器运行。通过多功能性和可扩展性的结合，jQuery改变了数百万人编写JavaScript的方式。</p>\n<p><a href=\"https://jquery.com/\">https://jquery.com/</a></p>\n<p>Pug 是一个用 JavaScript 实现的高性能的模板引擎，支持 Node.js 和浏览器运行环境。</p>\n<p><a href=\"https://www.pugjs.cn/\">https://www.pugjs.cn/</a></p>\n<p>高效的嵌入式 JavaScript 模板引擎。</p>\n<p><a href=\"https://ejs.bootcss.com/\">https://ejs.bootcss.com/</a></p>\n<p>易学易用，性能出色，适用场景丰富的 Web 前端框架。</p>\n<p><a href=\"https://cn.vuejs.org/\">https://cn.vuejs.org/</a></p>\n<p>一个原生支持 Vite 的测试框架。</p>\n<p><a href=\"https://cn.vitest.dev/\">https://cn.vitest.dev/</a></p>\n<p>由 Vite 和 Vue 驱动的静态站点生成器。</p>\n<p><a href=\"https://vitepress.dev/zh/\">https://vitepress.dev/zh/</a></p>\n<p>为 Vue.js 提供富有表现力、可配置的、方便的路由。</p>\n<p><a href=\"https://router.vuejs.org/zh/\">https://router.vuejs.org/zh/</a></p>\n<p>符合直觉的 Vue.js 状态管理库。</p>\n<p><a href=\"https://pinia.vuejs.org/zh/\">https://pinia.vuejs.org/zh/</a></p>\n<p>下一代的前端工具链，为开发提供极速响应。</p>\n<p><a href=\"https://cn.vitejs.dev/\">https://cn.vitejs.dev/</a></p>\n<p>Nuxt.js 是一个基于 Vue.js 的第三方开源服务端渲染应用框架，它可以帮我们轻松的使用 Vue.js 技术栈实现同构应用。</p>\n<p><a href=\"https://nuxt.com/\">https://nuxt.com/</a></p>\n<p><a href=\"https://react.dev/\">https://react.dev/</a></p>\n<p><a href=\"https://nextjs.org/\">https://nextjs.org/</a></p>\n<p><a href=\"https://nodejs.org/en\">https://nodejs.org/en</a></p>\n<p><a href=\"https://expressjs.com/\">https://expressjs.com/</a></p>\n<p><a href=\"https://fastify.dev/\">https://fastify.dev/</a></p>\n<p><a href=\"https://docs.nestjs.cn/\">https://docs.nestjs.cn/</a></p>\n<p><a href=\"https://pm2.keymetrics.io/\">https://pm2.keymetrics.io/</a></p>\n<p><a href=\"https://bun.sh/\">https://bun.sh/</a></p>\n<p><a href=\"https://webpack.docschina.org/\">https://webpack.docschina.org/</a></p>\n<p><a href=\"https://cn.rollupjs.org/\">https://cn.rollupjs.org/</a></p>\n<p><a href=\"https://tailwindcss.com/\">https://tailwindcss.com/</a></p>\n<p><a href=\"https://unocss.dev/\">https://unocss.dev/</a></p>\n<p><a href=\"https://leafletjs.com/\">https://leafletjs.com/</a></p>\n<p><a href=\"https://echarts.apache.org/zh/index.html\">https://echarts.apache.org/zh/index.html</a></p>\n<p><a href=\"https://www.qt.io/\">https://www.qt.io/</a></p>\n<p><a href=\"https://tauri.app/zh-cn/\">https://tauri.app/zh-cn/</a></p>\n<p><a href=\"https://www.electronjs.org/zh/\">https://www.electronjs.org/zh/</a></p>\n<p><a href=\"https://flutter.dev/\">https://flutter.dev/</a></p>\n<p><a href=\"https://spring.io/\">https://spring.io/</a></p>\n<p><a href=\"https://www.nginx.com/\">https://www.nginx.com/</a></p>\n<p><a href=\"https://redis.io/\">https://redis.io/</a></p>\n<p><a href=\"https://day.js.org/\">https://day.js.org/</a></p>\n<p><a href=\"https://unifiedjs.com/\">https://unifiedjs.com/</a></p>\n<p><a href=\"https://remark.js.org/\">https://remark.js.org/</a></p>\n<p><a href=\"https://lodash.com/\">https://lodash.com/</a></p>\n<p><a href=\"https://hexo.io/zh-cn/\">https://hexo.io/zh-cn/</a></p>\n<p><a href=\"https://pages.github.com/\">https://pages.github.com/</a></p>\n<p><a href=\"https://git-scm.com/\">https://git-scm.com/</a></p>\n"},{"title":"图片懒加载","abbrlink":"f0e261b6","date":"2024-04-15T07:27:16.000Z","cover":"https://s2.loli.net/2024/04/28/sdPGmbOzwkuEcH1.png","_content":"\n_懒加载_ 是一种资源延时加载技术。它的具体实现表现为： **在满足某种条件时才加载资源**。\n\n## lazy loading attr\n\n> [Can I use loading lazy attr?](https://caniuse.com/loading-lazy-attr)\n\n在现代浏览器中，`img` 标签支持 `loading` 属性，它具有两个可选枚举值：\n\n| 值 | 描述 |\n|----|---|\n| lazy | 当某种条件满足时加载资源 |\n| eager | 立即加载资源，默认状态 |\n\n用法如下：\n\n```html\n<img src=\"https://source.unsplash.com/random/1126x260\" loading=\"lazy\" alt=\"Unsplash random image\" />\n```\n\n**注意：不同浏览器的具体实现方式不一样（加载资源需要满足的条件不一样），基于 chromium 实现的浏览器会比 Firfox 更早的加载资源。可以前往 [stack overflow](https://stackoverflow.com/questions/57753240/native-lazy-loading-loading-lazy-not-working-even-with-flags-enabled) 查看相关问题讨论。**\n\n> **其它可参考文献**\n>\n> [https://issues.chromium.org/issues/40577771](https://issues.chromium.org/issues/40577771)\n>\n> [https://developer.mozilla.org/en-US/docs/Web/Performance/Lazy_loading](https://developer.mozilla.org/en-US/docs/Web/Performance/Lazy_loading)\n\n## IntersectionObserver\n\n> [Can I use IntersectionObserver? ](https://caniuse.com/intersectionobserver)\n\n相比直接使用 `lazy loading attr `，使用 `IntersectionObserver` 可以让我们更加随心所欲的控制满足资源加载的条件。\n\n{% tabs 基于 IntersectionObserver 的技术实现 %}\n<!-- tab HTML -->\n```html\n<div class=\"scrollContainer\">\n  <!-- 使用 data-src 代替 src，避免资源立即加载 -->\n  <img data-src=\"https://source.unsplash.com/random/1126x260\" alt=\"Unsplash random image\" />\n</div>\n```\n<!-- endtab  -->\n<!-- tab JavaScript -->\n```js\nconst observer = new IntersectionObserver((entries) => {\n  entries.forEach((entry) => {\n    if (entry.isIntersecting) {\n      entry.target.src = entry.target.dataset.src;\n      observer.unobserve(entry.target);\n    }\n  });\n}, {\n  root: document.querySelect('.scrollContainer'),\n  rootMargin: '0px 0px 200px 0', // 控制视图范围\n  threshold: [0, 0, 0, 0]\n});\n\nconst imgElements = document.querySelectAll('img');\nArray.from(imgElements).forEach((el) => {\n  observer.observe(el);\n});\n```\n<!-- endtab -->\n{% endtabs %}\n\n## Element.getBoundingClientRect()\n\n> [Can I use getBoundingClientRect()?](https://caniuse.com/getboundingclientrect)\n\n`Element.getBoundingClientRect()` 相比 `IntersectionObserver` 没有那么方便，但它具有更良好的浏览器兼容性，当需要考虑浏览器兼容性的时候，使用 `Element.getBoundingClientRect()` 是一个不错的选择。\n\n{% tabs 基于 getBoundingClientRect 的技术实现 %}\n<!-- tab HTML -->\n```html\n<div class=\"scrollContainer\">\n  <!-- 使用 data-src 代替 src，避免资源立即加载 -->\n  <img data-src=\"https://source.unsplash.com/random/1126x260\" alt=\"Unsplash random image\" />\n</div>\n```\n<!-- endtab -->\n\n<!-- tab JavaScript -->\n```javascript\nconst scrollContainer = document.querySelector('.scrollContainer');\nconst imgElements = scrollContainer.querySelectorAll('img');\n\nscrollContainer.addEventListener('scroll', (event) => {\n  Array.from(imgElements).forEach((el) => {\n    if (el.dataset.src && isScrollIntoView(el)) {\n      el.src = el.dataset.src;\n      delete el.dataset.src;\n    }\n  });\n});\n\n/**\n * 判断元素是否滚动到视图内\n * @param {HTMLElement} el \n */\nfunction isScrollIntoView(el) {\n  const rect = el.getBoundingClientRect();\n  if (scrollContainer.offsetTop + scrollContainer.clientHeight > rect.top) {\n    return true;\n  }\n  return false;\n}\n```\n<!-- endtab -->\n{% endtabs %}\n\n使用 `Element.getBoundingClientRect()` 需要考虑的因素很多，如：设置滚动容器、设置满足资源加载的条件等。\n","source":"_posts/图片懒加载.md","raw":"---\ntitle: 图片懒加载\ncategories:\n  - 前端\ntags:\n  - lazy loading\nabbrlink: f0e261b6\ndate: 2024-04-15 15:27:16\ncover: https://s2.loli.net/2024/04/28/sdPGmbOzwkuEcH1.png\n---\n\n_懒加载_ 是一种资源延时加载技术。它的具体实现表现为： **在满足某种条件时才加载资源**。\n\n## lazy loading attr\n\n> [Can I use loading lazy attr?](https://caniuse.com/loading-lazy-attr)\n\n在现代浏览器中，`img` 标签支持 `loading` 属性，它具有两个可选枚举值：\n\n| 值 | 描述 |\n|----|---|\n| lazy | 当某种条件满足时加载资源 |\n| eager | 立即加载资源，默认状态 |\n\n用法如下：\n\n```html\n<img src=\"https://source.unsplash.com/random/1126x260\" loading=\"lazy\" alt=\"Unsplash random image\" />\n```\n\n**注意：不同浏览器的具体实现方式不一样（加载资源需要满足的条件不一样），基于 chromium 实现的浏览器会比 Firfox 更早的加载资源。可以前往 [stack overflow](https://stackoverflow.com/questions/57753240/native-lazy-loading-loading-lazy-not-working-even-with-flags-enabled) 查看相关问题讨论。**\n\n> **其它可参考文献**\n>\n> [https://issues.chromium.org/issues/40577771](https://issues.chromium.org/issues/40577771)\n>\n> [https://developer.mozilla.org/en-US/docs/Web/Performance/Lazy_loading](https://developer.mozilla.org/en-US/docs/Web/Performance/Lazy_loading)\n\n## IntersectionObserver\n\n> [Can I use IntersectionObserver? ](https://caniuse.com/intersectionobserver)\n\n相比直接使用 `lazy loading attr `，使用 `IntersectionObserver` 可以让我们更加随心所欲的控制满足资源加载的条件。\n\n{% tabs 基于 IntersectionObserver 的技术实现 %}\n<!-- tab HTML -->\n```html\n<div class=\"scrollContainer\">\n  <!-- 使用 data-src 代替 src，避免资源立即加载 -->\n  <img data-src=\"https://source.unsplash.com/random/1126x260\" alt=\"Unsplash random image\" />\n</div>\n```\n<!-- endtab  -->\n<!-- tab JavaScript -->\n```js\nconst observer = new IntersectionObserver((entries) => {\n  entries.forEach((entry) => {\n    if (entry.isIntersecting) {\n      entry.target.src = entry.target.dataset.src;\n      observer.unobserve(entry.target);\n    }\n  });\n}, {\n  root: document.querySelect('.scrollContainer'),\n  rootMargin: '0px 0px 200px 0', // 控制视图范围\n  threshold: [0, 0, 0, 0]\n});\n\nconst imgElements = document.querySelectAll('img');\nArray.from(imgElements).forEach((el) => {\n  observer.observe(el);\n});\n```\n<!-- endtab -->\n{% endtabs %}\n\n## Element.getBoundingClientRect()\n\n> [Can I use getBoundingClientRect()?](https://caniuse.com/getboundingclientrect)\n\n`Element.getBoundingClientRect()` 相比 `IntersectionObserver` 没有那么方便，但它具有更良好的浏览器兼容性，当需要考虑浏览器兼容性的时候，使用 `Element.getBoundingClientRect()` 是一个不错的选择。\n\n{% tabs 基于 getBoundingClientRect 的技术实现 %}\n<!-- tab HTML -->\n```html\n<div class=\"scrollContainer\">\n  <!-- 使用 data-src 代替 src，避免资源立即加载 -->\n  <img data-src=\"https://source.unsplash.com/random/1126x260\" alt=\"Unsplash random image\" />\n</div>\n```\n<!-- endtab -->\n\n<!-- tab JavaScript -->\n```javascript\nconst scrollContainer = document.querySelector('.scrollContainer');\nconst imgElements = scrollContainer.querySelectorAll('img');\n\nscrollContainer.addEventListener('scroll', (event) => {\n  Array.from(imgElements).forEach((el) => {\n    if (el.dataset.src && isScrollIntoView(el)) {\n      el.src = el.dataset.src;\n      delete el.dataset.src;\n    }\n  });\n});\n\n/**\n * 判断元素是否滚动到视图内\n * @param {HTMLElement} el \n */\nfunction isScrollIntoView(el) {\n  const rect = el.getBoundingClientRect();\n  if (scrollContainer.offsetTop + scrollContainer.clientHeight > rect.top) {\n    return true;\n  }\n  return false;\n}\n```\n<!-- endtab -->\n{% endtabs %}\n\n使用 `Element.getBoundingClientRect()` 需要考虑的因素很多，如：设置滚动容器、设置满足资源加载的条件等。\n","slug":"图片懒加载","published":1,"updated":"2024-05-16T03:39:59.605Z","comments":1,"layout":"post","photos":[],"_id":"clw8r01jz000mraencern2dc5","content":"<p><em>懒加载</em> 是一种资源延时加载技术。它的具体实现表现为： <strong>在满足某种条件时才加载资源</strong>。</p>\n<h2 id=\"lazy-loading-attr\"><a href=\"#lazy-loading-attr\" class=\"headerlink\" title=\"lazy loading attr\"></a>lazy loading attr</h2><blockquote>\n<p><a href=\"https://caniuse.com/loading-lazy-attr\">Can I use loading lazy attr?</a></p>\n</blockquote>\n<p>在现代浏览器中，<code>img</code> 标签支持 <code>loading</code> 属性，它具有两个可选枚举值：</p>\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>lazy</td>\n<td>当某种条件满足时加载资源</td>\n</tr>\n<tr>\n<td>eager</td>\n<td>立即加载资源，默认状态</td>\n</tr>\n</tbody></table>\n<p>用法如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://source.unsplash.com/random/1126x260&quot;</span> <span class=\"attr\">loading</span>=<span class=\"string\">&quot;lazy&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;Unsplash random image&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>注意：不同浏览器的具体实现方式不一样（加载资源需要满足的条件不一样），基于 chromium 实现的浏览器会比 Firfox 更早的加载资源。可以前往 <a href=\"https://stackoverflow.com/questions/57753240/native-lazy-loading-loading-lazy-not-working-even-with-flags-enabled\">stack overflow</a> 查看相关问题讨论。</strong></p>\n<blockquote>\n<p><strong>其它可参考文献</strong></p>\n<p><a href=\"https://issues.chromium.org/issues/40577771\">https://issues.chromium.org/issues/40577771</a></p>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/Performance/Lazy_loading\">https://developer.mozilla.org/en-US/docs/Web/Performance/Lazy_loading</a></p>\n</blockquote>\n<h2 id=\"IntersectionObserver\"><a href=\"#IntersectionObserver\" class=\"headerlink\" title=\"IntersectionObserver\"></a>IntersectionObserver</h2><blockquote>\n<p><a href=\"https://caniuse.com/intersectionobserver\">Can I use IntersectionObserver? </a></p>\n</blockquote>\n<p>相比直接使用 <code>lazy loading attr </code>，使用 <code>IntersectionObserver</code> 可以让我们更加随心所欲的控制满足资源加载的条件。</p>\n<div class=\"tabs\" id=\"基于-intersectionobserver-的技术实现\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"基于-intersectionobserver-的技术实现-1\">HTML</button><button type=\"button\" class=\"tab \" data-href=\"基于-intersectionobserver-的技术实现-2\">JavaScript</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"基于-intersectionobserver-的技术实现-1\"><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;scrollContainer&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 使用 data-src 代替 src，避免资源立即加载 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">data-src</span>=<span class=\"string\">&quot;https://source.unsplash.com/random/1126x260&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;Unsplash random image&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-item-content\" id=\"基于-intersectionobserver-的技术实现-2\"><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> observer = <span class=\"keyword\">new</span> <span class=\"title class_\">IntersectionObserver</span>(<span class=\"function\">(<span class=\"params\">entries</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  entries.<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">entry</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (entry.<span class=\"property\">isIntersecting</span>) &#123;</span><br><span class=\"line\">      entry.<span class=\"property\">target</span>.<span class=\"property\">src</span> = entry.<span class=\"property\">target</span>.<span class=\"property\">dataset</span>.<span class=\"property\">src</span>;</span><br><span class=\"line\">      observer.<span class=\"title function_\">unobserve</span>(entry.<span class=\"property\">target</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;, &#123;</span><br><span class=\"line\">  <span class=\"attr\">root</span>: <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelect</span>(<span class=\"string\">&#x27;.scrollContainer&#x27;</span>),</span><br><span class=\"line\">  <span class=\"attr\">rootMargin</span>: <span class=\"string\">&#x27;0px 0px 200px 0&#x27;</span>, <span class=\"comment\">// 控制视图范围</span></span><br><span class=\"line\">  <span class=\"attr\">threshold</span>: [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>]</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> imgElements = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelectAll</span>(<span class=\"string\">&#x27;img&#x27;</span>);</span><br><span class=\"line\"><span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(imgElements).<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">el</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  observer.<span class=\"title function_\">observe</span>(el);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n\n<h2 id=\"Element-getBoundingClientRect\"><a href=\"#Element-getBoundingClientRect\" class=\"headerlink\" title=\"Element.getBoundingClientRect()\"></a>Element.getBoundingClientRect()</h2><blockquote>\n<p><a href=\"https://caniuse.com/getboundingclientrect\">Can I use getBoundingClientRect()?</a></p>\n</blockquote>\n<p><code>Element.getBoundingClientRect()</code> 相比 <code>IntersectionObserver</code> 没有那么方便，但它具有更良好的浏览器兼容性，当需要考虑浏览器兼容性的时候，使用 <code>Element.getBoundingClientRect()</code> 是一个不错的选择。</p>\n<div class=\"tabs\" id=\"基于-getboundingclientrect-的技术实现\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"基于-getboundingclientrect-的技术实现-1\">HTML</button><button type=\"button\" class=\"tab \" data-href=\"基于-getboundingclientrect-的技术实现-2\">JavaScript</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"基于-getboundingclientrect-的技术实现-1\"><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;scrollContainer&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 使用 data-src 代替 src，避免资源立即加载 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">data-src</span>=<span class=\"string\">&quot;https://source.unsplash.com/random/1126x260&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;Unsplash random image&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-item-content\" id=\"基于-getboundingclientrect-的技术实现-2\"><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> scrollContainer = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;.scrollContainer&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> imgElements = scrollContainer.<span class=\"title function_\">querySelectorAll</span>(<span class=\"string\">&#x27;img&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">scrollContainer.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;scroll&#x27;</span>, <span class=\"function\">(<span class=\"params\">event</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(imgElements).<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">el</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (el.<span class=\"property\">dataset</span>.<span class=\"property\">src</span> &amp;&amp; <span class=\"title function_\">isScrollIntoView</span>(el)) &#123;</span><br><span class=\"line\">      el.<span class=\"property\">src</span> = el.<span class=\"property\">dataset</span>.<span class=\"property\">src</span>;</span><br><span class=\"line\">      <span class=\"keyword\">delete</span> el.<span class=\"property\">dataset</span>.<span class=\"property\">src</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 判断元素是否滚动到视图内</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">HTMLElement</span>&#125; el </span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">isScrollIntoView</span>(<span class=\"params\">el</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> rect = el.<span class=\"title function_\">getBoundingClientRect</span>();</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (scrollContainer.<span class=\"property\">offsetTop</span> + scrollContainer.<span class=\"property\">clientHeight</span> &gt; rect.<span class=\"property\">top</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n\n<p>使用 <code>Element.getBoundingClientRect()</code> 需要考虑的因素很多，如：设置滚动容器、设置满足资源加载的条件等。</p>\n","cover_type":"img","excerpt":"","more":"<p><em>懒加载</em> 是一种资源延时加载技术。它的具体实现表现为： <strong>在满足某种条件时才加载资源</strong>。</p>\n<h2 id=\"lazy-loading-attr\"><a href=\"#lazy-loading-attr\" class=\"headerlink\" title=\"lazy loading attr\"></a>lazy loading attr</h2><blockquote>\n<p><a href=\"https://caniuse.com/loading-lazy-attr\">Can I use loading lazy attr?</a></p>\n</blockquote>\n<p>在现代浏览器中，<code>img</code> 标签支持 <code>loading</code> 属性，它具有两个可选枚举值：</p>\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>lazy</td>\n<td>当某种条件满足时加载资源</td>\n</tr>\n<tr>\n<td>eager</td>\n<td>立即加载资源，默认状态</td>\n</tr>\n</tbody></table>\n<p>用法如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://source.unsplash.com/random/1126x260&quot;</span> <span class=\"attr\">loading</span>=<span class=\"string\">&quot;lazy&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;Unsplash random image&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>注意：不同浏览器的具体实现方式不一样（加载资源需要满足的条件不一样），基于 chromium 实现的浏览器会比 Firfox 更早的加载资源。可以前往 <a href=\"https://stackoverflow.com/questions/57753240/native-lazy-loading-loading-lazy-not-working-even-with-flags-enabled\">stack overflow</a> 查看相关问题讨论。</strong></p>\n<blockquote>\n<p><strong>其它可参考文献</strong></p>\n<p><a href=\"https://issues.chromium.org/issues/40577771\">https://issues.chromium.org/issues/40577771</a></p>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/Performance/Lazy_loading\">https://developer.mozilla.org/en-US/docs/Web/Performance/Lazy_loading</a></p>\n</blockquote>\n<h2 id=\"IntersectionObserver\"><a href=\"#IntersectionObserver\" class=\"headerlink\" title=\"IntersectionObserver\"></a>IntersectionObserver</h2><blockquote>\n<p><a href=\"https://caniuse.com/intersectionobserver\">Can I use IntersectionObserver? </a></p>\n</blockquote>\n<p>相比直接使用 <code>lazy loading attr </code>，使用 <code>IntersectionObserver</code> 可以让我们更加随心所欲的控制满足资源加载的条件。</p>\n<div class=\"tabs\" id=\"基于-intersectionobserver-的技术实现\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"基于-intersectionobserver-的技术实现-1\">HTML</button><button type=\"button\" class=\"tab \" data-href=\"基于-intersectionobserver-的技术实现-2\">JavaScript</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"基于-intersectionobserver-的技术实现-1\"><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;scrollContainer&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 使用 data-src 代替 src，避免资源立即加载 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">data-src</span>=<span class=\"string\">&quot;https://source.unsplash.com/random/1126x260&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;Unsplash random image&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-item-content\" id=\"基于-intersectionobserver-的技术实现-2\"><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> observer = <span class=\"keyword\">new</span> <span class=\"title class_\">IntersectionObserver</span>(<span class=\"function\">(<span class=\"params\">entries</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  entries.<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">entry</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (entry.<span class=\"property\">isIntersecting</span>) &#123;</span><br><span class=\"line\">      entry.<span class=\"property\">target</span>.<span class=\"property\">src</span> = entry.<span class=\"property\">target</span>.<span class=\"property\">dataset</span>.<span class=\"property\">src</span>;</span><br><span class=\"line\">      observer.<span class=\"title function_\">unobserve</span>(entry.<span class=\"property\">target</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;, &#123;</span><br><span class=\"line\">  <span class=\"attr\">root</span>: <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelect</span>(<span class=\"string\">&#x27;.scrollContainer&#x27;</span>),</span><br><span class=\"line\">  <span class=\"attr\">rootMargin</span>: <span class=\"string\">&#x27;0px 0px 200px 0&#x27;</span>, <span class=\"comment\">// 控制视图范围</span></span><br><span class=\"line\">  <span class=\"attr\">threshold</span>: [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>]</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> imgElements = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelectAll</span>(<span class=\"string\">&#x27;img&#x27;</span>);</span><br><span class=\"line\"><span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(imgElements).<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">el</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  observer.<span class=\"title function_\">observe</span>(el);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n\n<h2 id=\"Element-getBoundingClientRect\"><a href=\"#Element-getBoundingClientRect\" class=\"headerlink\" title=\"Element.getBoundingClientRect()\"></a>Element.getBoundingClientRect()</h2><blockquote>\n<p><a href=\"https://caniuse.com/getboundingclientrect\">Can I use getBoundingClientRect()?</a></p>\n</blockquote>\n<p><code>Element.getBoundingClientRect()</code> 相比 <code>IntersectionObserver</code> 没有那么方便，但它具有更良好的浏览器兼容性，当需要考虑浏览器兼容性的时候，使用 <code>Element.getBoundingClientRect()</code> 是一个不错的选择。</p>\n<div class=\"tabs\" id=\"基于-getboundingclientrect-的技术实现\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"基于-getboundingclientrect-的技术实现-1\">HTML</button><button type=\"button\" class=\"tab \" data-href=\"基于-getboundingclientrect-的技术实现-2\">JavaScript</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"基于-getboundingclientrect-的技术实现-1\"><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;scrollContainer&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 使用 data-src 代替 src，避免资源立即加载 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">data-src</span>=<span class=\"string\">&quot;https://source.unsplash.com/random/1126x260&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;Unsplash random image&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-item-content\" id=\"基于-getboundingclientrect-的技术实现-2\"><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> scrollContainer = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;.scrollContainer&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> imgElements = scrollContainer.<span class=\"title function_\">querySelectorAll</span>(<span class=\"string\">&#x27;img&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">scrollContainer.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;scroll&#x27;</span>, <span class=\"function\">(<span class=\"params\">event</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(imgElements).<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">el</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (el.<span class=\"property\">dataset</span>.<span class=\"property\">src</span> &amp;&amp; <span class=\"title function_\">isScrollIntoView</span>(el)) &#123;</span><br><span class=\"line\">      el.<span class=\"property\">src</span> = el.<span class=\"property\">dataset</span>.<span class=\"property\">src</span>;</span><br><span class=\"line\">      <span class=\"keyword\">delete</span> el.<span class=\"property\">dataset</span>.<span class=\"property\">src</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 判断元素是否滚动到视图内</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">HTMLElement</span>&#125; el </span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">isScrollIntoView</span>(<span class=\"params\">el</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> rect = el.<span class=\"title function_\">getBoundingClientRect</span>();</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (scrollContainer.<span class=\"property\">offsetTop</span> + scrollContainer.<span class=\"property\">clientHeight</span> &gt; rect.<span class=\"property\">top</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n\n<p>使用 <code>Element.getBoundingClientRect()</code> 需要考虑的因素很多，如：设置滚动容器、设置满足资源加载的条件等。</p>\n"},{"title":"算法题解: n 数之和","date":"2024-05-16T04:35:00.000Z","abbrlink":"49ec49d6","_content":"\n## n 数之和\n\n结尾有点小插曲。\n\n> 现给定一个整数数组 (数组长度大于等于 5) nums 和一个整数目标值 target，请你在该数组中找出和为目标值 target 的那 n ( n < nums.length ) 个整数，并返回它们的数组(如果有多个下标组合都满足，则返回下标和最小的那一组)的下标。\n>\n> **注意：数组中同一个元素在答案里不能重复出现。**\n>\n> 输入: nums = [3，2，4，5，7]，n = 3, target = 10\n>\n> 输出: [0，1，3]\n\n### 思路\n\n可能性：\n\n1. 找不到 `n` 数之和为 `target`: 输出 `[]`\n2. 找到 `n` 数之和为 `target`: 输出正确的索引数组\n\n解题思路：固定前 n - 1 项的和，在数组中寻找最后最后一项。\n\n按题例写步骤：\n\n>> 输入: nums = [3，2，4，5，7]，n = 3, target = 10\n>\n>> 固定前两项，寻找最后一项\n>\n> 固定 (3, 2)\n>\n> 3 + 2 + 4 === 10\n>\n> 3 + 2 + 5 === 10 符合条件\n>\n> 3 + 2 + 7 === 10\n>\n> 固定 (3, 4)\n>\n> 3 + 4 + 5\n>\n> 3 + 4 + 7\n>\n> 固定 (3, 5)\n>\n> 3 + 5 + 7\n>\n> 固定 (2, 4)\n>\n> 2 + 4 + 5 === 10\n>\n> 2 + 4 + 7 === 10\n>\n> 固定 (2, 5)\n>\n> 2 + 5 + 7 === 10\n>\n> 固定 (4, 5)\n>\n> 4 + 5 + 7 === 10\n\n找条件：\n  1. 索引数组长度为 n 且 `nums[indexes[0]] + nums[indexes[1]] + ... + nums[indexes[n-1]] = target` (这里的 `indexes[i]` 为索引数组中的每一项)\n  2. `nums`、`target` 和 `n` 为已知条件，程序通过遍历能够很方便的得到 `nums` 数组中的每一个元素\n\nQ: 如何固定前 n - 1 项？\nA: \n1. 遍历每一种可能的组合\n\n### 解题（解题未完成，待完善）\n\n```js\nconst nSum = (nums, n, target) => {\n  // TODO\n};\n```\n### 戏剧性\n\n在思考时，我竟然发现题目出错了，因为可能有多组结果都满足题意。下面举例：\n\n当 `nums = [0, 0, 0, 0, 0]`, `n = 3`, `target = 0` 时：`[0, 1, 4]` 和 `[0, 2, 3]` 都符合题意。\n\n所以输出应该是一个二维数组才对啊！\n\n","source":"_posts/算法题解-n-数之和.md","raw":"---\ntitle: '算法题解: n 数之和'\ndate: 2024-05-16 12:35:00\ncategories:\n  - 算法\ntags:\n  - 算法\n  - n 数之和\nabbrlink: 49ec49d6\n---\n\n## n 数之和\n\n结尾有点小插曲。\n\n> 现给定一个整数数组 (数组长度大于等于 5) nums 和一个整数目标值 target，请你在该数组中找出和为目标值 target 的那 n ( n < nums.length ) 个整数，并返回它们的数组(如果有多个下标组合都满足，则返回下标和最小的那一组)的下标。\n>\n> **注意：数组中同一个元素在答案里不能重复出现。**\n>\n> 输入: nums = [3，2，4，5，7]，n = 3, target = 10\n>\n> 输出: [0，1，3]\n\n### 思路\n\n可能性：\n\n1. 找不到 `n` 数之和为 `target`: 输出 `[]`\n2. 找到 `n` 数之和为 `target`: 输出正确的索引数组\n\n解题思路：固定前 n - 1 项的和，在数组中寻找最后最后一项。\n\n按题例写步骤：\n\n>> 输入: nums = [3，2，4，5，7]，n = 3, target = 10\n>\n>> 固定前两项，寻找最后一项\n>\n> 固定 (3, 2)\n>\n> 3 + 2 + 4 === 10\n>\n> 3 + 2 + 5 === 10 符合条件\n>\n> 3 + 2 + 7 === 10\n>\n> 固定 (3, 4)\n>\n> 3 + 4 + 5\n>\n> 3 + 4 + 7\n>\n> 固定 (3, 5)\n>\n> 3 + 5 + 7\n>\n> 固定 (2, 4)\n>\n> 2 + 4 + 5 === 10\n>\n> 2 + 4 + 7 === 10\n>\n> 固定 (2, 5)\n>\n> 2 + 5 + 7 === 10\n>\n> 固定 (4, 5)\n>\n> 4 + 5 + 7 === 10\n\n找条件：\n  1. 索引数组长度为 n 且 `nums[indexes[0]] + nums[indexes[1]] + ... + nums[indexes[n-1]] = target` (这里的 `indexes[i]` 为索引数组中的每一项)\n  2. `nums`、`target` 和 `n` 为已知条件，程序通过遍历能够很方便的得到 `nums` 数组中的每一个元素\n\nQ: 如何固定前 n - 1 项？\nA: \n1. 遍历每一种可能的组合\n\n### 解题（解题未完成，待完善）\n\n```js\nconst nSum = (nums, n, target) => {\n  // TODO\n};\n```\n### 戏剧性\n\n在思考时，我竟然发现题目出错了，因为可能有多组结果都满足题意。下面举例：\n\n当 `nums = [0, 0, 0, 0, 0]`, `n = 3`, `target = 0` 时：`[0, 1, 4]` 和 `[0, 2, 3]` 都符合题意。\n\n所以输出应该是一个二维数组才对啊！\n\n","slug":"算法题解-n-数之和","published":1,"updated":"2024-05-16T09:47:49.885Z","_id":"clw8r01jz000praenf6ip0pzp","comments":1,"layout":"post","photos":[],"content":"<h2 id=\"n-数之和\"><a href=\"#n-数之和\" class=\"headerlink\" title=\"n 数之和\"></a>n 数之和</h2><p>结尾有点小插曲。</p>\n<blockquote>\n<p>现给定一个整数数组 (数组长度大于等于 5) nums 和一个整数目标值 target，请你在该数组中找出和为目标值 target 的那 n ( n &lt; nums.length ) 个整数，并返回它们的数组(如果有多个下标组合都满足，则返回下标和最小的那一组)的下标。</p>\n<p><strong>注意：数组中同一个元素在答案里不能重复出现。</strong></p>\n<p>输入: nums &#x3D; [3，2，4，5，7]，n &#x3D; 3, target &#x3D; 10</p>\n<p>输出: [0，1，3]</p>\n</blockquote>\n<h3 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h3><p>可能性：</p>\n<ol>\n<li>找不到 <code>n</code> 数之和为 <code>target</code>: 输出 <code>[]</code></li>\n<li>找到 <code>n</code> 数之和为 <code>target</code>: 输出正确的索引数组</li>\n</ol>\n<p>解题思路：固定前 n - 1 项的和，在数组中寻找最后最后一项。</p>\n<p>按题例写步骤：</p>\n<blockquote>\n<blockquote>\n<p>输入: nums &#x3D; [3，2，4，5，7]，n &#x3D; 3, target &#x3D; 10</p>\n</blockquote>\n<blockquote>\n<p>固定前两项，寻找最后一项</p>\n</blockquote>\n<p>固定 (3, 2)</p>\n<p>3 + 2 + 4 &#x3D;&#x3D;&#x3D; 10</p>\n<p>3 + 2 + 5 &#x3D;&#x3D;&#x3D; 10 符合条件</p>\n<p>3 + 2 + 7 &#x3D;&#x3D;&#x3D; 10</p>\n<p>固定 (3, 4)</p>\n<p>3 + 4 + 5</p>\n<p>3 + 4 + 7</p>\n<p>固定 (3, 5)</p>\n<p>3 + 5 + 7</p>\n<p>固定 (2, 4)</p>\n<p>2 + 4 + 5 &#x3D;&#x3D;&#x3D; 10</p>\n<p>2 + 4 + 7 &#x3D;&#x3D;&#x3D; 10</p>\n<p>固定 (2, 5)</p>\n<p>2 + 5 + 7 &#x3D;&#x3D;&#x3D; 10</p>\n<p>固定 (4, 5)</p>\n<p>4 + 5 + 7 &#x3D;&#x3D;&#x3D; 10</p>\n</blockquote>\n<p>找条件：</p>\n<ol>\n<li>索引数组长度为 n 且 <code>nums[indexes[0]] + nums[indexes[1]] + ... + nums[indexes[n-1]] = target</code> (这里的 <code>indexes[i]</code> 为索引数组中的每一项)</li>\n<li><code>nums</code>、<code>target</code> 和 <code>n</code> 为已知条件，程序通过遍历能够很方便的得到 <code>nums</code> 数组中的每一个元素</li>\n</ol>\n<p>Q: 如何固定前 n - 1 项？<br>A: </p>\n<ol>\n<li>遍历每一种可能的组合</li>\n</ol>\n<h3 id=\"解题（解题未完成，待完善）\"><a href=\"#解题（解题未完成，待完善）\" class=\"headerlink\" title=\"解题（解题未完成，待完善）\"></a>解题（解题未完成，待完善）</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">nSum</span> = (<span class=\"params\">nums, n, target</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"comment\">// TODO</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"戏剧性\"><a href=\"#戏剧性\" class=\"headerlink\" title=\"戏剧性\"></a>戏剧性</h3><p>在思考时，我竟然发现题目出错了，因为可能有多组结果都满足题意。下面举例：</p>\n<p>当 <code>nums = [0, 0, 0, 0, 0]</code>, <code>n = 3</code>, <code>target = 0</code> 时：<code>[0, 1, 4]</code> 和 <code>[0, 2, 3]</code> 都符合题意。</p>\n<p>所以输出应该是一个二维数组才对啊！</p>\n","cover":"https://source.unsplash.com/random/1126x260","cover_type":"img","excerpt":"","more":"<h2 id=\"n-数之和\"><a href=\"#n-数之和\" class=\"headerlink\" title=\"n 数之和\"></a>n 数之和</h2><p>结尾有点小插曲。</p>\n<blockquote>\n<p>现给定一个整数数组 (数组长度大于等于 5) nums 和一个整数目标值 target，请你在该数组中找出和为目标值 target 的那 n ( n &lt; nums.length ) 个整数，并返回它们的数组(如果有多个下标组合都满足，则返回下标和最小的那一组)的下标。</p>\n<p><strong>注意：数组中同一个元素在答案里不能重复出现。</strong></p>\n<p>输入: nums &#x3D; [3，2，4，5，7]，n &#x3D; 3, target &#x3D; 10</p>\n<p>输出: [0，1，3]</p>\n</blockquote>\n<h3 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h3><p>可能性：</p>\n<ol>\n<li>找不到 <code>n</code> 数之和为 <code>target</code>: 输出 <code>[]</code></li>\n<li>找到 <code>n</code> 数之和为 <code>target</code>: 输出正确的索引数组</li>\n</ol>\n<p>解题思路：固定前 n - 1 项的和，在数组中寻找最后最后一项。</p>\n<p>按题例写步骤：</p>\n<blockquote>\n<blockquote>\n<p>输入: nums &#x3D; [3，2，4，5，7]，n &#x3D; 3, target &#x3D; 10</p>\n</blockquote>\n<blockquote>\n<p>固定前两项，寻找最后一项</p>\n</blockquote>\n<p>固定 (3, 2)</p>\n<p>3 + 2 + 4 &#x3D;&#x3D;&#x3D; 10</p>\n<p>3 + 2 + 5 &#x3D;&#x3D;&#x3D; 10 符合条件</p>\n<p>3 + 2 + 7 &#x3D;&#x3D;&#x3D; 10</p>\n<p>固定 (3, 4)</p>\n<p>3 + 4 + 5</p>\n<p>3 + 4 + 7</p>\n<p>固定 (3, 5)</p>\n<p>3 + 5 + 7</p>\n<p>固定 (2, 4)</p>\n<p>2 + 4 + 5 &#x3D;&#x3D;&#x3D; 10</p>\n<p>2 + 4 + 7 &#x3D;&#x3D;&#x3D; 10</p>\n<p>固定 (2, 5)</p>\n<p>2 + 5 + 7 &#x3D;&#x3D;&#x3D; 10</p>\n<p>固定 (4, 5)</p>\n<p>4 + 5 + 7 &#x3D;&#x3D;&#x3D; 10</p>\n</blockquote>\n<p>找条件：</p>\n<ol>\n<li>索引数组长度为 n 且 <code>nums[indexes[0]] + nums[indexes[1]] + ... + nums[indexes[n-1]] = target</code> (这里的 <code>indexes[i]</code> 为索引数组中的每一项)</li>\n<li><code>nums</code>、<code>target</code> 和 <code>n</code> 为已知条件，程序通过遍历能够很方便的得到 <code>nums</code> 数组中的每一个元素</li>\n</ol>\n<p>Q: 如何固定前 n - 1 项？<br>A: </p>\n<ol>\n<li>遍历每一种可能的组合</li>\n</ol>\n<h3 id=\"解题（解题未完成，待完善）\"><a href=\"#解题（解题未完成，待完善）\" class=\"headerlink\" title=\"解题（解题未完成，待完善）\"></a>解题（解题未完成，待完善）</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">nSum</span> = (<span class=\"params\">nums, n, target</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"comment\">// TODO</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"戏剧性\"><a href=\"#戏剧性\" class=\"headerlink\" title=\"戏剧性\"></a>戏剧性</h3><p>在思考时，我竟然发现题目出错了，因为可能有多组结果都满足题意。下面举例：</p>\n<p>当 <code>nums = [0, 0, 0, 0, 0]</code>, <code>n = 3</code>, <code>target = 0</code> 时：<code>[0, 1, 4]</code> 和 <code>[0, 2, 3]</code> 都符合题意。</p>\n<p>所以输出应该是一个二维数组才对啊！</p>\n"},{"title":"终于割掉了那坨肉","abbrlink":"28bff704","date":"2024-04-29T06:47:16.000Z","cover":"https://img.ixintu.com/download/jpg/202005/1e23061142c4676c22c5cff04511ad40_610_420.jpg!con","_content":"\n从高中到现在得痔疮已有十几年了，发展到现在已经十分严重 —— 环形混合痔，最严重的痔疮发展阶段。医生都感概，为何才二十六岁的我，年纪轻轻就有了这么严重的痔疮。我只能说 “没办法，搞 IT 的嘛”。\n\n我是三月二十三日周六来协和东西湖医院做的检查并办理的入院，当天回去了一趟，第二天周日才正式搬着行李入住，陪着我的还有我的女朋友。\n\n周日入住前与医生讨论了一下手术方案和风险，并签了字，家属签的是我女朋友的名字。手术前还做了几项基本检查：验血、胸透、尿常规、便常规、血压、呼吸频率等，各项数据都正常。\n\n手术前不能吃饭，只能吃流食。因为术前需要进行灌肠，“吃得多，灌得多”，这是医生的原话。所以我当天也就只吃了一块德芙巧克力、一个小的凤梨。不过，到了当天晚上七点多还是进行了两次灌肠。同病房的病友说，灌两次是正常的，一般也就灌两次。其实，我第二次灌肠也还有一点点凤梨的残渣，不过护士说不用灌了，如果再次解大便，记得拍照给她看即可。之前查小红书和知乎，别人都说灌肠很容易当众蹿稀，起初搞的我还很忐忑。但实际上也没有网上说的那么夸张，就是胶管塞进去时有一种异物感，然后灌进去时的确会有想要拉肚子的冲动，不过也不至于憋不住。我本以为一次灌肠会挺久的，实际上不到一分钟就结束了。护士说最好憋个五分钟以上，但这哪是控制的住的，进入厕所不到五分钟就立马“缴械投降”了。第一次灌肠可能灌的比较少，还坚挺了五分钟左右，第二次真是没到两分钟就喷射了。还好也就灌了两次。\n\n手术原定安排的是周一的上午，不过由于排队，等到了下午两点多。在手术前又排了一次便，不过个人感觉量不大，也就没再给护士看。一点左右临近手术前，医生过来在我的背部的正中腰间画了一个标记，说是打麻醉的标记。下午两点多医生过来说我可以开始手术了，带上了医生提前开好的三颗药就这样走进了手术室，我女朋友也陪我一起在门外等候。两点多进入手术楼层，又排了一会儿队，正好趁着排队的这段时间里平复了一下心情。正式进入手术室开始手术是三点整，至于我为什么知道时间，是因为医生在里面每做一项检查都会记录时间。之前没有进过手术室，一直以为手术室里的医生都特别严肃、专业的。但进去之后才发现里面的医生都在各自玩着手机，互相也在有一句没一句的交流着。不过，这样不仅没让我紧张，反而让我轻松下来，看来我这个手术也没啥。\n\n手术开始了，医生先给我手臂上打了一个滞留针，然后不知道挂了一瓶什么药，问了，但医生的回答没听清。然后胸口贴了垫片，鼻子上挂了氧气，用于检测手术中的生命体征。麻药是从背后打的，我也看不到，只知道貌似有一根针刺入，医生还有力的推入了好几次，不过除了有一点点胀痛也没什么。不到一分钟麻药就进入了我的肢体。很神奇，药物刚注入的那一刻，感觉不到一分钟下半身就开始传来一阵酥麻感，药效极快。更神奇的是，它真的只对我的下半身起作用，上半身和大脑完全没有丝毫影响。还可以正常思考，听医生们的交流。迅速的，我的下半身已经近乎没有知觉，仅有的触感也可能是从上半部分传递到大脑的。我是平躺着的，医生将我的大腿抬起，左右固定，有点像电视中女人生孩子的姿势。医生先是用手推了推我的屁股，虽然我的下半身已经没有知觉，但我还是能感觉到。医生也没有问我有没有知觉，只是稍等了一会儿便正式开始了手术，手术中我还一直担心会不会突然有了知觉，显然我的担心是完全多余的。只是在切割时偶尔感觉到有水滋屁屁的感觉，很轻微，也有可能是我的猜测，手术时有会有医生拿一个吸管吸走多余的血液，我看不到，听到的。\n\n整个手术持续了一个小时十分钟，四点一十的时候医生告知我手术结束了。术后医生还给我看了切下来的痣核，满满的一罐，不过我没带眼镜没看清，也不好意思说想细看一番，只是听医生说我这个很严重，切了很多。手术就这样结束了。但是在取下电片时，医生发现我身上起了红疹，以为是药物过敏但又不像。医生问我是否有什么不适，我说没有。然后告知医生我体质就是这样的，洗个澡穿个衣啥的都会红，但是没有任何不舒服，也不痒。医生一时也搞不清楚状况，提议先在手术室观察一段时间。过了一分钟另一个医生过来看看情况，发现红疹又快速消退了，很神奇，但肯定了不是药物过敏。观察了大概五分钟左右就将我推出了手术室。\n\n出手术室是下午五点，我女朋友在手术室外足足等了我三个小时。着实有点心疼了。她说她等的都快崩溃了，担心我是不是出啥意外了。要不是我下半身依然动弹不得，高低坐起来抱抱她。\n","source":"_posts/终于割掉了那坨肉.md","raw":"---\ntitle: 终于割掉了那坨肉\ncategories:\n  - 生活\ntags:\n  - 痔疮手术\nabbrlink: 28bff704\ndate: 2024-04-29 14:47:16\ncover: https://img.ixintu.com/download/jpg/202005/1e23061142c4676c22c5cff04511ad40_610_420.jpg!con\n---\n\n从高中到现在得痔疮已有十几年了，发展到现在已经十分严重 —— 环形混合痔，最严重的痔疮发展阶段。医生都感概，为何才二十六岁的我，年纪轻轻就有了这么严重的痔疮。我只能说 “没办法，搞 IT 的嘛”。\n\n我是三月二十三日周六来协和东西湖医院做的检查并办理的入院，当天回去了一趟，第二天周日才正式搬着行李入住，陪着我的还有我的女朋友。\n\n周日入住前与医生讨论了一下手术方案和风险，并签了字，家属签的是我女朋友的名字。手术前还做了几项基本检查：验血、胸透、尿常规、便常规、血压、呼吸频率等，各项数据都正常。\n\n手术前不能吃饭，只能吃流食。因为术前需要进行灌肠，“吃得多，灌得多”，这是医生的原话。所以我当天也就只吃了一块德芙巧克力、一个小的凤梨。不过，到了当天晚上七点多还是进行了两次灌肠。同病房的病友说，灌两次是正常的，一般也就灌两次。其实，我第二次灌肠也还有一点点凤梨的残渣，不过护士说不用灌了，如果再次解大便，记得拍照给她看即可。之前查小红书和知乎，别人都说灌肠很容易当众蹿稀，起初搞的我还很忐忑。但实际上也没有网上说的那么夸张，就是胶管塞进去时有一种异物感，然后灌进去时的确会有想要拉肚子的冲动，不过也不至于憋不住。我本以为一次灌肠会挺久的，实际上不到一分钟就结束了。护士说最好憋个五分钟以上，但这哪是控制的住的，进入厕所不到五分钟就立马“缴械投降”了。第一次灌肠可能灌的比较少，还坚挺了五分钟左右，第二次真是没到两分钟就喷射了。还好也就灌了两次。\n\n手术原定安排的是周一的上午，不过由于排队，等到了下午两点多。在手术前又排了一次便，不过个人感觉量不大，也就没再给护士看。一点左右临近手术前，医生过来在我的背部的正中腰间画了一个标记，说是打麻醉的标记。下午两点多医生过来说我可以开始手术了，带上了医生提前开好的三颗药就这样走进了手术室，我女朋友也陪我一起在门外等候。两点多进入手术楼层，又排了一会儿队，正好趁着排队的这段时间里平复了一下心情。正式进入手术室开始手术是三点整，至于我为什么知道时间，是因为医生在里面每做一项检查都会记录时间。之前没有进过手术室，一直以为手术室里的医生都特别严肃、专业的。但进去之后才发现里面的医生都在各自玩着手机，互相也在有一句没一句的交流着。不过，这样不仅没让我紧张，反而让我轻松下来，看来我这个手术也没啥。\n\n手术开始了，医生先给我手臂上打了一个滞留针，然后不知道挂了一瓶什么药，问了，但医生的回答没听清。然后胸口贴了垫片，鼻子上挂了氧气，用于检测手术中的生命体征。麻药是从背后打的，我也看不到，只知道貌似有一根针刺入，医生还有力的推入了好几次，不过除了有一点点胀痛也没什么。不到一分钟麻药就进入了我的肢体。很神奇，药物刚注入的那一刻，感觉不到一分钟下半身就开始传来一阵酥麻感，药效极快。更神奇的是，它真的只对我的下半身起作用，上半身和大脑完全没有丝毫影响。还可以正常思考，听医生们的交流。迅速的，我的下半身已经近乎没有知觉，仅有的触感也可能是从上半部分传递到大脑的。我是平躺着的，医生将我的大腿抬起，左右固定，有点像电视中女人生孩子的姿势。医生先是用手推了推我的屁股，虽然我的下半身已经没有知觉，但我还是能感觉到。医生也没有问我有没有知觉，只是稍等了一会儿便正式开始了手术，手术中我还一直担心会不会突然有了知觉，显然我的担心是完全多余的。只是在切割时偶尔感觉到有水滋屁屁的感觉，很轻微，也有可能是我的猜测，手术时有会有医生拿一个吸管吸走多余的血液，我看不到，听到的。\n\n整个手术持续了一个小时十分钟，四点一十的时候医生告知我手术结束了。术后医生还给我看了切下来的痣核，满满的一罐，不过我没带眼镜没看清，也不好意思说想细看一番，只是听医生说我这个很严重，切了很多。手术就这样结束了。但是在取下电片时，医生发现我身上起了红疹，以为是药物过敏但又不像。医生问我是否有什么不适，我说没有。然后告知医生我体质就是这样的，洗个澡穿个衣啥的都会红，但是没有任何不舒服，也不痒。医生一时也搞不清楚状况，提议先在手术室观察一段时间。过了一分钟另一个医生过来看看情况，发现红疹又快速消退了，很神奇，但肯定了不是药物过敏。观察了大概五分钟左右就将我推出了手术室。\n\n出手术室是下午五点，我女朋友在手术室外足足等了我三个小时。着实有点心疼了。她说她等的都快崩溃了，担心我是不是出啥意外了。要不是我下半身依然动弹不得，高低坐起来抱抱她。\n","slug":"终于割掉了那坨肉","published":1,"updated":"2024-05-16T03:39:59.606Z","comments":1,"layout":"post","photos":[],"_id":"clw8r01k0000vraen3x8gb141","content":"<p>从高中到现在得痔疮已有十几年了，发展到现在已经十分严重 —— 环形混合痔，最严重的痔疮发展阶段。医生都感概，为何才二十六岁的我，年纪轻轻就有了这么严重的痔疮。我只能说 “没办法，搞 IT 的嘛”。</p>\n<p>我是三月二十三日周六来协和东西湖医院做的检查并办理的入院，当天回去了一趟，第二天周日才正式搬着行李入住，陪着我的还有我的女朋友。</p>\n<p>周日入住前与医生讨论了一下手术方案和风险，并签了字，家属签的是我女朋友的名字。手术前还做了几项基本检查：验血、胸透、尿常规、便常规、血压、呼吸频率等，各项数据都正常。</p>\n<p>手术前不能吃饭，只能吃流食。因为术前需要进行灌肠，“吃得多，灌得多”，这是医生的原话。所以我当天也就只吃了一块德芙巧克力、一个小的凤梨。不过，到了当天晚上七点多还是进行了两次灌肠。同病房的病友说，灌两次是正常的，一般也就灌两次。其实，我第二次灌肠也还有一点点凤梨的残渣，不过护士说不用灌了，如果再次解大便，记得拍照给她看即可。之前查小红书和知乎，别人都说灌肠很容易当众蹿稀，起初搞的我还很忐忑。但实际上也没有网上说的那么夸张，就是胶管塞进去时有一种异物感，然后灌进去时的确会有想要拉肚子的冲动，不过也不至于憋不住。我本以为一次灌肠会挺久的，实际上不到一分钟就结束了。护士说最好憋个五分钟以上，但这哪是控制的住的，进入厕所不到五分钟就立马“缴械投降”了。第一次灌肠可能灌的比较少，还坚挺了五分钟左右，第二次真是没到两分钟就喷射了。还好也就灌了两次。</p>\n<p>手术原定安排的是周一的上午，不过由于排队，等到了下午两点多。在手术前又排了一次便，不过个人感觉量不大，也就没再给护士看。一点左右临近手术前，医生过来在我的背部的正中腰间画了一个标记，说是打麻醉的标记。下午两点多医生过来说我可以开始手术了，带上了医生提前开好的三颗药就这样走进了手术室，我女朋友也陪我一起在门外等候。两点多进入手术楼层，又排了一会儿队，正好趁着排队的这段时间里平复了一下心情。正式进入手术室开始手术是三点整，至于我为什么知道时间，是因为医生在里面每做一项检查都会记录时间。之前没有进过手术室，一直以为手术室里的医生都特别严肃、专业的。但进去之后才发现里面的医生都在各自玩着手机，互相也在有一句没一句的交流着。不过，这样不仅没让我紧张，反而让我轻松下来，看来我这个手术也没啥。</p>\n<p>手术开始了，医生先给我手臂上打了一个滞留针，然后不知道挂了一瓶什么药，问了，但医生的回答没听清。然后胸口贴了垫片，鼻子上挂了氧气，用于检测手术中的生命体征。麻药是从背后打的，我也看不到，只知道貌似有一根针刺入，医生还有力的推入了好几次，不过除了有一点点胀痛也没什么。不到一分钟麻药就进入了我的肢体。很神奇，药物刚注入的那一刻，感觉不到一分钟下半身就开始传来一阵酥麻感，药效极快。更神奇的是，它真的只对我的下半身起作用，上半身和大脑完全没有丝毫影响。还可以正常思考，听医生们的交流。迅速的，我的下半身已经近乎没有知觉，仅有的触感也可能是从上半部分传递到大脑的。我是平躺着的，医生将我的大腿抬起，左右固定，有点像电视中女人生孩子的姿势。医生先是用手推了推我的屁股，虽然我的下半身已经没有知觉，但我还是能感觉到。医生也没有问我有没有知觉，只是稍等了一会儿便正式开始了手术，手术中我还一直担心会不会突然有了知觉，显然我的担心是完全多余的。只是在切割时偶尔感觉到有水滋屁屁的感觉，很轻微，也有可能是我的猜测，手术时有会有医生拿一个吸管吸走多余的血液，我看不到，听到的。</p>\n<p>整个手术持续了一个小时十分钟，四点一十的时候医生告知我手术结束了。术后医生还给我看了切下来的痣核，满满的一罐，不过我没带眼镜没看清，也不好意思说想细看一番，只是听医生说我这个很严重，切了很多。手术就这样结束了。但是在取下电片时，医生发现我身上起了红疹，以为是药物过敏但又不像。医生问我是否有什么不适，我说没有。然后告知医生我体质就是这样的，洗个澡穿个衣啥的都会红，但是没有任何不舒服，也不痒。医生一时也搞不清楚状况，提议先在手术室观察一段时间。过了一分钟另一个医生过来看看情况，发现红疹又快速消退了，很神奇，但肯定了不是药物过敏。观察了大概五分钟左右就将我推出了手术室。</p>\n<p>出手术室是下午五点，我女朋友在手术室外足足等了我三个小时。着实有点心疼了。她说她等的都快崩溃了，担心我是不是出啥意外了。要不是我下半身依然动弹不得，高低坐起来抱抱她。</p>\n","cover_type":"img","excerpt":"","more":"<p>从高中到现在得痔疮已有十几年了，发展到现在已经十分严重 —— 环形混合痔，最严重的痔疮发展阶段。医生都感概，为何才二十六岁的我，年纪轻轻就有了这么严重的痔疮。我只能说 “没办法，搞 IT 的嘛”。</p>\n<p>我是三月二十三日周六来协和东西湖医院做的检查并办理的入院，当天回去了一趟，第二天周日才正式搬着行李入住，陪着我的还有我的女朋友。</p>\n<p>周日入住前与医生讨论了一下手术方案和风险，并签了字，家属签的是我女朋友的名字。手术前还做了几项基本检查：验血、胸透、尿常规、便常规、血压、呼吸频率等，各项数据都正常。</p>\n<p>手术前不能吃饭，只能吃流食。因为术前需要进行灌肠，“吃得多，灌得多”，这是医生的原话。所以我当天也就只吃了一块德芙巧克力、一个小的凤梨。不过，到了当天晚上七点多还是进行了两次灌肠。同病房的病友说，灌两次是正常的，一般也就灌两次。其实，我第二次灌肠也还有一点点凤梨的残渣，不过护士说不用灌了，如果再次解大便，记得拍照给她看即可。之前查小红书和知乎，别人都说灌肠很容易当众蹿稀，起初搞的我还很忐忑。但实际上也没有网上说的那么夸张，就是胶管塞进去时有一种异物感，然后灌进去时的确会有想要拉肚子的冲动，不过也不至于憋不住。我本以为一次灌肠会挺久的，实际上不到一分钟就结束了。护士说最好憋个五分钟以上，但这哪是控制的住的，进入厕所不到五分钟就立马“缴械投降”了。第一次灌肠可能灌的比较少，还坚挺了五分钟左右，第二次真是没到两分钟就喷射了。还好也就灌了两次。</p>\n<p>手术原定安排的是周一的上午，不过由于排队，等到了下午两点多。在手术前又排了一次便，不过个人感觉量不大，也就没再给护士看。一点左右临近手术前，医生过来在我的背部的正中腰间画了一个标记，说是打麻醉的标记。下午两点多医生过来说我可以开始手术了，带上了医生提前开好的三颗药就这样走进了手术室，我女朋友也陪我一起在门外等候。两点多进入手术楼层，又排了一会儿队，正好趁着排队的这段时间里平复了一下心情。正式进入手术室开始手术是三点整，至于我为什么知道时间，是因为医生在里面每做一项检查都会记录时间。之前没有进过手术室，一直以为手术室里的医生都特别严肃、专业的。但进去之后才发现里面的医生都在各自玩着手机，互相也在有一句没一句的交流着。不过，这样不仅没让我紧张，反而让我轻松下来，看来我这个手术也没啥。</p>\n<p>手术开始了，医生先给我手臂上打了一个滞留针，然后不知道挂了一瓶什么药，问了，但医生的回答没听清。然后胸口贴了垫片，鼻子上挂了氧气，用于检测手术中的生命体征。麻药是从背后打的，我也看不到，只知道貌似有一根针刺入，医生还有力的推入了好几次，不过除了有一点点胀痛也没什么。不到一分钟麻药就进入了我的肢体。很神奇，药物刚注入的那一刻，感觉不到一分钟下半身就开始传来一阵酥麻感，药效极快。更神奇的是，它真的只对我的下半身起作用，上半身和大脑完全没有丝毫影响。还可以正常思考，听医生们的交流。迅速的，我的下半身已经近乎没有知觉，仅有的触感也可能是从上半部分传递到大脑的。我是平躺着的，医生将我的大腿抬起，左右固定，有点像电视中女人生孩子的姿势。医生先是用手推了推我的屁股，虽然我的下半身已经没有知觉，但我还是能感觉到。医生也没有问我有没有知觉，只是稍等了一会儿便正式开始了手术，手术中我还一直担心会不会突然有了知觉，显然我的担心是完全多余的。只是在切割时偶尔感觉到有水滋屁屁的感觉，很轻微，也有可能是我的猜测，手术时有会有医生拿一个吸管吸走多余的血液，我看不到，听到的。</p>\n<p>整个手术持续了一个小时十分钟，四点一十的时候医生告知我手术结束了。术后医生还给我看了切下来的痣核，满满的一罐，不过我没带眼镜没看清，也不好意思说想细看一番，只是听医生说我这个很严重，切了很多。手术就这样结束了。但是在取下电片时，医生发现我身上起了红疹，以为是药物过敏但又不像。医生问我是否有什么不适，我说没有。然后告知医生我体质就是这样的，洗个澡穿个衣啥的都会红，但是没有任何不舒服，也不痒。医生一时也搞不清楚状况，提议先在手术室观察一段时间。过了一分钟另一个医生过来看看情况，发现红疹又快速消退了，很神奇，但肯定了不是药物过敏。观察了大概五分钟左右就将我推出了手术室。</p>\n<p>出手术室是下午五点，我女朋友在手术室外足足等了我三个小时。着实有点心疼了。她说她等的都快崩溃了，担心我是不是出啥意外了。要不是我下半身依然动弹不得，高低坐起来抱抱她。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"clw8r01js0001raen0f387ztr","category_id":"clw8r01jv0004raen7tqacl4s","_id":"clw8r01jy000iraencw3h8sc3"},{"post_id":"clw8r01jy000fraen1jxqgwu0","category_id":"clw8r01jx000craenhnee5wwd","_id":"clw8r01jz000qraenedw8hnlj"},{"post_id":"clw8r01ju0003raen06nqclvr","category_id":"clw8r01jx000craenhnee5wwd","_id":"clw8r01k0000wraen4jt76poe"},{"post_id":"clw8r01jz000mraencern2dc5","category_id":"clw8r01jx000craenhnee5wwd","_id":"clw8r01k1000zraenbionb9rw"},{"post_id":"clw8r01jw0007raen0de85iix","category_id":"clw8r01jy000jraenbtlz63cp","_id":"clw8r01k10013raenaxo27wrb"},{"post_id":"clw8r01jw0009raend619fjov","category_id":"clw8r01jy000jraenbtlz63cp","_id":"clw8r01k10015raen3wkp9s2s"},{"post_id":"clw8r01jx000braen3xp7fxct","category_id":"clw8r01k10010raene8pyh5cs","_id":"clw8r01k20019raen2cdc7etn"},{"post_id":"clw8r01jy000hraen8ygd3gvl","category_id":"clw8r01k10016raen9k597xjw","_id":"clw8r01k2001draend0esadxd"},{"post_id":"clw8r01jz000praenf6ip0pzp","category_id":"clw8r01k2001araenbqnb290y","_id":"clw8r01k2001hraen8mtv2jdf"},{"post_id":"clw8r01k0000vraen3x8gb141","category_id":"clw8r01k2001eraen9490ea7l","_id":"clw8r01k2001kraendkie0i0l"}],"PostTag":[{"post_id":"clw8r01js0001raen0f387ztr","tag_id":"clw8r01jv0005raen7163f994","_id":"clw8r01jz000nraen98t4eqq5"},{"post_id":"clw8r01js0001raen0f387ztr","tag_id":"clw8r01jx000draen308rf23e","_id":"clw8r01jz000rraen3ncd5d6k"},{"post_id":"clw8r01ju0003raen06nqclvr","tag_id":"clw8r01jz000kraen2hei9574","_id":"clw8r01k1000xraendo74a4sa"},{"post_id":"clw8r01jw0007raen0de85iix","tag_id":"clw8r01jz000traen3v3zala9","_id":"clw8r01k10014raeneba7h1d3"},{"post_id":"clw8r01jw0009raend619fjov","tag_id":"clw8r01k10011raenbdr6dp7z","_id":"clw8r01k10018raenecfx7rjy"},{"post_id":"clw8r01jx000braen3xp7fxct","tag_id":"clw8r01k10017raenguy79bur","_id":"clw8r01k2001craencenl0tzp"},{"post_id":"clw8r01jy000fraen1jxqgwu0","tag_id":"clw8r01k2001braencyrqg0bn","_id":"clw8r01k2001graen3nm02t1u"},{"post_id":"clw8r01jy000hraen8ygd3gvl","tag_id":"clw8r01k2001fraen9x556ilw","_id":"clw8r01k2001jraen7vefc4lb"},{"post_id":"clw8r01jz000mraencern2dc5","tag_id":"clw8r01k2001iraencovo0zmg","_id":"clw8r01k2001mraencqhl42mi"},{"post_id":"clw8r01jz000praenf6ip0pzp","tag_id":"clw8r01k2001lraencr9644gd","_id":"clw8r01k2001praen44a5acyh"},{"post_id":"clw8r01jz000praenf6ip0pzp","tag_id":"clw8r01k2001nraen0jzx11e9","_id":"clw8r01k2001qraeneu1hhucc"},{"post_id":"clw8r01k0000vraen3x8gb141","tag_id":"clw8r01k2001oraen33qo5ctg","_id":"clw8r01k2001rraenactu3rqx"}],"Tag":[{"name":"Butterfly","_id":"clw8r01jv0005raen7163f994"},{"name":"Hexo","_id":"clw8r01jx000draen308rf23e"},{"name":"Promise","_id":"clw8r01jz000kraen2hei9574"},{"name":"GitHub Actions","_id":"clw8r01jz000traen3v3zala9"},{"name":"GitHub Pages","_id":"clw8r01k10011raenbdr6dp7z"},{"name":"国产化适配","_id":"clw8r01k10017raenguy79bur"},{"name":"Clipboard API","_id":"clw8r01k2001braencyrqg0bn"},{"name":"文档","_id":"clw8r01k2001fraen9x556ilw"},{"name":"lazy loading","_id":"clw8r01k2001iraencovo0zmg"},{"name":"算法","_id":"clw8r01k2001lraencr9644gd"},{"name":"n 数之和","_id":"clw8r01k2001nraen0jzx11e9"},{"name":"痔疮手术","_id":"clw8r01k2001oraen33qo5ctg"}]}}